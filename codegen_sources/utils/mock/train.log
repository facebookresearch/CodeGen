
INFO - 01/14/22 12:24:45 - 0:00:00 - ============ Initialized logger ============
INFO - 01/14/22 12:24:45 - 0:00:00 - accumulate_gradients: 1
                                     add_eof_to_stream: False
                                     ae_steps: ['cpp_sa', 'java_sa', 'go_sa', 'rust_sa']
                                     amp: 2
                                     apex: False
                                     attention_dropout: 0.0
                                     batch_size: 32
                                     beam_size: 1
                                     bptt: 256
                                     bt_max_len: 1000
                                     bt_sample_temperature: 0
                                     bt_src_langs: ['cpp_sa', 'cpp_sa', 'cpp_sa', 'go_sa', 'go_sa', 'go_sa', 'java_sa', 'java_sa', 'java_sa', 'rust_sa', 'rust_sa', 'rust_sa']
                                     bt_steps: [('cpp_sa', 'go_sa', 'cpp_sa'), ('cpp_sa', 'java_sa', 'cpp_sa'), ('cpp_sa', 'rust_sa', 'cpp_sa'), ('go_sa', 'cpp_sa', 'go_sa'), ('go_sa', 'java_sa', 'go_sa'), ('go_sa', 'rust_sa', 'go_sa'), ('java_sa', 'cpp_sa', 'java_sa'), ('java_sa', 'go_sa', 'java_sa'), ('java_sa', 'rust_sa', 'java_sa'), ('rust_sa', 'cpp_sa', 'rust_sa'), ('rust_sa', 'go_sa', 'rust_sa'), ('rust_sa', 'java_sa', 'rust_sa')]
                                     cache_init_path: 
                                     cache_size: 20000
                                     cache_warmup: 500
                                     classif_steps: []
                                     clip_grad_norm: 1.0
                                     clm_steps: []
                                     cmt_steps: 
                                     command: python /private/home/broz/workdir/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/2022_01_14_07_49_58/codegen_sources/model/train.py --dump_path '/checkpoint/broz/dumped/' --save_periodic '-1' --amp 2 --fp16 true --gen_tpb_multiplier 1 --encoder_only false --has_sentence_ids 'valid|cpp_sa-go_sa,valid|cpp_sa-java_sa,valid|cpp_sa-rust_sa,valid|go_sa-java_sa,valid|go_sa-rust_sa,valid|java_sa-rust_sa,test|cpp_sa-go_sa,test|cpp_sa-java_sa,test|cpp_sa-rust_sa,test|go_sa-java_sa,test|go_sa-rust_sa,test|java_sa-rust_sa' --n_layers 0 --n_layers_decoder 6 --batch_size 32 --tokens_per_batch 3000 --n_layers_encoder 6 --emb_dim 1024 --ae_steps 'cpp_sa,java_sa,go_sa,rust_sa' --bt_steps 'cpp_sa-go_sa-cpp_sa,cpp_sa-java_sa-cpp_sa,cpp_sa-rust_sa-cpp_sa,go_sa-cpp_sa-go_sa,go_sa-java_sa-go_sa,go_sa-rust_sa-go_sa,java_sa-cpp_sa-java_sa,java_sa-go_sa-java_sa,java_sa-rust_sa-java_sa,rust_sa-cpp_sa-rust_sa,rust_sa-go_sa-rust_sa,rust_sa-java_sa-rust_sa' --n_heads 8 --dropout '0.1' --attention_dropout 0 --gelu_activation false --share_inout_emb true --sinusoidal_embeddings false --context_size 0 --word_pred '0.15' --sample_alpha 0 --word_mask_keep_rand '0.8,0.1,0.1' --word_shuffle 5 --word_dropout '0.1' --word_blank '0.2' --eval_bleu_test_only false --data_path '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/' --lgs 'cpp_sa-go_sa-java_sa-rust_sa-ir_sa' --max_vocab '-1' --min_count 0 --lg_sampling_factor '-1' --bptt 256 --max_len 2000 --bt_max_len 1000 --group_by_size true --max_batch_size 128 --split_data false --optimizer 'adam_inverse_sqrt,warmup_updates=10000,lr=0.0003,weight_decay=0.01' --clip_grad_norm 1 --epoch_size 50000 --max_epoch 10000000 --lambda_mlm 1 --lambda_clm 1 --lambda_ae '0:1,30000:0.1,100000:0' --lambda_mt 1 --lambda_bt 1 --clm_steps '' --stopping_criterion 'valid_java_sa-cpp_sa_mt_comp_acc,30' --validation_metrics 'valid_java_sa-cpp_sa_mt_comp_acc' --mt_steps '' --reload_emb '' --beam_size 1 --length_penalty 1 --early_stopping false --eval_bleu true --eval_computation 'go_sa-cpp_sa,java_sa-cpp_sa,rust_sa-cpp_sa,cpp_sa-go_sa,java_sa-go_sa,rust_sa-go_sa,cpp_sa-java_sa,go_sa-java_sa,rust_sa-java_sa,cpp_sa-rust_sa,go_sa-rust_sa,java_sa-rust_sa' --generate_hypothesis true --eval_only false --retry_mistmatching_types false --n_classes_classif 1 --translation_eval_set GfG --exp_name transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2 --reload_model '/checkpoint/broz/dumped/pretraining_for_IRs_TLM_codenet_baseline_mlm/51761341/best-valid_mlm_ppl.pth,/checkpoint/broz/dumped/pretraining_for_IRs_TLM_codenet_baseline_mlm/51761341/best-valid_mlm_ppl.pth' --lgs_mapping 'cpp_sa:cpp,rust_sa:rust,java_sa:java,go_sa:go,ir_sa:ir' --reload_encoder_for_decoder true --master_port 10471 --exp_id "52150003"
                                     context_size: 0
                                     data_path: /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/
                                     debug: False
                                     debug_slurm: False
                                     debug_train: False
                                     disc_steps: 
                                     do_steps: []
                                     dropout: 0.1
                                     dump_path: /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003
                                     early_stopping: False
                                     emb_dim: 1024
                                     emb_dim_decoder: 1024
                                     emb_dim_encoder: 1024
                                     encoder_only: False
                                     epoch_size: 50000
                                     eval_bleu: True
                                     eval_bleu_test_only: False
                                     eval_computation: [('cpp_sa', 'go_sa'), ('cpp_sa', 'java_sa'), ('cpp_sa', 'rust_sa'), ('go_sa', 'cpp_sa'), ('go_sa', 'java_sa'), ('go_sa', 'rust_sa'), ('java_sa', 'cpp_sa'), ('java_sa', 'go_sa'), ('java_sa', 'rust_sa'), ('rust_sa', 'cpp_sa'), ('rust_sa', 'go_sa'), ('rust_sa', 'java_sa')]
                                     eval_computation_pivot: []
                                     eval_computation_pivot_self: []
                                     eval_denoising: False
                                     eval_only: False
                                     eval_st: False
                                     eval_subtoken_score: False
                                     eval_temperature: None
                                     exp_id: 52150003
                                     exp_name: transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2
                                     fp16: True
                                     gelu_activation: False
                                     gen_tpb_multiplier: 1
                                     generate_hypothesis: True
                                     global_rank: 0
                                     group_by_size: True
                                     has_sentence_ids: [('valid', ('cpp_sa', 'go_sa')), ('valid', ('cpp_sa', 'java_sa')), ('valid', ('cpp_sa', 'rust_sa')), ('valid', ('go_sa', 'java_sa')), ('valid', ('go_sa', 'rust_sa')), ('valid', ('java_sa', 'rust_sa')), ('test', ('cpp_sa', 'go_sa')), ('test', ('cpp_sa', 'java_sa')), ('test', ('cpp_sa', 'rust_sa')), ('test', ('go_sa', 'java_sa')), ('test', ('go_sa', 'rust_sa')), ('test', ('java_sa', 'rust_sa'))]
                                     id2lang: {0: 'cpp_sa', 1: 'go_sa', 2: 'ir_sa', 3: 'java_sa', 4: 'rust_sa'}
                                     is_master: True
                                     is_slurm_job: True
                                     lambda_ae: 0:1,30000:0.1,100000:0
                                     lambda_bt: 1
                                     lambda_classif: 1
                                     lambda_clm: 1
                                     lambda_do: 1
                                     lambda_mlm: 1
                                     lambda_mt: 1
                                     lambda_st: 1
                                     lang2id: {'cpp_sa': 0, 'go_sa': 1, 'ir_sa': 2, 'java_sa': 3, 'rust_sa': 4}
                                     langs: ['cpp_sa', 'go_sa', 'java_sa', 'rust_sa', 'ir_sa']
                                     length_penalty: 1.0
                                     lg_sampling_factor: -1.0
                                     lgs: cpp_sa-go_sa-java_sa-rust_sa-ir_sa
                                     lgs_id_mapping: 
                                     lgs_mapping: cpp_sa:cpp,rust_sa:rust,java_sa:java,go_sa:go,ir_sa:ir
                                     local_rank: 0
                                     mask_length: None
                                     mask_length_dist: None
                                     master_addr: learnfair0881
                                     master_port: 10471
                                     max_batch_size: 128
                                     max_epoch: 10000000
                                     max_len: 2000
                                     max_vocab: -1
                                     min_count: 0
                                     mlm_steps: []
                                     mono_dataset: {'cpp_sa': {'train': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/train.cpp_sa.pth', 'valid': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa.pth', 'test': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa.pth'}, 'go_sa': {'train': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/train.go_sa.pth', 'valid': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa.pth', 'test': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa.pth'}, 'java_sa': {'train': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/train.java_sa.pth', 'valid': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.java_sa.pth', 'test': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.java_sa.pth'}, 'rust_sa': {'train': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/train.rust_sa.pth', 'valid': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.rust_sa.pth', 'test': '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.rust_sa.pth'}}
                                     mt_spans_steps: []
                                     mt_steps: []
                                     multi_gpu: True
                                     multi_node: True
                                     n_classes_classif: 1
                                     n_gpu_per_node: 8
                                     n_heads: 8
                                     n_langs: 5
                                     n_layers: 0
                                     n_layers_decoder: 6
                                     n_layers_encoder: 6
                                     n_nodes: 4
                                     n_sentences_eval: 1500
                                     n_share_dec: 0
                                     node_id: 0
                                     number_samples: 1
                                     obf_proba: 0.5
                                     optimizer: adam_inverse_sqrt,warmup_updates=10000,lr=0.0003,weight_decay=0.01
                                     para_dataset: {('cpp_sa', 'go_sa'): {'valid': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-go_sa.cpp_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-go_sa.go_sa.pth'), 'test': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-go_sa.cpp_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-go_sa.go_sa.pth')}, ('cpp_sa', 'java_sa'): {'valid': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-java_sa.cpp_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-java_sa.java_sa.pth'), 'test': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-java_sa.cpp_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-java_sa.java_sa.pth')}, ('cpp_sa', 'rust_sa'): {'valid': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-rust_sa.cpp_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-rust_sa.rust_sa.pth'), 'test': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-rust_sa.cpp_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-rust_sa.rust_sa.pth')}, ('go_sa', 'java_sa'): {'valid': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa-java_sa.go_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa-java_sa.java_sa.pth'), 'test': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa-java_sa.go_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa-java_sa.java_sa.pth')}, ('go_sa', 'rust_sa'): {'valid': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa-rust_sa.go_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa-rust_sa.rust_sa.pth'), 'test': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa-rust_sa.go_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa-rust_sa.rust_sa.pth')}, ('java_sa', 'rust_sa'): {'valid': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.java_sa-rust_sa.java_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.java_sa-rust_sa.rust_sa.pth'), 'test': ('/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.java_sa-rust_sa.java_sa.pth', '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.java_sa-rust_sa.rust_sa.pth')}}
                                     pivot_bpe_model: 
                                     poisson_lambda: 3.0
                                     reload_checkpoint: 
                                     reload_classifier: 
                                     reload_emb: 
                                     reload_encoder_attn_on_decoder: False
                                     reload_encoder_for_decoder: True
                                     reload_model: /checkpoint/broz/dumped/pretraining_for_IRs_TLM_codenet_baseline_mlm/51761341/best-valid_mlm_ppl.pth,/checkpoint/broz/dumped/pretraining_for_IRs_TLM_codenet_baseline_mlm/51761341/best-valid_mlm_ppl.pth
                                     retry_mistmatching_types: False
                                     roberta_mode: False
                                     robin_cache: False
                                     sample_alpha: 0.0
                                     save_periodic: -1
                                     separate_decoders: False
                                     share_inout_emb: True
                                     sinusoidal_embeddings: False
                                     spans_emb_encoder: False
                                     split_data: False
                                     split_data_accross_gpu: local
                                     st_beam_size: 1
                                     st_length_penalty: 0.5
                                     st_limit_tokens_per_batch: True
                                     st_min_asserts: 2
                                     st_min_mutation_score: 0.9
                                     st_refresh_iterator_rate: -1
                                     st_remove_proba: 0.0
                                     st_sample_cache_ratio: 2
                                     st_sample_size: 1
                                     st_sample_temperature: 0
                                     st_show_stats: False
                                     st_src_langs: []
                                     st_steps: []
                                     st_test_timeout: 15
                                     st_tgt_langs: []
                                     stopping_criterion: valid_java_sa-cpp_sa_mt_comp_acc,30
                                     tokens_per_batch: 3000
                                     train_only: False
                                     translation_eval_set: GfG
                                     unit_tests_path: 
                                     use_classifier: False
                                     use_lang_emb: True
                                     validation_metrics: valid_java_sa-cpp_sa_mt_comp_acc
                                     word_blank: 0.2
                                     word_dropout: 0.1
                                     word_keep: 0.1
                                     word_mask: 0.8
                                     word_mask_keep_rand: 0.8,0.1,0.1
                                     word_pred: 0.15
                                     word_rand: 0.1
                                     word_shuffle: 5.0
                                     world_size: 32
INFO - 01/14/22 12:24:45 - 0:00:00 - The experiment will be stored in /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003
                                     
INFO - 01/14/22 12:24:45 - 0:00:00 - Running command: python /private/home/broz/workdir/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/2022_01_14_07_49_58/codegen_sources/model/train.py --dump_path '/checkpoint/broz/dumped/' --save_periodic '-1' --amp 2 --fp16 true --gen_tpb_multiplier 1 --encoder_only false --has_sentence_ids 'valid|cpp_sa-go_sa,valid|cpp_sa-java_sa,valid|cpp_sa-rust_sa,valid|go_sa-java_sa,valid|go_sa-rust_sa,valid|java_sa-rust_sa,test|cpp_sa-go_sa,test|cpp_sa-java_sa,test|cpp_sa-rust_sa,test|go_sa-java_sa,test|go_sa-rust_sa,test|java_sa-rust_sa' --n_layers 0 --n_layers_decoder 6 --batch_size 32 --tokens_per_batch 3000 --n_layers_encoder 6 --emb_dim 1024 --ae_steps 'cpp_sa,java_sa,go_sa,rust_sa' --bt_steps 'cpp_sa-go_sa-cpp_sa,cpp_sa-java_sa-cpp_sa,cpp_sa-rust_sa-cpp_sa,go_sa-cpp_sa-go_sa,go_sa-java_sa-go_sa,go_sa-rust_sa-go_sa,java_sa-cpp_sa-java_sa,java_sa-go_sa-java_sa,java_sa-rust_sa-java_sa,rust_sa-cpp_sa-rust_sa,rust_sa-go_sa-rust_sa,rust_sa-java_sa-rust_sa' --n_heads 8 --dropout '0.1' --attention_dropout 0 --gelu_activation false --share_inout_emb true --sinusoidal_embeddings false --context_size 0 --word_pred '0.15' --sample_alpha 0 --word_mask_keep_rand '0.8,0.1,0.1' --word_shuffle 5 --word_dropout '0.1' --word_blank '0.2' --eval_bleu_test_only false --data_path '/private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/' --lgs 'cpp_sa-go_sa-java_sa-rust_sa-ir_sa' --max_vocab '-1' --min_count 0 --lg_sampling_factor '-1' --bptt 256 --max_len 2000 --bt_max_len 1000 --group_by_size true --max_batch_size 128 --split_data false --optimizer 'adam_inverse_sqrt,warmup_updates=10000,lr=0.0003,weight_decay=0.01' --clip_grad_norm 1 --epoch_size 50000 --max_epoch 10000000 --lambda_mlm 1 --lambda_clm 1 --lambda_ae '0:1,30000:0.1,100000:0' --lambda_mt 1 --lambda_bt 1 --clm_steps '' --stopping_criterion 'valid_java_sa-cpp_sa_mt_comp_acc,30' --validation_metrics 'valid_java_sa-cpp_sa_mt_comp_acc' --mt_steps '' --reload_emb '' --beam_size 1 --length_penalty 1 --early_stopping false --eval_bleu true --eval_computation 'go_sa-cpp_sa,java_sa-cpp_sa,rust_sa-cpp_sa,cpp_sa-go_sa,java_sa-go_sa,rust_sa-go_sa,cpp_sa-java_sa,go_sa-java_sa,rust_sa-java_sa,cpp_sa-rust_sa,go_sa-rust_sa,java_sa-rust_sa' --generate_hypothesis true --eval_only false --retry_mistmatching_types false --n_classes_classif 1 --translation_eval_set GfG --exp_name transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2 --reload_model '/checkpoint/broz/dumped/pretraining_for_IRs_TLM_codenet_baseline_mlm/51761341/best-valid_mlm_ppl.pth,/checkpoint/broz/dumped/pretraining_for_IRs_TLM_codenet_baseline_mlm/51761341/best-valid_mlm_ppl.pth' --lgs_mapping 'cpp_sa:cpp,rust_sa:rust,java_sa:java,go_sa:go,ir_sa:ir' --reload_encoder_for_decoder true --master_port 10471

WARNING - 01/14/22 12:24:45 - 0:00:00 - Signal handler installed.
INFO - 01/14/22 12:24:45 - 0:00:00 - ============ Monolingual data (cpp_sa)
INFO - 01/14/22 12:24:45 - 0:00:00 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/train.cpp_sa.0.pth ...
INFO - 01/14/22 12:24:51 - 0:00:06 - 291278967 words (64472 unique) in 827235 sentences. 12503 unknown words (1192 unique) covering 0.00% of the data.
INFO - 01/14/22 12:24:53 - 0:00:09 - Removed 0 empty sentences.
INFO - 01/14/22 12:24:54 - 0:00:09 - Removed 0 empty sentences.
INFO - 01/14/22 12:24:54 - 0:00:09 - Removed 18016 too long sentences.

INFO - 01/14/22 12:24:54 - 0:00:09 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa.pth ...
INFO - 01/14/22 12:24:54 - 0:00:09 - 62071 words (64472 unique) in 470 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:24:54 - 0:00:09 - Removed 0 empty sentences.

INFO - 01/14/22 12:24:54 - 0:00:09 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa.pth ...
INFO - 01/14/22 12:24:54 - 0:00:09 - 127548 words (64472 unique) in 948 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:24:54 - 0:00:09 - Removed 0 empty sentences.

INFO - 01/14/22 12:24:54 - 0:00:09 - ============ Monolingual data (go_sa)
INFO - 01/14/22 12:24:54 - 0:00:09 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/train.go_sa.0.pth ...
INFO - 01/14/22 12:24:59 - 0:00:14 - 240020083 words (64472 unique) in 1171315 sentences. 5874 unknown words (1274 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:01 - 0:00:17 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:02 - 0:00:17 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:02 - 0:00:17 - Removed 9220 too long sentences.

INFO - 01/14/22 12:25:02 - 0:00:17 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa.pth ...
INFO - 01/14/22 12:25:02 - 0:00:17 - 20093 words (64472 unique) in 161 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:02 - 0:00:17 - Removed 0 empty sentences.

INFO - 01/14/22 12:25:02 - 0:00:17 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa.pth ...
INFO - 01/14/22 12:25:02 - 0:00:17 - 41496 words (64472 unique) in 330 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:02 - 0:00:17 - Removed 0 empty sentences.

INFO - 01/14/22 12:25:02 - 0:00:17 - ============ Monolingual data (java_sa)
INFO - 01/14/22 12:25:02 - 0:00:17 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/train.java_sa.0.pth ...
INFO - 01/14/22 12:25:06 - 0:00:21 - 181605779 words (64472 unique) in 970901 sentences. 13818 unknown words (3250 unique) covering 0.01% of the data.
INFO - 01/14/22 12:25:07 - 0:00:23 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:08 - 0:00:23 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:08 - 0:00:23 - Removed 5320 too long sentences.

INFO - 01/14/22 12:25:08 - 0:00:23 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.java_sa.pth ...
INFO - 01/14/22 12:25:08 - 0:00:23 - 66534 words (64472 unique) in 470 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:08 - 0:00:23 - Removed 0 empty sentences.

INFO - 01/14/22 12:25:08 - 0:00:23 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.java_sa.pth ...
INFO - 01/14/22 12:25:08 - 0:00:23 - 137639 words (64472 unique) in 948 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:08 - 0:00:23 - Removed 0 empty sentences.

INFO - 01/14/22 12:25:08 - 0:00:23 - ============ Monolingual data (rust_sa)
INFO - 01/14/22 12:25:08 - 0:00:23 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/train.rust_sa.0.pth ...
INFO - 01/14/22 12:25:08 - 0:00:23 - 16252493 words (64472 unique) in 72126 sentences. 1028 unknown words (307 unique) covering 0.01% of the data.
INFO - 01/14/22 12:25:08 - 0:00:24 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:08 - 0:00:24 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:08 - 0:00:24 - Removed 601 too long sentences.

INFO - 01/14/22 12:25:08 - 0:00:24 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.rust_sa.pth ...
INFO - 01/14/22 12:25:08 - 0:00:24 - 25459 words (64472 unique) in 151 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:09 - 0:00:24 - Removed 0 empty sentences.

INFO - 01/14/22 12:25:09 - 0:00:24 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.rust_sa.pth ...
INFO - 01/14/22 12:25:09 - 0:00:24 - 56992 words (64472 unique) in 313 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:09 - 0:00:24 - Removed 0 empty sentences.


INFO - 01/14/22 12:25:09 - 0:00:24 - ============ Parallel data (cpp_sa-go_sa)
INFO - 01/14/22 12:25:09 - 0:00:24 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-go_sa.cpp_sa.pth ...
INFO - 01/14/22 12:25:09 - 0:00:24 - 15955 words (64472 unique) in 161 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:09 - 0:00:24 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-go_sa.go_sa.pth ...
INFO - 01/14/22 12:25:09 - 0:00:24 - 20093 words (64472 unique) in 161 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:09 - 0:00:24 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:09 - 0:00:24 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:09 - 0:00:24 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:09 - 0:00:24 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-go_sa.cpp_sa.pth ...
INFO - 01/14/22 12:25:09 - 0:00:24 - 33838 words (64472 unique) in 330 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:09 - 0:00:24 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-go_sa.go_sa.pth ...
INFO - 01/14/22 12:25:09 - 0:00:24 - 41496 words (64472 unique) in 330 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:09 - 0:00:25 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:09 - 0:00:25 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:09 - 0:00:25 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:09 - 0:00:25 - ============ Parallel data (cpp_sa-java_sa)
INFO - 01/14/22 12:25:09 - 0:00:25 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-java_sa.cpp_sa.pth ...
INFO - 01/14/22 12:25:09 - 0:00:25 - 62071 words (64472 unique) in 470 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:09 - 0:00:25 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-java_sa.java_sa.pth ...
INFO - 01/14/22 12:25:09 - 0:00:25 - 66534 words (64472 unique) in 470 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:10 - 0:00:25 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:10 - 0:00:25 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:10 - 0:00:25 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:10 - 0:00:25 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-java_sa.cpp_sa.pth ...
INFO - 01/14/22 12:25:10 - 0:00:25 - 127548 words (64472 unique) in 948 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:10 - 0:00:25 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-java_sa.java_sa.pth ...
INFO - 01/14/22 12:25:10 - 0:00:25 - 137639 words (64472 unique) in 948 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:10 - 0:00:25 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:10 - 0:00:25 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:10 - 0:00:25 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:10 - 0:00:25 - ============ Parallel data (cpp_sa-rust_sa)
INFO - 01/14/22 12:25:10 - 0:00:25 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-rust_sa.cpp_sa.pth ...
INFO - 01/14/22 12:25:10 - 0:00:25 - 15890 words (64472 unique) in 151 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:10 - 0:00:25 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.cpp_sa-rust_sa.rust_sa.pth ...
INFO - 01/14/22 12:25:10 - 0:00:25 - 25459 words (64472 unique) in 151 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:10 - 0:00:25 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:10 - 0:00:25 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:10 - 0:00:25 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:10 - 0:00:25 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-rust_sa.cpp_sa.pth ...
INFO - 01/14/22 12:25:10 - 0:00:26 - 33650 words (64472 unique) in 313 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:10 - 0:00:26 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.cpp_sa-rust_sa.rust_sa.pth ...
INFO - 01/14/22 12:25:10 - 0:00:26 - 56992 words (64472 unique) in 313 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:11 - 0:00:26 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:11 - 0:00:26 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:11 - 0:00:26 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:11 - 0:00:26 - ============ Parallel data (go_sa-java_sa)
INFO - 01/14/22 12:25:11 - 0:00:26 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa-java_sa.go_sa.pth ...
INFO - 01/14/22 12:25:11 - 0:00:26 - 20093 words (64472 unique) in 161 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:11 - 0:00:26 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa-java_sa.java_sa.pth ...
INFO - 01/14/22 12:25:11 - 0:00:26 - 16498 words (64472 unique) in 161 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:11 - 0:00:26 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:11 - 0:00:26 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:11 - 0:00:26 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:11 - 0:00:26 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa-java_sa.go_sa.pth ...
INFO - 01/14/22 12:25:11 - 0:00:26 - 41496 words (64472 unique) in 330 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:11 - 0:00:26 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa-java_sa.java_sa.pth ...
INFO - 01/14/22 12:25:11 - 0:00:26 - 35325 words (64472 unique) in 330 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:11 - 0:00:26 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:11 - 0:00:26 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:11 - 0:00:26 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:11 - 0:00:26 - ============ Parallel data (go_sa-rust_sa)
INFO - 01/14/22 12:25:11 - 0:00:26 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa-rust_sa.go_sa.pth ...
INFO - 01/14/22 12:25:11 - 0:00:26 - 17507 words (64472 unique) in 141 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:11 - 0:00:26 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.go_sa-rust_sa.rust_sa.pth ...
INFO - 01/14/22 12:25:11 - 0:00:26 - 22854 words (64472 unique) in 141 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:11 - 0:00:27 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:11 - 0:00:27 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:11 - 0:00:27 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:11 - 0:00:27 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa-rust_sa.go_sa.pth ...
INFO - 01/14/22 12:25:11 - 0:00:27 - 36331 words (64472 unique) in 293 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:11 - 0:00:27 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.go_sa-rust_sa.rust_sa.pth ...
INFO - 01/14/22 12:25:11 - 0:00:27 - 51967 words (64472 unique) in 293 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:12 - 0:00:27 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:12 - 0:00:27 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:12 - 0:00:27 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:12 - 0:00:27 - ============ Parallel data (java_sa-rust_sa)
INFO - 01/14/22 12:25:12 - 0:00:27 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.java_sa-rust_sa.java_sa.pth ...
INFO - 01/14/22 12:25:12 - 0:00:27 - 16354 words (64472 unique) in 151 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:12 - 0:00:27 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/valid.java_sa-rust_sa.rust_sa.pth ...
INFO - 01/14/22 12:25:12 - 0:00:27 - 25459 words (64472 unique) in 151 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:12 - 0:00:27 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:12 - 0:00:27 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:12 - 0:00:27 - Removed 0 too long sentences.

INFO - 01/14/22 12:25:12 - 0:00:27 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.java_sa-rust_sa.java_sa.pth ...
INFO - 01/14/22 12:25:12 - 0:00:27 - 34897 words (64472 unique) in 313 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:12 - 0:00:27 - Loading data from /private/home/broz/datasets/CodeGen/data/2021_10_27_monolingual_func_dataset_cpp_go_java_rust/XLM-syml-gfg-ir/test.java_sa-rust_sa.rust_sa.pth ...
INFO - 01/14/22 12:25:12 - 0:00:27 - 56992 words (64472 unique) in 313 sentences. 0 unknown words (0 unique) covering 0.00% of the data.
INFO - 01/14/22 12:25:12 - 0:00:28 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:12 - 0:00:28 - Removed 0 empty sentences.
INFO - 01/14/22 12:25:12 - 0:00:28 - Removed 0 too long sentences.


INFO - 01/14/22 12:25:12 - 0:00:28 - ============ Data summary
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   - train -       cpp_sa:    827235
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   - valid -       cpp_sa:       470
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   -  test -       cpp_sa:       948
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   - train -        go_sa:   1171315
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   - valid -        go_sa:       161
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   -  test -        go_sa:       330
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   - train -      java_sa:    970901
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   - valid -      java_sa:       470
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   -  test -      java_sa:       948
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   - train -      rust_sa:     72126
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   - valid -      rust_sa:       151
INFO - 01/14/22 12:25:12 - 0:00:28 - Monolingual data   -  test -      rust_sa:       313
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      - valid - cpp_sa-go_sa:       161
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      -  test - cpp_sa-go_sa:       330
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      - valid - cpp_sa-java_sa:       470
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      -  test - cpp_sa-java_sa:       948
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      - valid - cpp_sa-rust_sa:       151
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      -  test - cpp_sa-rust_sa:       313
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      - valid - go_sa-java_sa:       161
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      -  test - go_sa-java_sa:       330
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      - valid - go_sa-rust_sa:       141
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      -  test - go_sa-rust_sa:       293
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      - valid - java_sa-rust_sa:       151
INFO - 01/14/22 12:25:12 - 0:00:28 - Parallel data      -  test - java_sa-rust_sa:       313

INFO - 01/14/22 12:25:12 - 0:00:28 - MEMORY (before build modules) : 455.90059661865234
INFO - 01/14/22 12:25:18 - 0:00:33 - ============ Model Reloading
INFO - 01/14/22 12:25:18 - 0:00:33 - Reloading encoder from /checkpoint/broz/dumped/pretraining_for_IRs_TLM_codenet_baseline_mlm/51761341/best-valid_mlm_ppl.pth ...
WARNING - 01/14/22 12:25:21 - 0:00:37 - When reloading word embeddings, could not find embeddings for 472 words: ['闰@@', '闷', '阜', '阵', '陀', '...', 'ၦ', 'ၨ', 'ၪ', 'ၲ', 'ၸ']... Initializing them to < unk >.
WARNING - 01/14/22 12:25:22 - 0:00:38 - Lang cpp_sa matched to pretrained cpp lang embedding.
WARNING - 01/14/22 12:25:22 - 0:00:38 - Lang go_sa matched to pretrained go lang embedding.
WARNING - 01/14/22 12:25:22 - 0:00:38 - Lang ir_sa matched to pretrained ir lang embedding.
WARNING - 01/14/22 12:25:22 - 0:00:38 - Lang java_sa matched to pretrained java lang embedding.
WARNING - 01/14/22 12:25:22 - 0:00:38 - Lang rust_sa matched to pretrained rust lang embedding.
INFO - 01/14/22 12:25:22 - 0:00:38 - Reloading decoders from /checkpoint/broz/dumped/pretraining_for_IRs_TLM_codenet_baseline_mlm/51761341/best-valid_mlm_ppl.pth ...
WARNING - 01/14/22 12:25:23 - 0:00:39 - When reloading word embeddings, could not find embeddings for 472 words: ['闰@@', '闷', '阜', '阵', '陀', '...', 'ၦ', 'ၨ', 'ၪ', 'ၲ', 'ၸ']... Initializing them to < unk >.
WARNING - 01/14/22 12:25:24 - 0:00:39 - Lang cpp_sa matched to pretrained cpp lang embedding.
WARNING - 01/14/22 12:25:24 - 0:00:39 - Lang go_sa matched to pretrained go lang embedding.
WARNING - 01/14/22 12:25:24 - 0:00:39 - Lang ir_sa matched to pretrained ir lang embedding.
WARNING - 01/14/22 12:25:24 - 0:00:39 - Lang java_sa matched to pretrained java lang embedding.
WARNING - 01/14/22 12:25:24 - 0:00:39 - Lang rust_sa matched to pretrained rust lang embedding.
WARNING - 01/14/22 12:25:24 - 0:00:39 - Parameter layer_norm15.0.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:39 - Parameter layer_norm15.0.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:39 - Parameter encoder_attn.0.q_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.0.q_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.0.k_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.0.k_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.0.v_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.0.v_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.0.out_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.0.out_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.1.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.1.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.1.q_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.1.q_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.1.k_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.1.k_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.1.v_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.1.v_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.1.out_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.1.out_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.2.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.2.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.2.q_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.2.q_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.2.k_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.2.k_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.2.v_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.2.v_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.2.out_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.2.out_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.3.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.3.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.3.q_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.3.q_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.3.k_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.3.k_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.3.v_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.3.v_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.3.out_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.3.out_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.4.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.4.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.4.q_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.4.q_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.4.k_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.4.k_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.4.v_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.4.v_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.4.out_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.4.out_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.5.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter layer_norm15.5.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.5.q_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.5.q_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.5.k_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.5.k_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.5.v_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.5.v_lin.bias not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.5.out_lin.weight not found.
WARNING - 01/14/22 12:25:24 - 0:00:40 - Parameter encoder_attn.5.out_lin.bias not found.
DEBUG - 01/14/22 12:25:24 - 0:00:40 - Encoder: TransformerModel(
                                        (position_embeddings): Embedding(2048, 1024)
                                        (lang_embeddings): Embedding(5, 1024)
                                        (embeddings): Embedding(64472, 1024, padding_idx=2)
                                        (layer_norm_emb): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                        (attentions): ModuleList(
                                          (0): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (1): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (2): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (3): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (4): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (5): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                        )
                                        (layer_norm1): ModuleList(
                                          (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (3): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (4): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (5): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                        )
                                        (ffns): ModuleList(
                                          (0): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (1): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (2): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (3): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (4): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (5): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                        )
                                        (layer_norm2): ModuleList(
                                          (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (3): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (4): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (5): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                        )
                                        (pred_layer): PredLayer(
                                          (proj): Linear(in_features=1024, out_features=64472, bias=True)
                                        )
                                      )
DEBUG - 01/14/22 12:25:24 - 0:00:40 - Decoder: [TransformerModel(
                                        (position_embeddings): Embedding(2048, 1024)
                                        (lang_embeddings): Embedding(5, 1024)
                                        (embeddings): Embedding(64472, 1024, padding_idx=2)
                                        (layer_norm_emb): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                        (attentions): ModuleList(
                                          (0): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (1): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (2): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (3): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (4): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (5): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                        )
                                        (layer_norm1): ModuleList(
                                          (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (3): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (4): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (5): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                        )
                                        (ffns): ModuleList(
                                          (0): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (1): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (2): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (3): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (4): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                          (5): TransformerFFN(
                                            (lin1): Linear(in_features=1024, out_features=4096, bias=True)
                                            (lin2): Linear(in_features=4096, out_features=1024, bias=True)
                                          )
                                        )
                                        (layer_norm2): ModuleList(
                                          (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (3): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (4): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (5): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                        )
                                        (layer_norm15): ModuleList(
                                          (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (3): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (4): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                          (5): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
                                        )
                                        (encoder_attn): ModuleList(
                                          (0): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (1): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (2): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (3): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (4): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                          (5): MultiHeadAttention(
                                            (q_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (k_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (v_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                            (out_lin): Linear(in_features=1024, out_features=1024, bias=True)
                                          )
                                        )
                                        (pred_layer): PredLayer(
                                          (proj): Linear(in_features=1024, out_features=64472, bias=True)
                                        )
                                      )]
INFO - 01/14/22 12:25:24 - 0:00:40 - Number of parameters (encoder): 143765464
INFO - 01/14/22 12:25:24 - 0:00:40 - Number of parameters (decoders): 168968152
INFO - 01/14/22 12:25:24 - 0:00:40 - Number of decoders: 1

INFO - 01/14/22 12:25:25 - 0:00:40 - MEMORY (before build classifier) : 449.4048309326172
INFO - 01/14/22 12:25:25 - 0:00:40 - Found 264 parameters in model.
INFO - 01/14/22 12:25:25 - 0:00:40 - Using nn.parallel.DistributedDataParallel ...
INFO - 01/14/22 12:25:33 - 0:00:48 - Optimizers: model
INFO - 01/14/22 12:25:33 - 0:00:48 - Using torch.cuda.amp GradScaler for fp16 optimization
INFO - 01/14/22 12:25:45 - 0:01:00 - MEMORY (after building all models) : 450.0723075866699
INFO - 01/14/22 12:25:45 - 0:01:00 - ============ Starting epoch 0 ... ============
INFO - 01/14/22 12:25:45 - 0:01:00 - Creating new training data iterator (ae,cpp_sa) ...

INFO - 01/14/22 12:25:45 - 0:01:00 - ========== Train cpp_sa-cpp_sa example ==========
INFO - 01/14/22 12:25:45 - 0:01:00 - source sent: </s> Hel<special1> <special1> Gossipnpc_a pirat_tan<special1> ( <special1> pPlayer Creature pCreature * ) npc_ir{ pat_AI <special1> * apir<special1> <special1> npc_at= tanat_p<special1> AI * ) -> pCreature <special1> <special1> if ; <special1> <special1> atirAI { ) error_log npc " _ pi<special1> rat ▁ Couldn <special1> find t ' ▁ patAI ir▁ ▁ of with <special1> ▁ ▁ ▁ % " entry u GetEntry -> <special1> ) <special1> } ; if pPlayer -> ( 9GetQuestStatus ) 1002 QUEST_STATUS_== || GetQuest-> Status Reward( 91002 <special1> ) ) pPlayer <special1> Send-> Menu ( 1 Gossip, -> GetGUID <special1> ( ; ) ) return true ; } if -> <special1> GetQuestStatus pPlayer ( 9<special1> ) <special1> // COMPLETE <special1> ▁ <special1> - <special1> ▁ <special1> GetQuestStatus ( 9<special1> 1001 ▁ = <special1> STATUS <special1> <special1> _ ) <special1> { <special1> if p! <special1> -> atAI <special1> ThatPlayer ( pPlayer -> <special1> GetGUIDLow ) ) ( return <special1> false p<special1> atirAI -> <special1> ) ( ) <special1> pPlayer -> <special1> ADD_GOSSIP_ITEM GOSSIP_ICON_CHAT Po, " it <special1> <special1> <special1> <special1> " GOSSIP_SENDER_MAIN + ) <special1> <special1> break ; ; <special1> : case pPlayer -> <special1> , <special1> " eptat Z▁ <special1> , de ▁ k▁ izta kn▁ ka a <special1> rub, je GOSSIP_SENDER_MAIN <special1> <special1> , + ) break ; <special1> 3 case -> Menu PreparepCreature ( Quest<special1> ( GetGUID <special1> <special1> ) ; case : <special1> 99 ; break <special1> -> pPlayer PlayerTalkClass -> <special1> Menu <special1> 1 pCreature ( , -> ) <special1> ) return true ; } <special1> <special1> CastSpell , 233<special1> ( 82 <special1> <special1> ) ( ; switch <special1> urand <special1> <special1> <special1> ) : 1 pCreature <special1> ( MonsterSay Aa" . arghh , <special1> UNIVERSAL <special1> <special1> ; <special1> 2 ; <special1> case : <special1> -> " ( OdSay j<special1> <special1> " , <special1> LANG_<special1> ) break <special1> ; <special1> 3 <special1> pCreature -> : <special1> Say Gr<special1> " rr . . . " <special1> <special1> <special1> ; 0 <special1> ) ; <special1> -> case : Monster( <special1> mi" " ! z UNIVERSAL , 0 LANG_) break ; ; : <special1> default <special1> return } ; <special1> } </s>
INFO - 01/14/22 12:25:45 - 0:01:00 - target sent: </s> bool GossipHello_npc_pirat_tana ( Player * pPlayer , Creature * pCreature ) { npc_pirat_tanaAI * piratAI = ( npc_pirat_tanaAI * ) pCreature -> AI ( ) ; if ( ! piratAI ) { error_log ( " npc _ pirat : ▁ Couldn ' t ▁ find ▁ piratAI ▁ of ▁ creature ▁ with ▁ entry ▁ % u " , pCreature -> GetEntry ( ) ) ; return false ; } if ( pPlayer -> GetQuestStatus ( 91002 ) == QUEST_STATUS_COMPLETE || pPlayer -> GetQuestRewardStatus ( 91002 ) ) { pPlayer -> PlayerTalkClass -> SendGossipMenu ( 1 , pCreature -> GetGUID ( ) ) ; return true ; } if ( pPlayer -> GetQuestStatus ( 91001 ) == QUEST_STATUS_COMPLETE ) // ▁ | | ▁ pPlayer - > GetQuestStatus ( 91001 ) ▁ = = ▁ QUEST _ STATUS _ NONE ) ENDCOM { if ( ! piratAI -> IsThatPlayer ( pPlayer -> GetGUIDLow ( ) ) ) return false ; switch ( piratAI -> GetPhase ( ) ) { default : pPlayer -> ADD_GOSSIP_ITEM ( GOSSIP_ICON_CHAT , " Pozdravit " , GOSSIP_SENDER_MAIN , GOSSIP_ACTION_INFO_DEF + 1 ) ; break ; case 2 : pPlayer -> ADD_GOSSIP_ITEM ( GOSSIP_ICON_CHAT , " Zeptat ▁ se , ▁ kde ▁ ta ▁ knizka ▁ zhruba ▁ je " , GOSSIP_SENDER_MAIN , GOSSIP_ACTION_INFO_DEF + 2 ) ; break ; case 3 : pPlayer -> PrepareQuestMenu ( pCreature -> GetGUID ( ) ) ; break ; case 99 : break ; } pPlayer -> PlayerTalkClass -> SendGossipMenu ( 1 , pCreature -> GetGUID ( ) ) ; return true ; } pCreature -> CastSpell ( pPlayer , 23382 , true ) ; switch ( urand ( 1 , 5 ) ) { case 1 : pCreature -> MonsterSay ( " Aaarghh . . . " , LANG_UNIVERSAL , 0 ) ; break ; case 2 : pCreature -> MonsterSay ( " Odprejskni ! " , LANG_UNIVERSAL , 0 ) ; break ; case 3 : pCreature -> MonsterSay ( " Grrrr . . . " , LANG_UNIVERSAL , 0 ) ; break ; case 4 : pCreature -> MonsterSay ( " Zmiz ! " , LANG_UNIVERSAL , 0 ) ; break ; default : break ; } return true ; } </s>

INFO - 01/14/22 12:25:45 - 0:01:00 - source tok: </s> Hel@@ <special1> <special1> Gossip@@ npc_@@ a p@@ ir@@ at_@@ tan@@ <special1> ( <special1> pPlayer Creature pCreature * ) npc_@@ ir@@ { p@@ at_@@ AI <special1> * a@@ p@@ ir@@ <special1> <special1> npc_@@ at@@ = tan@@ at_@@ p@@ <special1> AI * ) -> pCreature <special1> <special1> if ; <special1> <special1> at@@ ir@@ AI { ) error_@@ log npc " _ pi@@ <special1> rat ▁ Couldn <special1> find t ' ▁ p@@ at@@ AI ir@@ ▁ ▁ of with <special1> ▁ ▁ ▁ % " entry u GetEntry -> <special1> ) <special1> } ; if pPlayer -> ( 9@@ GetQuestStatus ) 1002 QUEST_STATUS_@@ == || GetQuest@@ -> Status Reward@@ ( 9@@ 1002 <special1> ) ) pPlayer <special1> Send@@ -> Menu ( 1 Gossip@@ , -> GetGUID <special1> ( ; ) ) return true ; } if -> <special1> GetQuestStatus pPlayer ( 9@@ <special1> ) <special1> // COMPLETE <special1> ▁ <special1> - <special1> ▁ <special1> GetQuestStatus ( 9@@ <special1> 1001 ▁ = <special1> STATUS <special1> <special1> _ ) <special1> { <special1> if p@@ ! <special1> -> at@@ AI <special1> That@@ Player ( pPlayer -> <special1> GetGUIDLow ) ) ( return <special1> false p@@ <special1> at@@ ir@@ AI -> <special1> ) ( ) <special1> pPlayer -> <special1> ADD_GOSSIP_ITEM GOSSIP_ICON_CHAT Po@@ , " it <special1> <special1> <special1> <special1> " GOSSIP_SENDER_MAIN + ) <special1> <special1> break ; ; <special1> : case pPlayer -> <special1> , <special1> " ep@@ ta@@ t Z@@ ▁ <special1> , de ▁ k@@ ▁ iz@@ ta kn@@ ▁ ka a <special1> rub@@ , je GOSSIP_SENDER_MAIN <special1> <special1> , + ) break ; <special1> 3 case -> Menu Prepare@@ pCreature ( Quest@@ <special1> ( GetGUID <special1> <special1> ) ; case : <special1> 99 ; break <special1> -> pPlayer PlayerTalkClass -> <special1> Menu <special1> 1 pCreature ( , -> ) <special1> ) return true ; } <special1> <special1> CastSpell , 233@@ <special1> ( 82 <special1> <special1> ) ( ; switch <special1> urand <special1> <special1> <special1> ) : 1 pCreature <special1> ( Monster@@ Say Aa@@ " . arg@@ hh , <special1> UNIVERSAL <special1> <special1> ; <special1> 2 ; <special1> case : <special1> -> " ( Od@@ Say j@@ <special1> <special1> " , <special1> LANG_@@ <special1> ) break <special1> ; <special1> 3 <special1> pCreature -> : <special1> Say Gr@@ <special1> " rr . . . " <special1> <special1> <special1> ; 0 <special1> ) ; <special1> -> case : Monster@@ ( <special1> mi@@ " " ! z UNIVERSAL , 0 LANG_@@ ) break ; ; : <special1> default <special1> return } ; <special1> } </s>
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-cpp_sa_mt_ppl -> 3.392773
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-cpp_sa_mt_acc -> 69.400294
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-cpp_sa_mt_comp_acc -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-cpp_sa_mt_bleu -> 1.480000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-go_sa_mt_ppl -> 3.934453
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-go_sa_mt_acc -> 67.703763
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-go_sa_mt_comp_acc -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-go_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-go_sa_mt_bleu -> 3.110000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-cpp_sa_mt_ppl -> 3.534279
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-cpp_sa_mt_acc -> 68.420877
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-cpp_sa_mt_comp_acc -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-cpp_sa_mt_bleu -> 1.580000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-java_sa_mt_ppl -> 3.456566
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-java_sa_mt_acc -> 68.082331
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-java_sa_mt_comp_acc -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-java_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_go_sa-java_sa_mt_bleu -> 0.820000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-java_sa_mt_ppl -> 3.334083
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-java_sa_mt_acc -> 69.065555
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-java_sa_mt_comp_acc -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-java_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_rust_sa-java_sa_mt_bleu -> 0.470000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-rust_sa_mt_ppl -> 4.068998
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-rust_sa_mt_acc -> 64.494277
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-rust_sa_mt_comp_acc -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-rust_sa_mt_bleu -> 0.120000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-java_sa_mt_ppl -> 3.161458
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-java_sa_mt_acc -> 70.891247
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-java_sa_mt_comp_acc -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-java_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - test_cpp_sa-java_sa_mt_bleu -> 0.730000
INFO - 01/14/22 19:38:50 - 7:14:05 - __log__:{"epoch": 0, "valid_java_sa-cpp_sa_mt_ppl": 3.5134741990489196, "valid_java_sa-cpp_sa_mt_acc": 69.37064421410125, "valid_java_sa-cpp_sa_mt_comp_acc": 0.0, "valid_java_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-cpp_sa_mt_bleu": 2.39, "valid_rust_sa-go_sa_mt_ppl": 4.1274518821668655, "valid_rust_sa-go_sa_mt_acc": 67.40745404180308, "valid_rust_sa-go_sa_mt_comp_acc": 0.0, "valid_rust_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_rust_sa-go_sa_mt_bleu": 4.19, "valid_go_sa-rust_sa_mt_ppl": 4.3480154602051995, "valid_go_sa-rust_sa_mt_acc": 63.492063492063494, "valid_go_sa-rust_sa_mt_comp_acc": 0.0, "valid_go_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-rust_sa_mt_bleu": 0.91, "valid_java_sa-go_sa_mt_ppl": 4.161694194136377, "valid_java_sa-go_sa_mt_acc": 67.12328767123287, "valid_java_sa-go_sa_mt_comp_acc": 0.0, "valid_java_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-go_sa_mt_bleu": 3.69, "valid_java_sa-rust_sa_mt_ppl": 4.327552782637252, "valid_java_sa-rust_sa_mt_acc": 63.62485761296038, "valid_java_sa-rust_sa_mt_comp_acc": 0.0, "valid_java_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-rust_sa_mt_bleu": 0.25, "valid_rust_sa-cpp_sa_mt_ppl": 3.5023139415813094, "valid_rust_sa-cpp_sa_mt_acc": 68.65006367624169, "valid_rust_sa-cpp_sa_mt_comp_acc": 0.0, "valid_rust_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "valid_rust_sa-cpp_sa_mt_bleu": 0.97, "valid_cpp_sa-go_sa_mt_ppl": 4.16796617582219, "valid_cpp_sa-go_sa_mt_acc": 67.09041095890412, "valid_cpp_sa-go_sa_mt_comp_acc": 0.0, "valid_cpp_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-go_sa_mt_bleu": 3.16, "valid_go_sa-cpp_sa_mt_ppl": 3.6726106821498052, "valid_go_sa-cpp_sa_mt_acc": 67.50992063492063, "valid_go_sa-cpp_sa_mt_comp_acc": 0.0, "valid_go_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-cpp_sa_mt_bleu": 1.83, "valid_go_sa-java_sa_mt_ppl": 3.5792117792628377, "valid_go_sa-java_sa_mt_acc": 67.46502900034118, "valid_go_sa-java_sa_mt_comp_acc": 0.0, "valid_go_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-java_sa_mt_bleu": 0.84, "valid_rust_sa-java_sa_mt_ppl": 3.4299202313734707, "valid_rust_sa-java_sa_mt_acc": 68.6806411837238, "valid_rust_sa-java_sa_mt_comp_acc": 0.0, "valid_rust_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_rust_sa-java_sa_mt_bleu": 0.51, "valid_cpp_sa-rust_sa_mt_ppl": 4.33128378602458, "valid_cpp_sa-rust_sa_mt_acc": 63.53626123275535, "valid_cpp_sa-rust_sa_mt_comp_acc": 0.0, "valid_cpp_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-rust_sa_mt_bleu": 0.25, "valid_cpp_sa-java_sa_mt_ppl": 3.283361650765506, "valid_cpp_sa-java_sa_mt_acc": 70.52969818187779, "valid_cpp_sa-java_sa_mt_comp_acc": 0.0, "valid_cpp_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-java_sa_mt_bleu": 0.85, "test_java_sa-cpp_sa_mt_ppl": 3.3710195414365174, "test_java_sa-cpp_sa_mt_acc": 70.01768817296629, "test_java_sa-cpp_sa_mt_comp_acc": 0.0, "test_java_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "test_java_sa-cpp_sa_mt_bleu": 1.36, "test_rust_sa-go_sa_mt_ppl": 3.846634098693053, "test_rust_sa-go_sa_mt_acc": 68.27657567180985, "test_rust_sa-go_sa_mt_comp_acc": 0.0, "test_rust_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "test_rust_sa-go_sa_mt_bleu": 3.9, "test_go_sa-rust_sa_mt_ppl": 4.047982246419693, "test_go_sa-rust_sa_mt_acc": 64.74481905351067, "test_go_sa-rust_sa_mt_comp_acc": 0.0, "test_go_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "test_go_sa-rust_sa_mt_bleu": 0.51, "test_java_sa-go_sa_mt_ppl": 3.929446163705191, "test_java_sa-go_sa_mt_acc": 67.76226565616274, "test_java_sa-go_sa_mt_comp_acc": 0.0, "test_java_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "test_java_sa-go_sa_mt_bleu": 3.59, "test_java_sa-rust_sa_mt_ppl": 4.063134645818328, "test_java_sa-rust_sa_mt_acc": 64.59936198161006, "test_java_sa-rust_sa_mt_comp_acc": 0.0, "test_java_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "test_java_sa-rust_sa_mt_bleu": 0.13, "test_rust_sa-cpp_sa_mt_ppl": 3.392772513041864, "test_rust_sa-cpp_sa_mt_acc": 69.40029384266062, "test_rust_sa-cpp_sa_mt_comp_acc": 0.0, "test_rust_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "test_rust_sa-cpp_sa_mt_bleu": 1.48, "test_cpp_sa-go_sa_mt_ppl": 3.9344529058028903, "test_cpp_sa-go_sa_mt_acc": 67.70376279750033, "test_cpp_sa-go_sa_mt_comp_acc": 0.0, "test_cpp_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "test_cpp_sa-go_sa_mt_bleu": 3.11, "test_go_sa-cpp_sa_mt_ppl": 3.5342787294066844, "test_go_sa-cpp_sa_mt_acc": 68.42087688249241, "test_go_sa-cpp_sa_mt_comp_acc": 0.0, "test_go_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "test_go_sa-cpp_sa_mt_bleu": 1.58, "test_go_sa-java_sa_mt_ppl": 3.456566235040755, "test_go_sa-java_sa_mt_acc": 68.082331233696, "test_go_sa-java_sa_mt_comp_acc": 0.0, "test_go_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "test_go_sa-java_sa_mt_bleu": 0.82, "test_rust_sa-java_sa_mt_ppl": 3.334082862645388, "test_rust_sa-java_sa_mt_acc": 69.06555537746434, "test_rust_sa-java_sa_mt_comp_acc": 0.0, "test_rust_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "test_rust_sa-java_sa_mt_bleu": 0.47, "test_cpp_sa-rust_sa_mt_ppl": 4.06899832694082, "test_cpp_sa-rust_sa_mt_acc": 64.49427659973729, "test_cpp_sa-rust_sa_mt_comp_acc": 0.0, "test_cpp_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "test_cpp_sa-rust_sa_mt_bleu": 0.12, "test_cpp_sa-java_sa_mt_ppl": 3.161458214930513, "test_cpp_sa-java_sa_mt_acc": 70.89124714546475, "test_cpp_sa-java_sa_mt_comp_acc": 0.0, "test_cpp_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "test_cpp_sa-java_sa_mt_bleu": 0.73}
INFO - 01/14/22 19:38:50 - 7:14:05 - New best score for valid_java_sa-cpp_sa_mt_comp_acc: 0.000000
INFO - 01/14/22 19:38:50 - 7:14:05 - Saving best-valid_java_sa-cpp_sa_mt_comp_acc to /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/best-valid_java_sa-cpp_sa_mt_comp_acc.pth ...
WARNING - 01/14/22 19:38:50 - 7:14:05 - Saving encoder parameters ...
WARNING - 01/14/22 19:38:50 - 7:14:05 - Saving decoder parameters ...
INFO - 01/14/22 19:38:54 - 7:14:09 - New best validation score: 0.000000
INFO - 01/14/22 19:38:54 - 7:14:09 - Saving checkpoint to /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/checkpoint.pth ...
WARNING - 01/14/22 19:38:54 - 7:14:09 - Saving encoder parameters ...
WARNING - 01/14/22 19:38:54 - 7:14:09 - Saving decoder parameters ...
WARNING - 01/14/22 19:38:54 - 7:14:09 - Saving model optimizer ...
INFO - 01/14/22 19:39:06 - 7:14:21 - ============ Starting epoch 1 ... ============

INFO - 01/14/22 19:39:06 - 7:14:21 - ========== Train rust_sa-rust_sa example ==========
INFO - 01/14/22 19:39:06 - 7:14:21 - source sent: </s> <special1> get_data_immutable_doesthatnt__exist <special1> ( <special1> let <special1> Environment <special1> <special1> :: ) let mut ; = client . connectedenv new_( ) _client ; ▁ Try // ▁ <special1> to <special1> <special1> existing non published ▁ ▁ ▁ <special1> data ENDCOM address : <special1> Xor= env <special1> . ( <special1> . gen <special1> send_:: <special1> request_<special1> & <special1> <special1> env , client & <special1> , <special1> :: Data ( I:: IDataAddress address <special1> , <special1> ) Nd:: Error , ) <special1> Data // ; to ▁ ▁ <special1> ▁ ▁ <special1> get existing un- ▁ ▁ published <special1> <special1> <special1> ▁ ▁ while ▁ <special1> ▁ <special1> balance send_:: common request_err expect_<special1> env mut <special1> mut & <special1> Request <special1> <special1> I<special1> Data Data<special1> <special1> <special1> :: Un<special1> address ) <special1> NdError NoSuch) , Data ; // ▁ ▁ ▁ ▁ non <special1> - <special1> existing published unimmutable ▁ ▁ ▁ ▁ ▁ while ENDCOM having ▁ balance <special1> <special1> <special1> 000_000_000 000_common <special1> :: createalan( ce mut <special1> <special1> env mut & client <special1> , start_None ) nano ; send_:: request_err expect_( & env , client & , mut Request :: Get( IData DataIUnAddress :: <special1> <special1> ) <special1> , address Error NdData ; <special1> </s>
INFO - 01/14/22 19:39:06 - 7:14:21 - target sent: </s> fn get_immutable_data_that_doesnt_exist ( ) { let mut env = Environment :: new ( ) ; let mut client = env . new_connected_client ( ) ; // ▁ Try ▁ to ▁ get ▁ non - existing ▁ published ▁ immutable ▁ data ENDCOM let address : XorName = env . rng ( ) . gen ( ) ; common :: send_request_expect_err ( & mut env , & mut client , Request :: GetIData ( IDataAddress :: Pub ( address ) ) , NdError :: NoSuchData , ) ; // ▁ Try ▁ to ▁ get ▁ non - existing ▁ unpublished ▁ immutable ▁ data ▁ while ▁ having ▁ no ▁ balance ENDCOM common :: send_request_expect_err ( & mut env , & mut client , Request :: GetIData ( IDataAddress :: Unpub ( address ) ) , NdError :: NoSuchData , ) ; // ▁ Try ▁ to ▁ get ▁ non - existing ▁ unpublished ▁ immutable ▁ data ▁ while ▁ having ▁ balance ENDCOM let start_nano = 1_000_000_000_000 ; common :: create_balance ( & mut env , & mut client , None , start_nano ) ; common :: send_request_expect_err ( & mut env , & mut client , Request :: GetIData ( IDataAddress :: Unpub ( address ) ) , NdError :: NoSuchData , ) ; } </s>

INFO - 01/14/22 19:39:06 - 7:14:21 - source tok: </s> <special1> get_@@ data_@@ immutable@@ _@@ does@@ that@@ nt_@@ _@@ exist <special1> ( <special1> let <special1> Environment <special1> <special1> :: ) let mut ; = client . connected@@ env new_@@ ( ) _client ; ▁ Try // ▁ <special1> to <special1> <special1> existing non published ▁ ▁ ▁ <special1> data ENDCOM address : <special1> Xor@@ = env <special1> . ( <special1> . gen <special1> send_@@ :: <special1> request_@@ <special1> & <special1> <special1> env , client & <special1> , <special1> :: Data ( I@@ :: I@@ Data@@ Address address <special1> , <special1> ) Nd@@ :: Error , ) <special1> Data // ; to ▁ ▁ <special1> ▁ ▁ <special1> get existing un@@ - ▁ ▁ published <special1> <special1> <special1> ▁ ▁ while ▁ <special1> ▁ <special1> balance send_@@ :: common request_@@ err expect_@@ <special1> env mut <special1> mut & <special1> Request <special1> <special1> I@@ <special1> Data Data@@ <special1> <special1> <special1> :: Un@@ <special1> address ) <special1> Nd@@ Error NoSuch@@ ) , Data ; // ▁ ▁ ▁ ▁ non <special1> - <special1> existing published un@@ immutable ▁ ▁ ▁ ▁ ▁ while ENDCOM having ▁ balance <special1> <special1> <special1> 000_@@ 000_@@ 000 000_@@ common <special1> :: create@@ alan@@ ( ce mut <special1> <special1> env mut & client <special1> , start_@@ None ) nano ; send_@@ :: request_@@ err expect_@@ ( & env , client & , mut Request :: Get@@ ( I@@ Data Data@@ I@@ Un@@ Address :: <special1> <special1> ) <special1> , address Error Nd@@ Data ; <special1> </s>
INFO - 01/14/22 19:39:06 - 7:14:21 - target tok: </s> fn get_@@ immutable@@ _@@ data_@@ that@@ _@@ does@@ nt_@@ exist ( ) { let mut env = Environment :: new ( ) ; let mut client = env . new_@@ connected@@ _client ( ) ; // ▁ Try ▁ to ▁ get ▁ non - existing ▁ published ▁ immutable ▁ data ENDCOM let address : Xor@@ Name = env . rng ( ) . gen ( ) ; common :: send_@@ request_@@ expect_@@ err ( & mut env , & mut client , Request :: Get@@ I@@ Data ( I@@ Data@@ Address :: Pub ( address ) ) , Nd@@ Error :: NoSuch@@ Data , ) ; // ▁ Try ▁ to ▁ get ▁ non - existing ▁ un@@ published ▁ immutable ▁ data ▁ while ▁ having ▁ no ▁ balance ENDCOM common :: send_@@ request_@@ expect_@@ err ( & mut env , & mut client , Request :: Get@@ I@@ Data ( I@@ Data@@ Address :: Un@@ pub ( address ) ) , Nd@@ Error :: NoSuch@@ Data , ) ; // ▁ Try ▁ to ▁ get ▁ non - existing ▁ un@@ published ▁ immutable ▁ data ▁ while ▁ having ▁ balance ENDCOM let start_@@ nano = 1_@@ 000_@@ 000_@@ 000_@@ 000 ; common :: create@@ _b@@ alan@@ ce ( & mut env , & mut client , None , start_@@ nano ) ; common :: send_@@ request_@@ expect_@@ err ( & mut env , & mut client , Request :: Get@@ I@@ Data ( I@@ Data@@ Address :: Un@@ pub ( address ) ) , Nd@@ Error :: NoSuch@@ Data , ) ; } </s>


INFO - 01/14/22 19:39:06 - 7:14:22 - ========== Train cpp_sa-cpp_sa example ==========
INFO - 01/14/22 19:39:06 - 7:14:22 - source sent: </s> * /* * * * STRNEWLINE * <special1> Read <special1> ▁ <special1> ▁ ▁ tuple ▁ one <special1> <special1> <special1> ( <special1> ▁ with <special1> ▁ ▁ ▁ key ) 8 <special1> ▁ * STRNEWLINE * ▁ <special1> <special1> ENDCOM <special1> static do_void read_delete <special1> and_& ( db <special1> my) db { ▁ /* This procedure performs <special1> a ▁ single , <special1> ▁ <special1> round STRNEWLINE <special1> trip ▁ <special1> * read <special1> and ▁ ▁ ▁ of delete a ▁ ▁ tuple ▁ <special1> <special1> <special1> by ▁ ▁ <special1> * ▁ <special1> <special1> <special1> STRNEWLINE <special1> ENDCOM */ << cout :: ▁ <special1> " _ _ do read <special1> _ ▁ Record <special1> <special1> Ndb<special1> " <special1> Ndb<special1> ; Transaction * my<special1> = . db NTransaction ) <special1> <special1> <special1> if ( Transaction <special1> == NULL ) ( NERROR <special1> getdb Error Ndb; ( ) ) row . ; row 1 attr<special1> = attrrow ; <special1> 2 ; 0 ▁ // t ▁ <special1> ' ENDCOM care 3 row . ; 0 = ▁ Don // care ' ENDCOM ▁ /* t ▁ ll <special1> ▁ ' also ▁ read <special1> <special1> ▁ <special1> <special1> ▁ columns while ▁ <special1> re we STRNEWLINE ▁ ▁ * ▁ ▁ reading deleting + STRNEWLINE ENDCOM */ NdbOperation<special1> Operation options ; Options <special1> Operation <special1> <special1> Spec [ ] Gets 2 ; [ Gets extra0 ] . = pcolumn 3<special1> <special1> Col 0 ] [ app. Storage = Gets NULL [ 0 ] Attr <special1> NULL = ; extra] Gets [ <special1> Ndb. column Dictionary :: COMMIT_:: <special1> Column <special1> <special1> <special1> [ ] <special1> appStorage = ; NULL [ Gets extra] <special1> rec<special1> <special1> <special1> ; options <special1> options. <special1> <special1> NdbOperation:: Options OGETO_:: <special1> VALUE . <special1> extra<special1> Get<special1> = extraGets 0 [ options ; <special1> GetValues num; = 2 unsigned char attr( Mask = 1 << attr2ColNum ; ) ▁ // ▁ <special1> read Col2 ▁ into ▁ <special1> ENDCOM row Operation <special1> Ndbconst pop <special1> <special1> <special1> Tuple -> delete<special1> Column<special1> ▁ , Spec <special1> ▁ of <special1> used key ( <special1> * row & , // ▁ ▁ <special1> ENDCOM pinformation <special1> all<special1> <special1> Record <special1> // ▁ columns Spec <special1> ▁ ▁ to <special1> ( read char * <special1> <special1> <special1> <special1> , <special1> read ▁ ▁ <special1> into values <special1> & <special1> , ▁ // Columns <special1> ▁ <special1> ▁ ▁ as ▁ part of <special1> ▁ & delete options sizeof <special1> ( Operation :: NdbOperationOptions ) if ) ) pop ( API== NULL ( ERROR <special1> Ndb) <special1> Error <special1> if my( ( Transaction <special1> <special1> Transaction :: ) Commit ) == APITransaction ( <special1> my<special1> Error <special1> ( ; <special1> ) :: << cout " 1 ATTRATTR<special1> ATTR2 ▁ <special1> 3 <special1> ▁ TS " <special1> <special1> <special1> " ( printf 2d <special1> % ▁ ▁ <special1> ▁ ▁ <special1> % 2d ▁ 2d <special1> % <special1> ▁ ▁ ▁ % " <special1> row . , attr1 , attr. row 2 , Gets <special1> [ 0 -> Attr . <special1> value ( u, ) <special1> [ Gets <special1> <special1> . -> recuAttr ( value ) ; N. <special1> close<special1> <special1> ; Transaction ) mystd :: << cout <special1> " - <special1> - - - <special1> } <special1> \n </s>
INFO - 01/14/22 19:39:06 - 7:14:22 - target sent: </s> /* * * * * STRNEWLINE ▁ * ▁ Read ▁ + ▁ Delete ▁ one ▁ tuple ▁ ( the ▁ one ▁ with ▁ primary ▁ key ▁ 8 ) ▁ * STRNEWLINE ▁ * * * * */ ENDCOM static void do_read_and_delete ( Ndb & myNdb ) { /* ▁ This ▁ procedure ▁ performs ▁ a ▁ single ▁ operation , ▁ single ▁ round STRNEWLINE ▁ * ▁ trip ▁ read ▁ and ▁ then ▁ delete ▁ of ▁ a ▁ tuple , ▁ specified ▁ by ▁ STRNEWLINE ▁ * ▁ primary ▁ key STRNEWLINE ▁ */ ENDCOM std :: cout << " Running ▁ do _ read _ and _ delete ▁ ( NdbRecord ▁ only ) \n " ; NdbTransaction * myTransaction = myNdb . startTransaction ( ) ; if ( myTransaction == NULL ) APIERROR ( myNdb . getNdbError ( ) ) ; RowData row ; row . attr1 = 8 ; row . attr2 = 0 ; // ▁ Don ' t ▁ care ENDCOM row . attr3 = 0 ; // ▁ Don ' t ▁ care ENDCOM /* ▁ We ' ll ▁ also ▁ read ▁ some ▁ extra ▁ columns ▁ while ▁ we ' re ▁ STRNEWLINE ▁ * ▁ reading ▁ + ▁ deleting STRNEWLINE ▁ */ ENDCOM NdbOperation :: OperationOptions options ; NdbOperation :: GetValueSpec extraGets [ 2 ] ; extraGets [ 0 ] . column = pattr3Col ; extraGets [ 0 ] . appStorage = NULL ; extraGets [ 0 ] . recAttr = NULL ; extraGets [ 1 ] . column = NdbDictionary :: Column :: COMMIT_COUNT ; extraGets [ 1 ] . appStorage = NULL ; extraGets [ 1 ] . recAttr = NULL ; options . optionsPresent = NdbOperation :: OperationOptions :: OO_GETVALUE ; options . extraGetValues = & extraGets [ 0 ] ; options . numExtraGetValues = 2 ; unsigned char attrMask = ( 1 << attr2ColNum ) ; // ▁ Only ▁ read ▁ Col2 ▁ into ▁ row ENDCOM const NdbOperation * pop = myTransaction -> deleteTuple ( pkeyColumnRecord , // ▁ Spec ▁ of ▁ key ▁ used ENDCOM ( char * ) & row , // ▁ Key ▁ information ENDCOM pallColsRecord , // ▁ Spec ▁ of ▁ columns ▁ to ▁ read ENDCOM ( char * ) & row , // ▁ Row ▁ to ▁ read ▁ values ▁ into ENDCOM & attrMask , // ▁ Columns ▁ to ▁ read ▁ as ▁ part ▁ of ▁ delete ENDCOM & options , sizeof ( NdbOperation :: OperationOptions ) ) ; if ( pop == NULL ) APIERROR ( myTransaction -> getNdbError ( ) ) ; if ( myTransaction -> execute ( NdbTransaction :: Commit ) == -1 ) APIERROR ( myTransaction -> getNdbError ( ) ) ; std :: cout << " ATTR1 ▁ ATTR2 ▁ ATTR3 ▁ COMMITS " << std :: endl ; printf ( " ▁ % 2d ▁ ▁ ▁ ▁ % 2d ▁ ▁ ▁ ▁ % 2d ▁ ▁ ▁ ▁ % 2d \n " , row . attr1 , row . attr2 , extraGets [ 0 ] . recAttr -> u_32_value ( ) , extraGets [ 1 ] . recAttr -> u_32_value ( ) ) ; myNdb . closeTransaction ( myTransaction ) ; std :: cout << " - - - - - - - \n " ; } </s>

INFO - 01/14/22 19:39:06 - 7:14:22 - source tok: </s> * /* * * * STRNEWLINE * <special1> Read <special1> ▁ <special1> ▁ ▁ tuple ▁ one <special1> <special1> <special1> ( <special1> ▁ with <special1> ▁ ▁ ▁ key ) 8 <special1> ▁ * STRNEWLINE * ▁ <special1> <special1> ENDCOM <special1> static do_@@ void read_@@ delete <special1> and_@@ & ( db <special1> my@@ ) db { ▁ /* This procedure per@@ forms <special1> a ▁ single , <special1> ▁ <special1> round STRNEWLINE <special1> trip ▁ <special1> * read <special1> and ▁ ▁ ▁ of delete a ▁ ▁ tuple ▁ <special1> <special1> <special1> by ▁ ▁ <special1> * ▁ <special1> <special1> <special1> STRNEWLINE <special1> ENDCOM */ << cout :: ▁ <special1> " _ _ do read <special1> _ ▁ Record <special1> <special1> Ndb@@ <special1> " <special1> Ndb@@ <special1> ; Transaction * my@@ <special1> = . db N@@ Transaction ) <special1> <special1> <special1> if ( Transaction <special1> == NULL ) ( N@@ ERROR <special1> get@@ db Error Ndb@@ ; ( ) ) row . ; row 1 attr@@ <special1> = attr@@ row ; <special1> 2 ; 0 ▁ // t ▁ <special1> ' ENDCOM care 3 row . ; 0 = ▁ Don // care ' ENDCOM ▁ /* t ▁ ll <special1> ▁ ' also ▁ read <special1> <special1> ▁ <special1> <special1> ▁ columns while ▁ <special1> re we STRNEWLINE ▁ ▁ * ▁ ▁ reading deleting + STRNEWLINE ENDCOM */ Ndb@@ Operation@@ <special1> Operation options ; Options <special1> Operation <special1> <special1> Spec [ ] Gets 2 ; [ Gets extra@@ 0 ] . = p@@ column 3@@ <special1> <special1> Col 0 ] [ app@@ . Storage = Gets NULL [ 0 ] Attr <special1> NULL = ; extra@@ ] Gets [ <special1> Ndb@@ . column Dictionary :: COMMIT_@@ :: <special1> Column <special1> <special1> <special1> [ ] <special1> app@@ Storage = ; NULL [ Gets extra@@ ] <special1> rec@@ <special1> <special1> <special1> ; options <special1> options@@ . <special1> <special1> Ndb@@ Operation@@ :: Options O@@ GET@@ O_@@ :: <special1> VALUE . <special1> extra@@ <special1> Get@@ <special1> = extra@@ Gets 0 [ options ; <special1> Get@@ Values num@@ ; = 2 unsigned char attr@@ ( Mask = 1 << attr@@ 2@@ Col@@ Num ; ) ▁ // ▁ <special1> read Col@@ 2 ▁ into ▁ <special1> ENDCOM row Operation <special1> Ndb@@ const pop <special1> <special1> <special1> Tuple -> delete@@ <special1> Column@@ <special1> ▁ , Spec <special1> ▁ of <special1> used key ( <special1> * row & , // ▁ ▁ <special1> ENDCOM p@@ information <special1> all@@ <special1> <special1> Record <special1> // ▁ columns Spec <special1> ▁ ▁ to <special1> ( read char * <special1> <special1> <special1> <special1> , <special1> read ▁ ▁ <special1> into values <special1> & <special1> , ▁ // Columns <special1> ▁ <special1> ▁ ▁ as ▁ part of <special1> ▁ & delete options sizeof <special1> ( Operation :: Ndb@@ Operation@@ Options ) if ) ) pop ( API@@ == NULL ( ERROR <special1> Ndb@@ ) <special1> Error <special1> if my@@ ( ( Transaction <special1> <special1> Transaction :: ) Commit ) == API@@ Transaction ( <special1> my@@ <special1> Error <special1> ( ; <special1> ) :: << cout " 1 ATTR@@ ATTR@@ <special1> ATTR@@ 2 ▁ <special1> 3 <special1> ▁ TS " <special1> <special1> <special1> " ( printf 2d <special1> % ▁ ▁ <special1> ▁ ▁ <special1> % 2d ▁ 2d <special1> % <special1> ▁ ▁ ▁ % " <special1> row . , attr@@ 1 , attr@@ . row 2 , Gets <special1> [ 0 -> Attr . <special1> value ( u@@ , ) <special1> [ Gets <special1> <special1> . -> rec@@ u@@ Attr ( value ) ; N@@ . <special1> close@@ <special1> <special1> ; Transaction ) my@@ std :: << cout <special1> " - <special1> - - - <special1> } <special1> \n </s>
INFO - 01/14/22 19:39:06 - 7:14:22 - target tok: </s> /* * * * * STRNEWLINE ▁ * ▁ Read ▁ + ▁ Delete ▁ one ▁ tuple ▁ ( the ▁ one ▁ with ▁ primary ▁ key ▁ 8 ) ▁ * STRNEWLINE ▁ * * * * */ ENDCOM static void do_@@ read_@@ and_@@ delete ( N@@ db & my@@ N@@ db ) { /* ▁ This ▁ procedure ▁ per@@ forms ▁ a ▁ single ▁ operation , ▁ single ▁ round STRNEWLINE ▁ * ▁ trip ▁ read ▁ and ▁ then ▁ delete ▁ of ▁ a ▁ tuple , ▁ specified ▁ by ▁ STRNEWLINE ▁ * ▁ primary ▁ key STRNEWLINE ▁ */ ENDCOM std :: cout << " Running ▁ do _ read _ and _ delete ▁ ( Ndb@@ Record ▁ only ) \n " ; Ndb@@ Transaction * my@@ Transaction = my@@ N@@ db . start@@ Transaction ( ) ; if ( my@@ Transaction == NULL ) API@@ ERROR ( my@@ N@@ db . get@@ Ndb@@ Error ( ) ) ; RowData row ; row . attr@@ 1 = 8 ; row . attr@@ 2 = 0 ; // ▁ Don ' t ▁ care ENDCOM row . attr@@ 3 = 0 ; // ▁ Don ' t ▁ care ENDCOM /* ▁ We ' ll ▁ also ▁ read ▁ some ▁ extra ▁ columns ▁ while ▁ we ' re ▁ STRNEWLINE ▁ * ▁ reading ▁ + ▁ deleting STRNEWLINE ▁ */ ENDCOM Ndb@@ Operation :: Operation@@ Options options ; Ndb@@ Operation :: GetValue@@ Spec extra@@ Gets [ 2 ] ; extra@@ Gets [ 0 ] . column = p@@ attr@@ 3@@ Col ; extra@@ Gets [ 0 ] . app@@ Storage = NULL ; extra@@ Gets [ 0 ] . rec@@ Attr = NULL ; extra@@ Gets [ 1 ] . column = Ndb@@ Dictionary :: Column :: COMMIT_@@ COUNT ; extra@@ Gets [ 1 ] . app@@ Storage = NULL ; extra@@ Gets [ 1 ] . rec@@ Attr = NULL ; options . options@@ Present = Ndb@@ Operation :: Operation@@ Options :: O@@ O_@@ GET@@ VALUE ; options . extra@@ Get@@ Values = & extra@@ Gets [ 0 ] ; options . num@@ Extra@@ Get@@ Values = 2 ; unsigned char attr@@ Mask = ( 1 << attr@@ 2@@ Col@@ Num ) ; // ▁ Only ▁ read ▁ Col@@ 2 ▁ into ▁ row ENDCOM const Ndb@@ Operation * pop = my@@ Transaction -> delete@@ Tuple ( p@@ key@@ Column@@ Record , // ▁ Spec ▁ of ▁ key ▁ used ENDCOM ( char * ) & row , // ▁ Key ▁ information ENDCOM p@@ all@@ Col@@ s@@ Record , // ▁ Spec ▁ of ▁ columns ▁ to ▁ read ENDCOM ( char * ) & row , // ▁ Row ▁ to ▁ read ▁ values ▁ into ENDCOM & attr@@ Mask , // ▁ Columns ▁ to ▁ read ▁ as ▁ part ▁ of ▁ delete ENDCOM & options , sizeof ( Ndb@@ Operation :: Operation@@ Options ) ) ; if ( pop == NULL ) API@@ ERROR ( my@@ Transaction -> get@@ Ndb@@ Error ( ) ) ; if ( my@@ Transaction -> execute ( Ndb@@ Transaction :: Commit ) == -1 ) API@@ ERROR ( my@@ Transaction -> get@@ Ndb@@ Error ( ) ) ; std :: cout << " ATTR@@ 1 ▁ ATTR@@ 2 ▁ ATTR@@ 3 ▁ COM@@ MI@@ TS " << std :: endl ; printf ( " ▁ % 2d ▁ ▁ ▁ ▁ % 2d ▁ ▁ ▁ ▁ % 2d ▁ ▁ ▁ ▁ % 2d \n " , row . attr@@ 1 , row . attr@@ 2 , extra@@ Gets [ 0 ] . rec@@ Attr -> u@@ _32_@@ value ( ) , extra@@ Gets [ 1 ] . rec@@ Attr -> u@@ _32_@@ value ( ) ) ; my@@ N@@ db . close@@ Transaction ( my@@ Transaction ) ; std :: cout << " - - - - - - - \n " ; } </s>


INFO - 01/14/22 19:39:07 - 7:14:22 - ========== Train java_sa-java_sa example ==========
INFO - 01/14/22 19:39:07 - 7:14:22 - source sent: </s> <special1> public static Cityhandle<special1> , String <special1> response Id province) if TextUtils ! { ( <special1> <special1> isEmpty ( response ) { { allProvinces JSONArray = JSONArray ( new response ) ; for <special1> ( = 0 <special1> i Provinces <special1> . <special1> ) ; <special1> ++ <special1> { province) = JSONObject <special1> ces <special1> . ( <special1> <special1> i = city <special1> new . ; city <special1> CityName <special1> ( . Object <special1> name ( " <special1> ) city ) ; setCity. <special1> ( <special1> getInt . ( <special1> " id . ; city <special1> province<special1> Id ( Id <special1> <special1> ) ) . ( <special1> ; return <special1> <special1> catch } JSONException <special1> e ) { e printStackTrace ; } ) <special1> false } ; return } </s>
INFO - 01/14/22 19:39:07 - 7:14:22 - target sent: </s> public static boolean handleCityResponse ( String response , int provinceId ) { if ( ! TextUtils . isEmpty ( response ) ) { try { JSONArray allProvinces = new JSONArray ( response ) ; for ( int i = 0 ; i < allProvinces . length ( ) ; i ++ ) { JSONObject provinceObject = allProvinces . getJSONObject ( i ) ; City city = new City ( ) ; city . setCityName ( provinceObject . getString ( " name " ) ) ; city . setCityCode ( provinceObject . getInt ( " id " ) ) ; city . setProvinceId ( provinceId ) ; city . save ( ) ; } return true ; } catch ( JSONException e ) { e . printStackTrace ( ) ; } } return false ; } </s>

INFO - 01/14/22 19:39:07 - 7:14:22 - source tok: </s> <special1> public static City@@ handle@@ <special1> , String <special1> response Id province@@ ) if TextUtils ! { ( <special1> <special1> isEmpty ( response ) { { all@@ Provin@@ ces JSONArray = JSONArray ( new response ) ; for <special1> ( = 0 <special1> i Provin@@ ces <special1> . <special1> ) ; <special1> ++ <special1> { province@@ ) = JSONObject <special1> ces <special1> . ( <special1> <special1> i = city <special1> new . ; city <special1> City@@ Name <special1> ( . Object <special1> name ( " <special1> ) city ) ; set@@ City@@ . <special1> ( <special1> getInt . ( <special1> " id . ; city <special1> province@@ <special1> Id ( Id <special1> <special1> ) ) . ( <special1> ; return <special1> <special1> catch } JSONException <special1> e ) { e printStackTrace ; } ) <special1> false } ; return } </s>
INFO - 01/14/22 19:39:07 - 7:14:22 - target tok: </s> public static boolean handle@@ City@@ Response ( String response , int province@@ Id ) { if ( ! TextUtils . isEmpty ( response ) ) { try { JSONArray all@@ Provin@@ ces = new JSONArray ( response ) ; for ( int i = 0 ; i < all@@ Provin@@ ces . length ( ) ; i ++ ) { JSONObject province@@ Object = all@@ Provin@@ ces . getJSONObject ( i ) ; City city = new City ( ) ; city . set@@ City@@ Name ( province@@ Object . getString ( " name " ) ) ; city . set@@ City@@ Code ( province@@ Object . getInt ( " id " ) ) ; city . set@@ Province@@ Id ( province@@ Id ) ; city . save ( ) ; } return true ; } catch ( JSONException e ) { e . printStackTrace ( ) ; } } return false ; } </s>


INFO - 01/14/22 19:39:07 - 7:14:23 - ========== Train go_sa-go_sa example ==========
INFO - 01/14/22 19:39:07 - 7:14:23 - source sent: </s> <special1> UpdateTemplate<special1> <special1> ked M<special1> testing <special1> <special1> * templateT In <special1> , . types <special1> ) <special1> Template * assert assert <special1> <special1> New ( <special1> // ) ▁ <special1> up <special1> <special1> cs := Mock. utils & Contocer{ } err , <special1> <special1> New<special1> <special1> ( <special1> <special1> assert . Nil ( <special1> err ' Couldn ▁ t <special1> ▁ service ▁ <special1> <special1> . NEW_LINE NotNil ds , ( " service Template <special1> ▁ not instance▁ <special1> " <special1> <special1> // ▁ Map convertIn <special1> ENDCOM , err := ItemConvert. utils Params ( <special1> In assert <special1> NEW_LINE ( ▁ " <special1> <special1> ▁ <special1> " ▁ ) // corrupted NEW_LINE <special1> ▁ ENDCOM json dOut json , err ( := <special1> template) NEW_LINE assert . err Nil ( ▁ <special1> data test ▁ <special1> corrupted " <special1> call <special1> // ▁ <special1> ▁ On . cs <special1> Put , " fmt <special1> <special1> blu<special1> " <special1> / templates eprint / s <special1> " In <special1> . ID <special1> , ) map) Return Out <special1> , . <special1> , Errorf " ( ocked <special1> error ) ) " NEW_LINE template, Out := ds err <special1> ( Template template, <special1> <special1> . <special1> NEW_LINE <special1> NotNil . ( , err " ▁ We are ▁ <special1> <special1> an ▁ ) <special1> <special1> " Nil assert . , Out <special1> template" <special1> <special1> Expecting <special1> <special1> output " ) Equal NEW_LINE . ( ( err Error . ) , oc" ked error " " ▁ , Error ▁ should ' ▁ be <special1> ocm<special1> ' ▁ ) " return NEW_LINE NEW_LINE templateOut </s>
INFO - 01/14/22 19:39:07 - 7:14:23 - target sent: </s> func UpdateTemplateFailErrMocked ( t * testing . T , templateIn * types . Template ) * types . Template { assert := assert . New ( t ) NEW_LINE // ▁ wire ▁ up ENDCOM cs := & utils . MockConcertoService { } NEW_LINE ds , err := NewTemplateService ( cs ) NEW_LINE assert . Nil ( err , " Couldn ' t ▁ load ▁ template ▁ service " ) NEW_LINE assert . NotNil ( ds , " Template ▁ service ▁ not ▁ instanced " ) NEW_LINE // ▁ convertMap ENDCOM mapIn , err := utils . ItemConvertParams ( * templateIn ) NEW_LINE assert . Nil ( err , " Template ▁ test ▁ data ▁ corrupted " ) NEW_LINE // ▁ to ▁ json ENDCOM dOut , err := json . Marshal ( templateIn ) NEW_LINE assert . Nil ( err , " Template ▁ test ▁ data ▁ corrupted " ) NEW_LINE // ▁ call ▁ service ENDCOM cs . On ( " Put " , fmt . Sprintf ( " / blueprint / templates / % s " , templateIn . ID ) , mapIn ) . Return ( dOut , 200 , fmt . Errorf ( " mocked ▁ error " ) ) NEW_LINE templateOut , err := ds . UpdateTemplate ( mapIn , templateIn . ID ) NEW_LINE assert . NotNil ( err , " We ▁ are ▁ expecting ▁ an ▁ error " ) NEW_LINE assert . Nil ( templateOut , " Expecting ▁ nil ▁ output " ) NEW_LINE assert . Equal ( err . Error ( ) , " mocked ▁ error " , " Error ▁ should ▁ be ▁ ' mocked ▁ error ' " ) NEW_LINE return templateOut NEW_LINE } </s>

INFO - 01/14/22 19:39:07 - 7:14:23 - source tok: </s> <special1> Update@@ Template@@ <special1> <special1> ked M@@ <special1> testing <special1> <special1> * template@@ T In <special1> , . types <special1> ) <special1> Template * assert assert <special1> <special1> New ( <special1> // ) ▁ <special1> up <special1> <special1> cs := Mock@@ . utils & Con@@ to@@ cer@@ { } err , <special1> <special1> New@@ <special1> <special1> ( <special1> <special1> assert . Nil ( <special1> err ' Couldn ▁ t <special1> ▁ service ▁ <special1> <special1> . NEW_LINE NotNil ds , ( " service Template <special1> ▁ not instance@@ ▁ <special1> " <special1> <special1> // ▁ Map convert@@ In <special1> ENDCOM , err := Item@@ Convert@@ . utils Params ( <special1> In assert <special1> NEW_LINE ( ▁ " <special1> <special1> ▁ <special1> " ▁ ) // corrupted NEW_LINE <special1> ▁ ENDCOM json d@@ Out json , err ( := <special1> template@@ ) NEW_LINE assert . err Nil ( ▁ <special1> data test ▁ <special1> corrupted " <special1> call <special1> // ▁ <special1> ▁ On . cs <special1> Put , " fmt <special1> <special1> blu@@ <special1> " <special1> / templates eprint / s <special1> " In <special1> . ID <special1> , ) map@@ ) Return Out <special1> , . <special1> , Errorf " ( oc@@ ked <special1> error ) ) " NEW_LINE template@@ , Out := ds err <special1> ( Template template@@ , <special1> <special1> . <special1> NEW_LINE <special1> NotNil . ( , err " ▁ We are ▁ <special1> <special1> an ▁ ) <special1> <special1> " Nil assert . , Out <special1> template@@ " <special1> <special1> Expecting <special1> <special1> output " ) Equal NEW_LINE . ( ( err Error . ) , oc@@ " ked error " " ▁ , Error ▁ should ' ▁ be <special1> oc@@ m@@ <special1> ' ▁ ) " return NEW_LINE NEW_LINE template@@ Out </s>
INFO - 01/14/22 19:39:07 - 7:14:23 - target tok: </s> func Update@@ Template@@ Fail@@ Err@@ M@@ oc@@ ked ( t * testing . T , template@@ In * types . Template ) * types . Template { assert := assert . New ( t ) NEW_LINE // ▁ wire ▁ up ENDCOM cs := & utils . Mock@@ Con@@ cer@@ to@@ Service { } NEW_LINE ds , err := New@@ Template@@ Service ( cs ) NEW_LINE assert . Nil ( err , " Couldn ' t ▁ load ▁ template ▁ service " ) NEW_LINE assert . NotNil ( ds , " Template ▁ service ▁ not ▁ instance@@ d " ) NEW_LINE // ▁ convert@@ Map ENDCOM map@@ In , err := utils . Item@@ Convert@@ Params ( * template@@ In ) NEW_LINE assert . Nil ( err , " Template ▁ test ▁ data ▁ corrupted " ) NEW_LINE // ▁ to ▁ json ENDCOM d@@ Out , err := json . Marshal ( template@@ In ) NEW_LINE assert . Nil ( err , " Template ▁ test ▁ data ▁ corrupted " ) NEW_LINE // ▁ call ▁ service ENDCOM cs . On ( " Put " , fmt . Sprintf ( " / blu@@ eprint / templates / % s " , template@@ In . ID ) , map@@ In ) . Return ( d@@ Out , 200 , fmt . Errorf ( " m@@ oc@@ ked ▁ error " ) ) NEW_LINE template@@ Out , err := ds . Update@@ Template ( map@@ In , template@@ In . ID ) NEW_LINE assert . NotNil ( err , " We ▁ are ▁ expecting ▁ an ▁ error " ) NEW_LINE assert . Nil ( template@@ Out , " Expecting ▁ nil ▁ output " ) NEW_LINE assert . Equal ( err . Error ( ) , " m@@ oc@@ ked ▁ error " , " Error ▁ should ▁ be ▁ ' m@@ oc@@ ked ▁ error ' " ) NEW_LINE return template@@ Out NEW_LINE } </s>


INFO - 01/14/22 19:39:23 - 7:14:38 - ========== BT java_sa-go_sa example ==========
INFO - 01/14/22 19:39:23 - 7:14:39 - Generated source sent: </s> func ( c * Client ) GetPostForm ( ctx context . Context , req * http . Request ) ( * http . Response , error ) { var ( resp * http . Response NEW_LINE err error NEW_LINE ) NEW_LINE if req . Method != " GET " { err = c . client . Do ( ctx , req ) NEW_LINE if err != nil { return nil , err NEW_LINE } NEW_LINE resp = & http . Response { StatusCode : resp . StatusCode , Body : ioutil . NopCloser ( bytes . NewReader ( [ ] byte ( " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " name " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " id " : " " , " name " : " " , " name " : " " , " type " : " post " , " name " : " " , " name " : " " , " type " : " post " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " type " : " post " , " name " : " post " , " name " : " post " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " post " , " : " post " , " name " : " " , " type " : " post " , " name " : " post " , " name " : " " , " type " : " post " , " type " : " post " , " name " : " post " : " post " , " , " name " : " " , " type " : " post " , " name " : " post " : " post " , " name " : " " , " type " : " post " , " type " : " post " , " name " : " post " , " , " name " : " post " , " type " : " post " , " name " : " post </s>
INFO - 01/14/22 19:39:23 - 7:14:39 - Target (x1) sent: </s> static InputPortPtr input_ports_megazone = new InputPortPtr ( ) { public void handler ( ) { PORT_START ( ) ; /* ▁ IN0 ▁ */ PORT_BIT ( 0x01 , IP_ACTIVE_LOW , IPT_COIN1 ) ; PORT_BIT ( 0x02 , IP_ACTIVE_LOW , IPT_COIN2 ) ; PORT_BIT ( 0x04 , IP_ACTIVE_LOW , IPT_COIN3 ) ; PORT_BIT ( 0x08 , IP_ACTIVE_LOW , IPT_START1 ) ; PORT_BIT ( 0x10 , IP_ACTIVE_LOW , IPT_START2 ) ; PORT_BIT ( 0x20 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_BIT ( 0x40 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_BIT ( 0x80 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_START ( ) ; /* ▁ IN1 ▁ */ PORT_BIT ( 0x01 , IP_ACTIVE_LOW , IPT_JOYSTICK_LEFT | IPF_8WAY ) ; PORT_BIT ( 0x02 , IP_ACTIVE_LOW , IPT_JOYSTICK_RIGHT | IPF_8WAY ) ; PORT_BIT ( 0x04 , IP_ACTIVE_LOW , IPT_JOYSTICK_UP | IPF_8WAY ) ; PORT_BIT ( 0x08 , IP_ACTIVE_LOW , IPT_JOYSTICK_DOWN | IPF_8WAY ) ; PORT_BIT ( 0x10 , IP_ACTIVE_LOW , IPT_BUTTON1 ) ; PORT_BIT ( 0x20 , IP_ACTIVE_LOW , IPT_BUTTON2 ) ; PORT_BIT ( 0x40 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_BIT ( 0x80 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_START ( ) ; /* ▁ IN2 ▁ */ PORT_BIT ( 0x01 , IP_ACTIVE_LOW , IPT_JOYSTICK_LEFT | IPF_8WAY | IPF_COCKTAIL ) ; PORT_BIT ( 0x02 , IP_ACTIVE_LOW , IPT_JOYSTICK_RIGHT | IPF_8WAY | IPF_COCKTAIL ) ; PORT_BIT ( 0x04 , IP_ACTIVE_LOW , IPT_JOYSTICK_UP | IPF_8WAY | IPF_COCKTAIL ) ; PORT_BIT ( 0x08 , IP_ACTIVE_LOW , IPT_JOYSTICK_DOWN | IPF_8WAY | IPF_COCKTAIL ) ; PORT_BIT ( 0x10 , IP_ACTIVE_LOW , IPT_BUTTON1 | IPF_COCKTAIL ) ; PORT_BIT ( 0x20 , IP_ACTIVE_LOW , IPT_BUTTON1 | IPF_COCKTAIL ) ; PORT_BIT ( 0x40 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_BIT ( 0x80 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_START ( ) ; /* ▁ DSW1 ▁ */ PORT_DIPNAME ( 0x0f , 0x0f , DEF_STR ( " Coin _ A " ) ) ; PORT_DIPSETTING ( 0x02 , DEF_STR ( "4C _ 1C " ) ) ; PORT_DIPSETTING ( 0x05 , DEF_STR ( "3C _ 1C " ) ) ; PORT_DIPSETTING ( 0x08 , DEF_STR ( "2C _ 1C " ) ) ; PORT_DIPSETTING ( 0x04 , DEF_STR ( "3C _ 2C " ) ) ; PORT_DIPSETTING ( 0x01 , DEF_STR ( "4C _ 3C " ) ) ; PORT_DIPSETTING ( 0x0f , DEF_STR ( "1C _ 1C " ) ) ; PORT_DIPSETTING ( 0x03 , DEF_STR ( "3C _ 4C " ) ) ; PORT_DIPSETTING ( 0x07 , DEF_STR ( "2C _ 3C " ) ) ; PORT_DIPSETTING ( 0x0e , DEF_STR ( "1C _ 2C " ) ) ; PORT_DIPSETTING ( 0x06 , DEF_STR ( "2C _ 5C " ) ) ; PORT_DIPSETTING ( 0x0d , DEF_STR ( "1C _ 3C " ) ) ; PORT_DIPSETTING ( 0x0c , DEF_STR ( "1C _ 4C " ) ) ; PORT_DIPSETTING ( 0x0b , DEF_STR ( "1C _ 5C " ) ) ; PORT_DIPSETTING ( 0x0a , DEF_STR ( "1C _ 6C " ) ) ; PORT_DIPSETTING ( 0x09 , DEF_STR ( "1C _ 7C " ) ) ; PORT_DIPSETTING ( 0x00 , DEF_STR ( " Free _ Play " ) ) ; PORT_DIPNAME ( 0xf0 , 0xf0 , DEF_STR ( " Coin _ B " ) ) ; PORT_DIPSETTING ( 0x20 , DEF_STR ( "4C _ 1C " ) ) ; PORT_DIPSETTING ( 0x50 , DEF_STR ( "3C _ 1C " ) ) ; PORT_DIPSETTING ( 0x80 , DEF_STR ( "2C _ 1C " ) ) ; PORT_DIPSETTING ( 0x40 , DEF_STR ( "3C _ 2C " ) ) ; PORT_DIPSETTING ( 0x10 , DEF_STR ( "4C _ 3C " ) ) ; PORT_DIPSETTING ( 0xf0 , DEF_STR ( "1C _ 1C " ) ) ; PORT_DIPSETTING ( 0x30 , DEF_STR ( "3C _ 4C " ) ) ; PORT_DIPSETTING ( 0x70 , DEF_STR ( "2C _ 3C " ) ) ; PORT_DIPSETTING ( 0xe0 , DEF_STR ( "1C _ 2C " ) ) ; PORT_DIPSETTING ( 0x60 , DEF_STR ( "2C _ 5C " ) ) ; PORT_DIPSETTING ( 0xd0 , DEF_STR ( "1C _ 3C " ) ) ; PORT_DIPSETTING ( 0xc0 , DEF_STR ( "1C _ 4C " ) ) ; PORT_DIPSETTING ( 0xb0 , DEF_STR ( "1C _ 5C " ) ) ; PORT_DIPSETTING ( 0xa0 , DEF_STR ( "1C _ 6C " ) ) ; PORT_DIPSETTING ( 0x90 , DEF_STR ( "1C _ 7C " ) ) ; PORT_DIPSETTING ( 0x00 , DEF_STR ( " Free _ Play " ) ) ; PORT_START ( ) ; /* ▁ DSW2 ▁ */ PORT_DIPNAME ( 0x03 , 0x03 , DEF_STR ( " Lives " ) ) ; PORT_DIPSETTING ( 0x03 , "3" ) ; PORT_DIPSETTING ( 0x02 , "4" ) ; PORT_DIPSETTING ( 0x01 , "5" ) ; PORT_BITX ( 0 , 0x00 , IPT_DIPSWITCH_SETTING | IPF_CHEAT , " Infinite " , IP_KEY_NONE , IP_JOY_NONE ) ; PORT_DIPNAME ( 0x04 , 0x00 , DEF_STR ( " Cabinet " ) ) ; PORT_DIPSETTING ( 0x00 , DEF_STR ( " Upright " ) ) ; PORT_DIPSETTING ( 0x04 , DEF_STR ( " Cocktail " ) ) ; PORT_DIPNAME ( 0x18 , 0x18 , DEF_STR ( " Bonus _ Life " ) ) ; PORT_DIPSETTING ( 0x18 , "20k ▁ 70k " ) ; PORT_DIPSETTING ( 0x10 , "20k ▁ 80k " ) ; PORT_DIPSETTING ( 0x08 , "30k ▁ 90k " ) ; PORT_DIPSETTING ( 0x00 , "30k ▁ 100k " ) ; PORT_DIPNAME ( 0x60 , 0x40 , DEF_STR ( " Difficulty " ) ) ; PORT_DIPSETTING ( 0x60 , " Easy " ) ; PORT_DIPSETTING ( 0x40 , " Normal " ) ; PORT_DIPSETTING ( 0x20 , " Difficult " ) ; PORT_DIPSETTING ( 0x00 , " Very ▁ Difficult " ) ; PORT_DIPNAME ( 0x80 , 0x80 , DEF_STR ( " Demo _ Sounds " ) ) ; PORT_DIPSETTING ( 0x80 , DEF_STR ( " Off " ) ) ; PORT_DIPSETTING ( 0x00 , DEF_STR ( " On " ) ) ; INPUT_PORTS_END ( ) ; } } </s>

INFO - 01/14/22 19:39:23 - 7:14:39 - Generated source tok: </s> func ( c * Client ) Get@@ Post@@ Form ( ctx context . Context , req * http . Request ) ( * http . Response , error ) { var ( resp * http . Response NEW_LINE err error NEW_LINE ) NEW_LINE if req . Method != " GET " { err = c . client . Do ( ctx , req ) NEW_LINE if err != nil { return nil , err NEW_LINE } NEW_LINE resp = & http . Response { StatusCode : resp . StatusCode , Body : ioutil . NopCloser ( bytes . NewReader ( [ ] byte ( " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " name " : " " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " name " : " " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " body " : " { " + " id " : " " , " id " : " " , " name " : " " , " name " : " " , " type " : " post " , " name " : " " , " name " : " " , " type " : " post " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " " , " type " : " post " , " type " : " post " , " name " : " post " , " name " : " post " , " type " : " post " , " name " : " " , " type " : " post " , " name " : " post " , " : " post " , " name " : " " , " type " : " post " , " name " : " post " , " name " : " " , " type " : " post " , " type " : " post " , " name " : " post " : " post " , " , " name " : " " , " type " : " post " , " name " : " post " : " post " , " name " : " " , " type " : " post " , " type " : " post " , " name " : " post " , " , " name " : " post " , " type " : " post " , " name " : " post </s>
INFO - 01/14/22 19:39:23 - 7:14:39 - Target (x1) tok: </s> static Input@@ Port@@ Ptr input_@@ port@@ s_@@ meg@@ az@@ one = new Input@@ Port@@ Ptr ( ) { public void handler ( ) { PORT_START ( ) ; /* ▁ IN@@ 0 ▁ */ PORT_BIT ( 0x01 , IP_ACTIVE_LOW , IPT_@@ COIN@@ 1 ) ; PORT_BIT ( 0x02 , IP_ACTIVE_LOW , IPT_@@ COIN@@ 2 ) ; PORT_BIT ( 0x04 , IP_ACTIVE_LOW , IPT_@@ COIN@@ 3 ) ; PORT_BIT ( 0x08 , IP_ACTIVE_LOW , IPT_@@ STAR@@ T1 ) ; PORT_BIT ( 0x10 , IP_ACTIVE_LOW , IPT_@@ STAR@@ T2 ) ; PORT_BIT ( 0x20 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_BIT ( 0x40 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_BIT ( 0x80 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_START ( ) ; /* ▁ IN@@ 1 ▁ */ PORT_BIT ( 0x01 , IP_ACTIVE_LOW , IPT_JOYSTICK_@@ LEFT | IP@@ F_@@ 8@@ WAY ) ; PORT_BIT ( 0x02 , IP_ACTIVE_LOW , IPT_JOYSTICK_@@ RIGHT | IP@@ F_@@ 8@@ WAY ) ; PORT_BIT ( 0x04 , IP_ACTIVE_LOW , IPT_JOYSTICK_@@ UP | IP@@ F_@@ 8@@ WAY ) ; PORT_BIT ( 0x08 , IP_ACTIVE_LOW , IPT_JOYSTICK_@@ DOWN | IP@@ F_@@ 8@@ WAY ) ; PORT_BIT ( 0x10 , IP_ACTIVE_LOW , IPT_BUTTON@@ 1 ) ; PORT_BIT ( 0x20 , IP_ACTIVE_LOW , IPT_BUTTON@@ 2 ) ; PORT_BIT ( 0x40 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_BIT ( 0x80 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_START ( ) ; /* ▁ IN@@ 2 ▁ */ PORT_BIT ( 0x01 , IP_ACTIVE_LOW , IPT_JOYSTICK_@@ LEFT | IP@@ F_@@ 8@@ WAY | IP@@ F_@@ CO@@ CK@@ TA@@ IL ) ; PORT_BIT ( 0x02 , IP_ACTIVE_LOW , IPT_JOYSTICK_@@ RIGHT | IP@@ F_@@ 8@@ WAY | IP@@ F_@@ CO@@ CK@@ TA@@ IL ) ; PORT_BIT ( 0x04 , IP_ACTIVE_LOW , IPT_JOYSTICK_@@ UP | IP@@ F_@@ 8@@ WAY | IP@@ F_@@ CO@@ CK@@ TA@@ IL ) ; PORT_BIT ( 0x08 , IP_ACTIVE_LOW , IPT_JOYSTICK_@@ DOWN | IP@@ F_@@ 8@@ WAY | IP@@ F_@@ CO@@ CK@@ TA@@ IL ) ; PORT_BIT ( 0x10 , IP_ACTIVE_LOW , IPT_BUTTON@@ 1 | IP@@ F_@@ CO@@ CK@@ TA@@ IL ) ; PORT_BIT ( 0x20 , IP_ACTIVE_LOW , IPT_BUTTON@@ 1 | IP@@ F_@@ CO@@ CK@@ TA@@ IL ) ; PORT_BIT ( 0x40 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_BIT ( 0x80 , IP_ACTIVE_LOW , IPT_UNKNOWN ) ; PORT_START ( ) ; /* ▁ DSW@@ 1 ▁ */ PORT_DIPNAME ( 0x0f , 0x0f , DEF_STR ( " Coin _ A " ) ) ; PORT_DIPSETTING ( 0x02 , DEF_STR ( "4@@ C _ 1C " ) ) ; PORT_DIPSETTING ( 0x05 , DEF_STR ( "3@@ C _ 1C " ) ) ; PORT_DIPSETTING ( 0x08 , DEF_STR ( "2@@ C _ 1C " ) ) ; PORT_DIPSETTING ( 0x04 , DEF_STR ( "3@@ C _ 2C " ) ) ; PORT_DIPSETTING ( 0x01 , DEF_STR ( "4@@ C _ 3C " ) ) ; PORT_DIPSETTING ( 0x0f , DEF_STR ( "1@@ C _ 1C " ) ) ; PORT_DIPSETTING ( 0x03 , DEF_STR ( "3@@ C _ 4@@ C " ) ) ; PORT_DIPSETTING ( 0x07 , DEF_STR ( "2@@ C _ 3C " ) ) ; PORT_DIPSETTING ( 0x0e , DEF_STR ( "1@@ C _ 2C " ) ) ; PORT_DIPSETTING ( 0x06 , DEF_STR ( "2@@ C _ 5@@ C " ) ) ; PORT_DIPSETTING ( 0x0d , DEF_STR ( "1@@ C _ 3C " ) ) ; PORT_DIPSETTING ( 0x0c , DEF_STR ( "1@@ C _ 4@@ C " ) ) ; PORT_DIPSETTING ( 0x0b , DEF_STR ( "1@@ C _ 5@@ C " ) ) ; PORT_DIPSETTING ( 0x0a , DEF_STR ( "1@@ C _ 6@@ C " ) ) ; PORT_DIPSETTING ( 0x09 , DEF_STR ( "1@@ C _ 7@@ C " ) ) ; PORT_DIPSETTING ( 0x00 , DEF_STR ( " Free _ Play " ) ) ; PORT_DIPNAME ( 0xf0 , 0xf0 , DEF_STR ( " Coin _ B " ) ) ; PORT_DIPSETTING ( 0x20 , DEF_STR ( "4@@ C _ 1C " ) ) ; PORT_DIPSETTING ( 0x50 , DEF_STR ( "3@@ C _ 1C " ) ) ; PORT_DIPSETTING ( 0x80 , DEF_STR ( "2@@ C _ 1C " ) ) ; PORT_DIPSETTING ( 0x40 , DEF_STR ( "3@@ C _ 2C " ) ) ; PORT_DIPSETTING ( 0x10 , DEF_STR ( "4@@ C _ 3C " ) ) ; PORT_DIPSETTING ( 0xf0 , DEF_STR ( "1@@ C _ 1C " ) ) ; PORT_DIPSETTING ( 0x30 , DEF_STR ( "3@@ C _ 4@@ C " ) ) ; PORT_DIPSETTING ( 0x70 , DEF_STR ( "2@@ C _ 3C " ) ) ; PORT_DIPSETTING ( 0xe0 , DEF_STR ( "1@@ C _ 2C " ) ) ; PORT_DIPSETTING ( 0x60 , DEF_STR ( "2@@ C _ 5@@ C " ) ) ; PORT_DIPSETTING ( 0xd0 , DEF_STR ( "1@@ C _ 3C " ) ) ; PORT_DIPSETTING ( 0xc0 , DEF_STR ( "1@@ C _ 4@@ C " ) ) ; PORT_DIPSETTING ( 0xb0 , DEF_STR ( "1@@ C _ 5@@ C " ) ) ; PORT_DIPSETTING ( 0xa0 , DEF_STR ( "1@@ C _ 6@@ C " ) ) ; PORT_DIPSETTING ( 0x90 , DEF_STR ( "1@@ C _ 7@@ C " ) ) ; PORT_DIPSETTING ( 0x00 , DEF_STR ( " Free _ Play " ) ) ; PORT_START ( ) ; /* ▁ DSW@@ 2 ▁ */ PORT_DIPNAME ( 0x03 , 0x03 , DEF_STR ( " Li@@ ves " ) ) ; PORT_DIPSETTING ( 0x03 , "3" ) ; PORT_DIPSETTING ( 0x02 , "4" ) ; PORT_DIPSETTING ( 0x01 , "5" ) ; PORT_@@ BIT@@ X ( 0 , 0x00 , IPT_@@ DIP@@ SWITCH_@@ SETTING | IP@@ F_@@ CHE@@ AT , " Infin@@ ite " , IP_@@ KEY_@@ NONE , IP_@@ JO@@ Y_@@ NONE ) ; PORT_DIPNAME ( 0x04 , 0x00 , DEF_STR ( " Cab@@ inet " ) ) ; PORT_DIPSETTING ( 0x00 , DEF_STR ( " U@@ pri@@ ght " ) ) ; PORT_DIPSETTING ( 0x04 , DEF_STR ( " Co@@ ck@@ tail " ) ) ; PORT_DIPNAME ( 0x18 , 0x18 , DEF_STR ( " Bonus _ Life " ) ) ; PORT_DIPSETTING ( 0x18 , "20@@ k ▁ 70@@ k " ) ; PORT_DIPSETTING ( 0x10 , "20@@ k ▁ 80@@ k " ) ; PORT_DIPSETTING ( 0x08 , "30@@ k ▁ 90@@ k " ) ; PORT_DIPSETTING ( 0x00 , "30@@ k ▁ 100@@ k " ) ; PORT_DIPNAME ( 0x60 , 0x40 , DEF_STR ( " Difficulty " ) ) ; PORT_DIPSETTING ( 0x60 , " E@@ asy " ) ; PORT_DIPSETTING ( 0x40 , " Normal " ) ; PORT_DIPSETTING ( 0x20 , " Diffic@@ ult " ) ; PORT_DIPSETTING ( 0x00 , " Ver@@ y ▁ Diffic@@ ult " ) ; PORT_DIPNAME ( 0x80 , 0x80 , DEF_STR ( " Demo _ Sounds " ) ) ; PORT_DIPSETTING ( 0x80 , DEF_STR ( " Off " ) ) ; PORT_DIPSETTING ( 0x00 , DEF_STR ( " On " ) ) ; INPUT_PORTS_@@ END ( ) ; } } </s>


INFO - 01/14/22 19:39:40 - 7:14:55 - ========== BT go_sa-java_sa example ==========
INFO - 01/14/22 19:39:40 - 7:14:56 - Generated source sent: </s> /* * STRNEWLINE ▁ * ▁ Returns ▁ the ▁ number ▁ of ▁ elements ▁ in ▁ the ▁ given ▁ array ▁ in ▁ the ▁ given ▁ array . STRNEWLINE ▁ * STRNEWLINE ▁ * ▁ @ param ▁ array ▁ the ▁ array ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ array . STRNEWLINE ▁ * ▁ @ return ▁ the ▁ number ▁ of ▁ elements ▁ in ▁ the ▁ given ▁ array . STRNEWLINE ▁ */ public static int length ( final int array ) { if ( array == null ) { return 0 ; } final int length = array . length ( ) ; final int index = array . indexOf ( array ) ; if ( index < 0 ) { throw new IllegalArgumentException ( " Index ▁ must ▁ be ▁ greater ▁ than ▁ zero " ) ; } final int length = index + length ; final int index = index + length ; final int length = length ; final int index = index + length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final </s>
INFO - 01/14/22 19:39:40 - 7:14:56 - Target (x1) sent: </s> func ( actor Actor ) ZipDirectoryResources ( sourceDir string , filesToInclude [ ] Resource ) ( string , error ) { log . WithField ( " sourceDir " , sourceDir ) . Info ( " zipping ▁ source ▁ files ▁ from ▁ directory " ) NEW_LINE zipFile , err := ioutil . TempFile ( " " , " cf - cli - " ) NEW_LINE if err != nil { return " " , err NEW_LINE } NEW_LINE defer zipFile . Close ( ) NEW_LINE zipPath := zipFile . Name ( ) NEW_LINE writer := zip . NewWriter ( zipFile ) NEW_LINE defer writer . Close ( ) NEW_LINE for _ , resource := range filesToInclude { fullPath := filepath . Join ( sourceDir , resource . Filename ) NEW_LINE log . WithField ( " fullPath " , fullPath ) . Debug ( " zipping ▁ file " ) NEW_LINE fileInfo , err := os . Lstat ( fullPath ) NEW_LINE if err != nil { log . WithField ( " fullPath " , fullPath ) . Errorln ( " stat ▁ error ▁ in ▁ dir : " , err ) NEW_LINE return zipPath , err NEW_LINE } NEW_LINE log . WithField ( " file - mode " , fileInfo . Mode ( ) . String ( ) ) . Debug ( " resource ▁ file ▁ info " ) NEW_LINE if fileInfo . Mode ( ) & os . ModeSymlink == os . ModeSymlink { // ▁ we ▁ need ▁ to ▁ user ▁ os . Readlink ▁ to ▁ read ▁ a ▁ symlink ▁ file ▁ from ▁ a ▁ directory ENDCOM err = actor . addLinkToZipFromFileSystem ( fullPath , fileInfo , resource , writer ) NEW_LINE if err != nil { log . WithField ( " fullPath " , fullPath ) . Errorln ( " zipping ▁ file : " , err ) NEW_LINE return zipPath , err NEW_LINE } NEW_LINE } else { srcFile , err := os . Open ( fullPath ) NEW_LINE defer srcFile . Close ( ) NEW_LINE if err != nil { log . WithField ( " fullPath " , fullPath ) . Errorln ( " opening ▁ path ▁ in ▁ dir : " , err ) NEW_LINE return zipPath , err NEW_LINE } NEW_LINE err = actor . addFileToZipFromFileSystem ( fullPath , srcFile , fileInfo , resource , writer , ) NEW_LINE srcFile . Close ( ) NEW_LINE if err != nil { log . WithField ( " fullPath " , fullPath ) . Errorln ( " zipping ▁ file : " , err ) NEW_LINE return zipPath , err NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE log . WithFields ( log . Fields { " zip _ file _ location " : zipFile . Name ( ) , " zipped _ file _ count " : len ( filesToInclude ) , } ) . Info ( " zip ▁ file ▁ created " ) NEW_LINE return zipPath , nil NEW_LINE } </s>

INFO - 01/14/22 19:39:40 - 7:14:56 - Generated source tok: </s> /* * STRNEWLINE ▁ * ▁ Returns ▁ the ▁ number ▁ of ▁ elements ▁ in ▁ the ▁ given ▁ array ▁ in ▁ the ▁ given ▁ array . STRNEWLINE ▁ * STRNEWLINE ▁ * ▁ @ param ▁ array ▁ the ▁ array ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ array . STRNEWLINE ▁ * ▁ @ return ▁ the ▁ number ▁ of ▁ elements ▁ in ▁ the ▁ given ▁ array . STRNEWLINE ▁ */ public static int length ( final int array ) { if ( array == null ) { return 0 ; } final int length = array . length ( ) ; final int index = array . indexOf ( array ) ; if ( index < 0 ) { throw new IllegalArgumentException ( " Index ▁ must ▁ be ▁ greater ▁ than ▁ zero " ) ; } final int length = index + length ; final int index = index + length ; final int length = length ; final int index = index + length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final int length = length ; final </s>
INFO - 01/14/22 19:39:40 - 7:14:56 - Target (x1) tok: </s> func ( actor Actor ) Zip@@ Directory@@ Resources ( source@@ Dir string , file@@ sTo@@ Include [ ] Resource ) ( string , error ) { log . WithField ( " source@@ Dir " , source@@ Dir ) . Info ( " z@@ ipp@@ ing ▁ source ▁ files ▁ from ▁ directory " ) NEW_LINE zipFile , err := ioutil . TempFile ( " " , " cf - cli - " ) NEW_LINE if err != nil { return " " , err NEW_LINE } NEW_LINE defer zipFile . Close ( ) NEW_LINE zip@@ Path := zipFile . Name ( ) NEW_LINE writer := zip . NewWriter ( zipFile ) NEW_LINE defer writer . Close ( ) NEW_LINE for _ , resource := range file@@ sTo@@ Include { fullPath := filepath . Join ( source@@ Dir , resource . Filename ) NEW_LINE log . WithField ( " fullPath " , fullPath ) . Debug ( " z@@ ipp@@ ing ▁ file " ) NEW_LINE fileInfo , err := os . L@@ stat ( fullPath ) NEW_LINE if err != nil { log . WithField ( " fullPath " , fullPath ) . Error@@ ln ( " stat ▁ error ▁ in ▁ dir : " , err ) NEW_LINE return zip@@ Path , err NEW_LINE } NEW_LINE log . WithField ( " file - mode " , fileInfo . Mode ( ) . String ( ) ) . Debug ( " resource ▁ file ▁ info " ) NEW_LINE if fileInfo . Mode ( ) & os . Mode@@ Symlink == os . Mode@@ Symlink { // ▁ we ▁ need ▁ to ▁ user ▁ os . Read@@ link ▁ to ▁ read ▁ a ▁ symlink ▁ file ▁ from ▁ a ▁ directory ENDCOM err = actor . add@@ Link@@ To@@ Zip@@ From@@ FileSystem ( fullPath , fileInfo , resource , writer ) NEW_LINE if err != nil { log . WithField ( " fullPath " , fullPath ) . Error@@ ln ( " z@@ ipp@@ ing ▁ file : " , err ) NEW_LINE return zip@@ Path , err NEW_LINE } NEW_LINE } else { src@@ File , err := os . Open ( fullPath ) NEW_LINE defer src@@ File . Close ( ) NEW_LINE if err != nil { log . WithField ( " fullPath " , fullPath ) . Error@@ ln ( " opening ▁ path ▁ in ▁ dir : " , err ) NEW_LINE return zip@@ Path , err NEW_LINE } NEW_LINE err = actor . add@@ FileTo@@ Zip@@ From@@ FileSystem ( fullPath , src@@ File , fileInfo , resource , writer , ) NEW_LINE src@@ File . Close ( ) NEW_LINE if err != nil { log . WithField ( " fullPath " , fullPath ) . Error@@ ln ( " z@@ ipp@@ ing ▁ file : " , err ) NEW_LINE return zip@@ Path , err NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE log . WithFields ( log . Fields { " zip _ file _ location " : zipFile . Name ( ) , " z@@ ipped _ file _ count " : len ( file@@ sTo@@ Include ) , } ) . Info ( " zip ▁ file ▁ created " ) NEW_LINE return zip@@ Path , nil NEW_LINE } </s>


INFO - 01/14/22 19:39:57 - 7:15:12 - ========== BT cpp_sa-go_sa example ==========
INFO - 01/14/22 19:39:57 - 7:15:12 - Generated source sent: </s> func ( c * Client ) GetProjectByIDIDByName ( id string ) ( * Project , error ) { var project * Project NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err </s>
INFO - 01/14/22 19:39:57 - 7:15:12 - Target (x1) sent: </s> THING_INDEX PCOM_create_person ( SLONG type , SLONG colour , SLONG group , SLONG ai , SLONG ai_other , SLONG ai_skill , SLONG move , SLONG move_follow , SLONG bent , SLONG pcom_has , SLONG drop , SLONG pcom_zone , SLONG world_x , SLONG world_y , SLONG world_z , SLONG yaw , SLONG random , ULONG flag1 , ULONG flag2 ) { if ( pcom_has & ( PCOM_HAS_SHOTGUN | PCOM_HAS_KNIFE | PCOM_HAS_BASEBALLBAT ) ) { // TABSYMBOL TABSYMBOL type ▁ = ▁ PERSON _ DARCI ; ▁ // EWAY _ SUBTYPE _ PLAYER _ DARCI ; // PERSON _ DARCI ; ENDCOM } if ( pcom_has & PCOM_HAS_GUN ) { if ( drop == SPECIAL_GUN ) { drop = 0 ; } } if ( ai == PCOM_AI_ASSASIN ) { TRACE ( " hello " ) ; } if ( ai == PCOM_AI_ASSASIN && move == PCOM_MOVE_WANDER ) { // ▁ Make ▁ wandering ▁ assasins , ▁ follow ▁ who ▁ they ▁ are ▁ assasinating . ENDCOM move = PCOM_MOVE_FOLLOW ; move_follow = ai_other ; } // TABSYMBOL ASSERT ( type ! = PERSON _ CIV ) ; ENDCOM THING_INDEX p_index = create_person ( type , random , world_x , world_y , world_z ) ; if ( p_index == NULL ) { #ifndef PSX #ifndef NDEBUG PANEL_new_text ( NULL , 10000 , " Couldn ' t ▁ create ▁ person , ▁ PersonType ▁ % d ▁ ai ▁ % s " , type , PCOM_ai_name [ ai ] ) ; #endif #endif } else { Thing * p_person = TO_THING ( p_index ) ; if ( type == PERSON_COP ) { if ( ai == PCOM_AI_DRIVER ) ai = PCOM_AI_COP_DRIVER ; } p_person -> Draw . Tweened -> Angle = yaw ; p_person -> Genus . Person -> HomeYaw = yaw >> 3 ; p_person -> Genus . Person -> pcom_colour = colour ; p_person -> Genus . Person -> pcom_group = group ; p_person -> Genus . Person -> pcom_ai = ai ; p_person -> Genus . Person -> pcom_move = move ; p_person -> Genus . Person -> pcom_bent = bent ; p_person -> Genus . Person -> drop = drop ; p_person -> Genus . Person -> pcom_zone = pcom_zone & 0xf ; p_person -> Genus . Person -> pcom_ai_state = PCOM_AI_STATE_NORMAL ; p_person -> Genus . Person -> pcom_ai_substate = PCOM_AI_SUBSTATE_NONE ; p_person -> Genus . Person -> pcom_ai_arg = NULL ; p_person -> Genus . Person -> pcom_ai_other = ai_other ; p_person -> Genus . Person -> pcom_move_state = PCOM_MOVE_STATE_STILL ; p_person -> Genus . Person -> pcom_move_counter = 0 ; p_person -> Genus . Person -> pcom_move_arg = 0 ; p_person -> Genus . Person -> pcom_move_follow = move_follow ; p_person -> Genus . Person -> FightRating = 0 ; p_person -> Genus . Person -> Flags |= flag1 ; p_person -> Genus . Person -> Flags2 |= flag2 ; // ▁ Change ▁ guard ▁ in ▁ zone ▁ to ▁ violent ▁ youth ▁ in ▁ zone ▁ without ▁ telling ▁ Simon . ENDCOM if ( p_person -> Genus . Person -> pcom_zone && p_person -> Genus . Person -> pcom_ai == PCOM_AI_GUARD ) { p_person -> Genus . Person -> pcom_ai = PCOM_AI_GANG ; } SET_SKILL ( p_person , ai_skill ) ; if ( pcom_has & ( PCOM_HAS_SHOTGUN | PCOM_HAS_GUN ) ) { // TABSYMBOL TABSYMBOL TABSYMBOL p _ person - > Genus . Person - > pcom _ bent ▁ | = PCOM _ BENT _ KILL _ ON _ SIGHT ; ENDCOM } if ( pcom_has & PCOM_HAS_GUN ) { p_person -> Flags |= FLAGS_HAS_GUN ; } #if NO_MORE_HAPPY_BALOONS ENDCOM #if ! defined ( PSX ) && ! defined ( TARGET_DC ) ENDCOM if ( pcom_has & PCOM_HAS_BALLOON ) { p_person -> Genus . Person -> Balloon = BALLOON_create ( p_index , BALLOON_TYPE_YELLOW ) ; } #endif #endif if ( pcom_has & PCOM_HAS_SHOTGUN ) { // ▁ Create ▁ a ▁ shotgun ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_special = alloc_special ( SPECIAL_SHOTGUN , SPECIAL_SUBSTATE_NONE , 0 , 0 , 0 , NULL ) ; if ( p_special ) { if ( should_person_get_item ( p_person , p_special ) ) { person_get_item ( p_person , p_special ) ; set_person_draw_item ( p_person , SPECIAL_SHOTGUN ) ; } } } if ( pcom_has & PCOM_HAS_AK47 ) { // ▁ Create ▁ a ▁ shotgun ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_special = alloc_special ( SPECIAL_AK47 , SPECIAL_SUBSTATE_NONE , 0 , 0 , 0 , NULL ) ; if ( p_special ) { if ( should_person_get_item ( p_person , p_special ) ) { person_get_item ( p_person , p_special ) ; set_person_draw_item ( p_person , SPECIAL_AK47 ) ; } } } if ( pcom_has & PCOM_HAS_KNIFE ) { // ▁ Create ▁ a ▁ shotgun ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_special = alloc_special ( SPECIAL_KNIFE , SPECIAL_SUBSTATE_NONE , 0 , 0 , 0 , NULL ) ; if ( p_special ) { if ( should_person_get_item ( p_person , p_special ) ) { person_get_item ( p_person , p_special ) ; set_person_draw_item ( p_person , SPECIAL_KNIFE ) ; } } } if ( pcom_has & PCOM_HAS_BASEBALLBAT ) { // ▁ Create ▁ a ▁ baseball ▁ bat ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_special = alloc_special ( SPECIAL_BASEBALLBAT , SPECIAL_SUBSTATE_NONE , 0 , 0 , 0 , NULL ) ; if ( p_special ) { if ( should_person_get_item ( p_person , p_special ) ) { person_get_item ( p_person , p_special ) ; set_person_draw_item ( p_person , SPECIAL_BASEBALLBAT ) ; } } } if ( pcom_has & PCOM_HAS_GRENADE ) { // ▁ Create ▁ a ▁ grenade ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_special = alloc_special ( SPECIAL_GRENADE , SPECIAL_SUBSTATE_NONE , 0 , 0 , 0 , NULL ) ; if ( p_special ) { if ( should_person_get_item ( p_person , p_special ) ) { person_get_item ( p_person , p_special ) ; set_person_draw_item ( p_person , SPECIAL_GRENADE ) ; } } } if ( bent & PCOM_BENT_GANG ) { PCOM_add_gang_member ( p_index , colour ) ; } } return p_index ; } </s>

INFO - 01/14/22 19:39:57 - 7:15:12 - Generated source tok: </s> func ( c * Client ) Get@@ Project@@ By@@ ID@@ ID@@ ByName ( id string ) ( * Project , error ) { var project * Project NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err error NEW_LINE var err </s>
INFO - 01/14/22 19:39:57 - 7:15:12 - Target (x1) tok: </s> TH@@ ING_@@ INDEX P@@ COM_@@ create_@@ person ( SLONG type , SLONG colour , SLONG group , SLONG ai , SLONG ai_@@ other , SLONG ai_@@ skill , SLONG move , SLONG move@@ _f@@ ol@@ low , SLONG b@@ ent , SLONG p@@ com_@@ has , SLONG drop , SLONG p@@ com_@@ zone , SLONG world_@@ x , SLONG world_@@ y , SLONG world_@@ z , SLONG yaw , SLONG random , ULONG flag@@ 1 , ULONG flag@@ 2 ) { if ( p@@ com_@@ has & ( P@@ COM_@@ HAS_@@ SHO@@ T@@ GU@@ N | P@@ COM_@@ HAS_@@ KN@@ IF@@ E | P@@ COM_@@ HAS_@@ BASE@@ BAL@@ LB@@ AT ) ) { // TABSYMBOL TABSYMBOL type ▁ = ▁ PER@@ SON _ DAR@@ CI ; ▁ // E@@ WAY _ SUB@@ TYPE _ PLAYER _ DAR@@ CI ; // PER@@ SON _ DAR@@ CI ; ENDCOM } if ( p@@ com_@@ has & P@@ COM_@@ HAS_@@ GU@@ N ) { if ( drop == SPECIAL_@@ GU@@ N ) { drop = 0 ; } } if ( ai == P@@ COM_@@ AI_@@ AS@@ SA@@ SI@@ N ) { TRACE ( " hello " ) ; } if ( ai == P@@ COM_@@ AI_@@ AS@@ SA@@ SI@@ N && move == P@@ COM_@@ MOVE_@@ WAN@@ DER ) { // ▁ Make ▁ w@@ and@@ ering ▁ ass@@ as@@ ins , ▁ follow ▁ who ▁ they ▁ are ▁ ass@@ as@@ in@@ ating . ENDCOM move = P@@ COM_@@ MOVE_@@ FOLLOW ; move@@ _f@@ ol@@ low = ai_@@ other ; } // TABSYMBOL ASSERT ( type ! = PER@@ SON _ CI@@ V ) ; ENDCOM TH@@ ING_@@ INDEX p_@@ index = create_@@ person ( type , random , world_@@ x , world_@@ y , world_@@ z ) ; if ( p_@@ index == NULL ) { #ifndef PS@@ X #ifndef NDEBUG PA@@ NEL_@@ new_@@ text ( NULL , 10000 , " Couldn ' t ▁ create ▁ person , ▁ Person@@ Type ▁ % d ▁ ai ▁ % s " , type , P@@ COM_@@ ai@@ _name [ ai ] ) ; #endif #endif } else { Thing * p_@@ person = TO_@@ THING ( p_@@ index ) ; if ( type == PER@@ SON_@@ CO@@ P ) { if ( ai == P@@ COM_@@ AI_@@ DRIVER ) ai = P@@ COM_@@ AI_@@ CO@@ P_@@ DRIVER ; } p_@@ person -> Draw . T@@ ween@@ ed -> Angle = yaw ; p_@@ person -> Gen@@ us . Person -> Home@@ Yaw = yaw >> 3 ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ colour = colour ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ group = group ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ ai = ai ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ move = move ; p_@@ person -> Gen@@ us . Person -> p@@ co@@ m_b@@ ent = b@@ ent ; p_@@ person -> Gen@@ us . Person -> drop = drop ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ zone = p@@ com_@@ zone & 0xf ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ ai@@ _state = P@@ COM_@@ AI_@@ STATE_@@ NORMAL ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ ai_@@ sub@@ state = P@@ COM_@@ AI_@@ SUB@@ STATE_@@ NONE ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ ai_@@ arg = NULL ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ ai_@@ other = ai_@@ other ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ move@@ _state = P@@ COM_@@ MOVE_@@ STATE_@@ ST@@ ILL ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ move_@@ counter = 0 ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ move_@@ arg = 0 ; p_@@ person -> Gen@@ us . Person -> p@@ com_@@ move@@ _f@@ ol@@ low = move@@ _f@@ ol@@ low ; p_@@ person -> Gen@@ us . Person -> Fi@@ ght@@ Rating = 0 ; p_@@ person -> Gen@@ us . Person -> Flags |= flag@@ 1 ; p_@@ person -> Gen@@ us . Person -> Flags@@ 2 |= flag@@ 2 ; // ▁ Change ▁ guard ▁ in ▁ zone ▁ to ▁ viol@@ ent ▁ y@@ outh ▁ in ▁ zone ▁ without ▁ tell@@ ing ▁ Sim@@ on . ENDCOM if ( p_@@ person -> Gen@@ us . Person -> p@@ com_@@ zone && p_@@ person -> Gen@@ us . Person -> p@@ com_@@ ai == P@@ COM_@@ AI_@@ GU@@ ARD ) { p_@@ person -> Gen@@ us . Person -> p@@ com_@@ ai = P@@ COM_@@ AI_@@ GAN@@ G ; } SET_@@ SK@@ ILL ( p_@@ person , ai_@@ skill ) ; if ( p@@ com_@@ has & ( P@@ COM_@@ HAS_@@ SHO@@ T@@ GU@@ N | P@@ COM_@@ HAS_@@ GU@@ N ) ) { // TABSYMBOL TABSYMBOL TABSYMBOL p _ person - > Gen@@ us . Person - > p@@ com _ b@@ ent ▁ | = P@@ COM _ B@@ ENT _ KILL _ ON _ SIGH@@ T ; ENDCOM } if ( p@@ com_@@ has & P@@ COM_@@ HAS_@@ GU@@ N ) { p_@@ person -> Flags |= FLAGS_@@ HAS_@@ GU@@ N ; } #if NO_@@ MORE_@@ H@@ APP@@ Y_@@ BA@@ LOO@@ NS ENDCOM #if ! defined ( PS@@ X ) && ! defined ( TARGET_@@ DC ) ENDCOM if ( p@@ com_@@ has & P@@ COM_@@ HAS_@@ B@@ ALLO@@ ON ) { p_@@ person -> Gen@@ us . Person -> Ballo@@ on = B@@ ALLO@@ ON_@@ create ( p_@@ index , B@@ ALLO@@ ON_@@ TYPE_@@ YELLOW ) ; } #endif #endif if ( p@@ com_@@ has & P@@ COM_@@ HAS_@@ SHO@@ T@@ GU@@ N ) { // ▁ Create ▁ a ▁ shot@@ gun ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_@@ special = alloc_@@ special ( SPECIAL_@@ SHO@@ T@@ GU@@ N , SPECIAL_@@ SUB@@ STATE_@@ NONE , 0 , 0 , 0 , NULL ) ; if ( p_@@ special ) { if ( should_@@ person@@ _get_@@ item ( p_@@ person , p_@@ special ) ) { person@@ _get_@@ item ( p_@@ person , p_@@ special ) ; set_@@ person@@ _@@ draw_@@ item ( p_@@ person , SPECIAL_@@ SHO@@ T@@ GU@@ N ) ; } } } if ( p@@ com_@@ has & P@@ COM_@@ HAS_@@ AK@@ 47 ) { // ▁ Create ▁ a ▁ shot@@ gun ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_@@ special = alloc_@@ special ( SPECIAL_@@ AK@@ 47 , SPECIAL_@@ SUB@@ STATE_@@ NONE , 0 , 0 , 0 , NULL ) ; if ( p_@@ special ) { if ( should_@@ person@@ _get_@@ item ( p_@@ person , p_@@ special ) ) { person@@ _get_@@ item ( p_@@ person , p_@@ special ) ; set_@@ person@@ _@@ draw_@@ item ( p_@@ person , SPECIAL_@@ AK@@ 47 ) ; } } } if ( p@@ com_@@ has & P@@ COM_@@ HAS_@@ KN@@ IF@@ E ) { // ▁ Create ▁ a ▁ shot@@ gun ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_@@ special = alloc_@@ special ( SPECIAL_@@ KN@@ IF@@ E , SPECIAL_@@ SUB@@ STATE_@@ NONE , 0 , 0 , 0 , NULL ) ; if ( p_@@ special ) { if ( should_@@ person@@ _get_@@ item ( p_@@ person , p_@@ special ) ) { person@@ _get_@@ item ( p_@@ person , p_@@ special ) ; set_@@ person@@ _@@ draw_@@ item ( p_@@ person , SPECIAL_@@ KN@@ IF@@ E ) ; } } } if ( p@@ com_@@ has & P@@ COM_@@ HAS_@@ BASE@@ BAL@@ LB@@ AT ) { // ▁ Create ▁ a ▁ base@@ ball ▁ bat ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_@@ special = alloc_@@ special ( SPECIAL_@@ BASE@@ BAL@@ LB@@ AT , SPECIAL_@@ SUB@@ STATE_@@ NONE , 0 , 0 , 0 , NULL ) ; if ( p_@@ special ) { if ( should_@@ person@@ _get_@@ item ( p_@@ person , p_@@ special ) ) { person@@ _get_@@ item ( p_@@ person , p_@@ special ) ; set_@@ person@@ _@@ draw_@@ item ( p_@@ person , SPECIAL_@@ BASE@@ BAL@@ LB@@ AT ) ; } } } if ( p@@ com_@@ has & P@@ COM_@@ HAS_@@ GR@@ EN@@ ADE ) { // ▁ Create ▁ a ▁ g@@ ren@@ ade ▁ and ▁ give ▁ it ▁ to ▁ the ▁ person . ENDCOM Thing * p_@@ special = alloc_@@ special ( SPECIAL_@@ GR@@ EN@@ ADE , SPECIAL_@@ SUB@@ STATE_@@ NONE , 0 , 0 , 0 , NULL ) ; if ( p_@@ special ) { if ( should_@@ person@@ _get_@@ item ( p_@@ person , p_@@ special ) ) { person@@ _get_@@ item ( p_@@ person , p_@@ special ) ; set_@@ person@@ _@@ draw_@@ item ( p_@@ person , SPECIAL_@@ GR@@ EN@@ ADE ) ; } } } if ( b@@ ent & P@@ COM_@@ B@@ ENT_@@ GAN@@ G ) { P@@ COM_@@ add_@@ gan@@ g_@@ member ( p_@@ index , colour ) ; } } return p_@@ index ; } </s>


INFO - 01/14/22 19:40:13 - 7:15:28 - ========== BT java_sa-cpp_sa example ==========
INFO - 01/14/22 19:40:13 - 7:15:28 - Generated source sent: </s> void test_get_all_all_of_of_of_of_of_the_the_the_the_of_of_the_the_the_of_of_the_the_of_of_of_the_the_of_of_of_the_the_of_of_of_the_the_of_of_of_the_the_of_of_of_of_the_the_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_of_</s>
INFO - 01/14/22 19:40:13 - 7:15:28 - Target (x1) sent: </s> private static void execute ( String tokensfile , String outputfile ) { try { String [ ] command = { program_bin , " - token " , " - lemma " , program_model , tokensfile } ; Process p = Runtime . getRuntime ( ) . exec ( command ) ; // ▁ TreeTagger ▁ Format ENDCOM // ▁ token ▁ POS ▁ lemma ▁ ( separated ▁ by ▁ \t ) ENDCOM String intokens_line ; String treetag_line ; BufferedReader intokens_reader = new BufferedReader ( new FileReader ( tokensfile ) ) ; BufferedWriter output = new BufferedWriter ( new FileWriter ( outputfile ) ) ; BufferedReader stdInput = new BufferedReader ( new InputStreamReader ( p . getInputStream ( ) ) ) ; try { while ( ( intokens_line = intokens_reader . readLine ( ) ) != null ) { if ( intokens_line . length ( ) != 0 ) { if ( ( treetag_line = stdInput . readLine ( ) ) != null ) { String [ ] treetag_arr = treetag_line . replaceAll ( " \\ | " , " - " ) . split ( " \t " ) ; if ( treetag_arr . length == 3 ) { if ( treetag_arr [ 0 ] . trim ( ) . equals ( intokens_line . trim ( ) ) ) { output . write ( treetag_arr [ 0 ] + " | " + treetag_arr [ 1 ] + " | " + treetag_arr [ 2 ] + " \n " ) ; } else { throw new Exception ( " Unexpected ▁ TreeTagger ▁ output ▁ token : " + treetag_arr [ 0 ] . trim ( ) + " ▁ - ▁ expected : ▁ " + intokens_line . trim ( ) ) ; } } else { throw new Exception ( " Malformed ▁ TreeTagger ▁ output : " + treetag_line ) ; } } else { throw new Exception ( " Unexpected ▁ end ▁ of ▁ TreeTagger ▁ output : ▁ tokens = " + intokens_line ) ; } } else { output . write ( " | \n " ) ; } } } finally { if ( stdInput != null ) { stdInput . close ( ) ; } if ( intokens_reader != null ) { intokens_reader . close ( ) ; } if ( output != null ) { output . close ( ) ; } if ( p != null ) { p . getInputStream ( ) . close ( ) ; p . getOutputStream ( ) . close ( ) ; p . getErrorStream ( ) . close ( ) ; p . destroy ( ) ; } } } catch ( Exception e ) { System . err . println ( " Errors ▁ found ▁ ( TreeTagger ) : \n \t " + e . toString ( ) ) ; if ( System . getProperty ( " DEBUG " ) != null && System . getProperty ( " DEBUG " ) . equalsIgnoreCase ( " true " ) ) { e . printStackTrace ( System . err ) ; System . exit ( 1 ) ; } } } </s>

INFO - 01/14/22 19:40:13 - 7:15:29 - Generated source tok: </s> void test_@@ get_@@ all_@@ all_@@ of_@@ of_@@ of_@@ of_@@ of_@@ the_@@ the_@@ the_@@ the_@@ of_@@ of_@@ the_@@ the_@@ the_@@ of_@@ of_@@ the_@@ the_@@ of_@@ of_@@ of_@@ the_@@ the_@@ of_@@ of_@@ of_@@ the_@@ the_@@ of_@@ of_@@ of_@@ the_@@ the_@@ of_@@ of_@@ of_@@ the_@@ the_@@ of_@@ of_@@ of_@@ of_@@ the_@@ the_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ of_@@ </s>
INFO - 01/14/22 19:40:13 - 7:15:29 - Target (x1) tok: </s> private static void execute ( String token@@ s@@ file , String output@@ file ) { try { String [ ] command = { program@@ _b@@ in , " - token " , " - le@@ mma " , program_@@ model , token@@ s@@ file } ; Process p = Runtime . getRuntime ( ) . exec ( command ) ; // ▁ Tree@@ Tag@@ ger ▁ Format ENDCOM // ▁ token ▁ POS ▁ le@@ mma ▁ ( separated ▁ by ▁ \t ) ENDCOM String into@@ ken@@ s_@@ line ; String tre@@ et@@ ag@@ _@@ line ; BufferedReader into@@ ken@@ s_@@ reader = new BufferedReader ( new FileReader ( token@@ s@@ file ) ) ; BufferedWriter output = new BufferedWriter ( new FileWriter ( output@@ file ) ) ; BufferedReader std@@ Input = new BufferedReader ( new InputStreamReader ( p . getInputStream ( ) ) ) ; try { while ( ( into@@ ken@@ s_@@ line = into@@ ken@@ s_@@ reader . readLine ( ) ) != null ) { if ( into@@ ken@@ s_@@ line . length ( ) != 0 ) { if ( ( tre@@ et@@ ag@@ _@@ line = std@@ Input . readLine ( ) ) != null ) { String [ ] tre@@ et@@ ag@@ _@@ arr = tre@@ et@@ ag@@ _@@ line . replaceAll ( " \\ | " , " - " ) . split ( " \t " ) ; if ( tre@@ et@@ ag@@ _@@ arr . length == 3 ) { if ( tre@@ et@@ ag@@ _@@ arr [ 0 ] . trim ( ) . equals ( into@@ ken@@ s_@@ line . trim ( ) ) ) { output . write ( tre@@ et@@ ag@@ _@@ arr [ 0 ] + " | " + tre@@ et@@ ag@@ _@@ arr [ 1 ] + " | " + tre@@ et@@ ag@@ _@@ arr [ 2 ] + " \n " ) ; } else { throw new Exception ( " Unexpected ▁ Tree@@ Tag@@ ger ▁ output ▁ token : " + tre@@ et@@ ag@@ _@@ arr [ 0 ] . trim ( ) + " ▁ - ▁ expected : ▁ " + into@@ ken@@ s_@@ line . trim ( ) ) ; } } else { throw new Exception ( " Malformed ▁ Tree@@ Tag@@ ger ▁ output : " + tre@@ et@@ ag@@ _@@ line ) ; } } else { throw new Exception ( " Unexpected ▁ end ▁ of ▁ Tree@@ Tag@@ ger ▁ output : ▁ tokens = " + into@@ ken@@ s_@@ line ) ; } } else { output . write ( " | \n " ) ; } } } finally { if ( std@@ Input != null ) { std@@ Input . close ( ) ; } if ( into@@ ken@@ s_@@ reader != null ) { into@@ ken@@ s_@@ reader . close ( ) ; } if ( output != null ) { output . close ( ) ; } if ( p != null ) { p . getInputStream ( ) . close ( ) ; p . getOutputStream ( ) . close ( ) ; p . getError@@ Stream ( ) . close ( ) ; p . destroy ( ) ; } } } catch ( Exception e ) { System . err . println ( " Errors ▁ found ▁ ( Tree@@ Tag@@ ger ) : \n \t " + e . toString ( ) ) ; if ( System . getProperty ( " DEBUG " ) != null && System . getProperty ( " DEBUG " ) . equalsIgnoreCase ( " true " ) ) { e . printStackTrace ( System . err ) ; System . exit ( 1 ) ; } } } </s>


INFO - 01/14/22 19:40:24 - 7:15:39 - ========== BT cpp_sa-java_sa example ==========
INFO - 01/14/22 19:40:24 - 7:15:39 - Generated source sent: </s> public static void main ( String [ ] args ) { // ▁ Create ▁ a ▁ new ▁ instance ▁ of ▁ the ▁ given ▁ class ▁ and ▁ the ▁ given ▁ name ENDCOM // ▁ and ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ class ENDCOM // ▁ and ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ENDCOM // ▁ and ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for </s>
INFO - 01/14/22 19:40:24 - 7:15:39 - Target (x1) sent: </s> // ! ▁ ÅÐ ¶ ÏÒ » ¸ ö³µÅÆµÄÑÕÉ « ENDCOM // ! ▁ ÊäÈë³µÅÆmatÓëÑÕÉ « Ä £ ° å ENDCOM // ! ▁ · µ » Øtrue » òfasle ENDCOM bool plateColorJudge ( const Mat & src , const Color r , const bool adaptive_minsv , float & percent ) { // ▁ ÅÐ ¶ ÏãÐÖµ ENDCOM const float thresh = 0.45f ; Mat src_gray ; colorMatch ( src , src_gray , r , adaptive_minsv ) ; percent = float ( countNonZero ( src_gray ) ) / float ( src_gray . rows * src_gray . cols ) ; // ▁ cout ▁ < < ▁ " percent : " ▁ < < ▁ percent ▁ < < ▁ endl ; ENDCOM if ( percent > thresh ) return true ; else return false ; } </s>

INFO - 01/14/22 19:40:24 - 7:15:39 - Generated source tok: </s> public static void main ( String [ ] args ) { // ▁ Create ▁ a ▁ new ▁ instance ▁ of ▁ the ▁ given ▁ class ▁ and ▁ the ▁ given ▁ name ENDCOM // ▁ and ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ class ENDCOM // ▁ and ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ENDCOM // ▁ and ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for ▁ the ▁ given ▁ name ▁ to ▁ be ▁ used ▁ for </s>
INFO - 01/14/22 19:40:24 - 7:15:39 - Target (x1) tok: </s> // ! ▁ Å@@ Ð ¶ Ï@@ Ò » ¸ ö@@ ³@@ µ@@ Å@@ Æ@@ µ@@ Ä@@ Ñ@@ Õ@@ É « ENDCOM // ! ▁ Ê@@ ä@@ È@@ ë@@ ³@@ µ@@ Å@@ Æ@@ mat@@ Ó@@ ë@@ Ñ@@ Õ@@ É « Ä £ ° å ENDCOM // ! ▁ · µ » Ø@@ true » ò@@ f@@ as@@ le ENDCOM bool plate@@ Color@@ J@@ ud@@ ge ( const Mat & src , const Color r , const bool adap@@ tive_@@ min@@ sv , float & percent ) { // ▁ Å@@ Ð ¶ Ï@@ ã@@ Ð@@ Ö@@ µ ENDCOM const float thresh = 0.@@ 45f ; Mat src_@@ gray ; color@@ Match ( src , src_@@ gray , r , adap@@ tive_@@ min@@ sv ) ; percent = float ( count@@ Non@@ Zero ( src_@@ gray ) ) / float ( src_@@ gray . rows * src_@@ gray . cols ) ; // ▁ cout ▁ < < ▁ " percent : " ▁ < < ▁ percent ▁ < < ▁ endl ; ENDCOM if ( percent > thresh ) return true ; else return false ; } </s>


INFO - 01/14/22 19:40:37 - 7:15:53 - ========== BT go_sa-rust_sa example ==========
INFO - 01/14/22 19:40:37 - 7:15:53 - Generated source sent: </s> fn test_parse_parse_error ( ) { let mut parser = Parser :: new ( ) ; let mut errors = vec ! [ ] ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) </s>
INFO - 01/14/22 19:40:37 - 7:15:53 - Target (x1) sent: </s> func ( c * EditsApksUploadCall ) ResumableMedia ( ctx context . Context , r io . ReaderAt , size int64 , mediaType string ) * EditsApksUploadCall { c . ctx_ = ctx NEW_LINE rdr := gensupport . ReaderAtToReader ( r , size ) NEW_LINE rdr , c . mediaType_ = gensupport . DetermineContentType ( rdr , mediaType ) NEW_LINE c . mediaBuffer_ = gensupport . NewMediaBuffer ( rdr , googleapi . DefaultUploadChunkSize ) NEW_LINE c . media_ = nil NEW_LINE c . mediaSize_ = size NEW_LINE c . singleChunk_ = false NEW_LINE return c NEW_LINE } </s>

INFO - 01/14/22 19:40:37 - 7:15:53 - Generated source tok: </s> fn test_@@ parse_@@ parse_@@ error ( ) { let mut parser = Parser :: new ( ) ; let mut errors = vec ! [ ] ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) </s>
INFO - 01/14/22 19:40:37 - 7:15:53 - Target (x1) tok: </s> func ( c * Edits@@ Apk@@ s@@ Upload@@ Call ) Res@@ um@@ able@@ Media ( ctx context . Context , r io . Reader@@ At , size int64 , mediaType string ) * Edits@@ Apk@@ s@@ Upload@@ Call { c . ctx_ = ctx NEW_LINE rdr := gensupport . Reader@@ At@@ To@@ Reader ( r , size ) NEW_LINE rdr , c . media@@ Type_ = gensupport . Determin@@ e@@ ContentType ( rdr , mediaType ) NEW_LINE c . media@@ Buffer@@ _ = gensupport . New@@ Media@@ Buffer ( rdr , googleapi . Default@@ Upload@@ ChunkSize ) NEW_LINE c . media@@ _ = nil NEW_LINE c . media@@ Size_ = size NEW_LINE c . single@@ Chunk@@ _ = false NEW_LINE return c NEW_LINE } </s>


INFO - 01/14/22 19:41:04 - 7:16:19 - ========== BT rust_sa-go_sa example ==========
INFO - 01/14/22 19:41:04 - 7:16:19 - Generated source sent: </s> func ( c * Client ) GetRemoteRemoteConfig ( ctx context . Context , remoteConfig * RemoteConfig ) ( * RemoteConfig , error ) { var ( remoteConfig * RemoteConfig NEW_LINE err error NEW_LINE ) NEW_LINE if err = c . conn . ReadDeadline ( context . Background ( ) , time . Now ( ) . Add ( time . Duration ( c . timeout ) * time . Second ) ) ; err != nil { return nil , err NEW_LINE } NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig . RemoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig . RemoteConfig = remoteConfig NEW_LINE remoteConfig . RemoteConfig = remoteConfig </s>
INFO - 01/14/22 19:41:04 - 7:16:19 - Target (x1) sent: </s> fn BrotliBuildMetaBlock < Alloc : BrotliAlloc , > ( alloc : & mut Alloc , ringbuffer : & [ u8 ] , pos : usize , mask : usize , params : & mut BrotliEncoderParams , prev_byte : u8 , prev_byte2 : u8 , cmds : & mut [ Command ] , num_commands : usize , literal_context_mode : ContextType , lit_scratch_space : & mut < HistogramLiteral as CostAccessors > :: i32vec , cmd_scratch_space : & mut < HistogramCommand as CostAccessors > :: i32vec , dst_scratch_space : & mut < HistogramDistance as CostAccessors > :: i32vec , mb : & mut MetaBlockSplit < Alloc > ) { static kMaxNumberOfHistograms : usize = 256usize ; let mut distance_histograms : < Alloc as Allocator < HistogramDistance > > :: AllocatedMemory ; let mut literal_histograms : < Alloc as Allocator < HistogramLiteral > > :: AllocatedMemory ; let mut literal_context_modes : < Alloc as Allocator < ContextType > > :: AllocatedMemory = < Alloc as Allocator < ContextType > > :: AllocatedMemory :: default ( ) ; let literal_histograms_size : usize ; let distance_histograms_size : usize ; let mut i : usize ; let mut literal_context_multiplier : usize = 1usize ; let mut ndirect_msb : u32 = 0 ; let mut check_orig = true ; if ! params . avoid_distance_prefix_search { let mut best_dist_cost : f64 = 1e99 ; let orig_params = params . clone ( ) ; let mut new_params = params . clone ( ) ; for npostfix in 0 .. ( BROTLI_MAX_NPOSTFIX + 1 ) { while ndirect_msb < 16 { let ndirect = ndirect_msb << npostfix ; let skip : bool ; let mut dist_cost : f64 = 0.0 ; BrotliInitDistanceParams ( & mut new_params , npostfix as u32 , ndirect as u32 ) ; if npostfix as u32 == orig_params . dist . distance_postfix_bits && ndirect == orig_params . dist . num_direct_distance_codes { check_orig = false ; } skip = ! ComputeDistanceCost ( cmds , num_commands , & orig_params . dist , & new_params . dist , dst_scratch_space , & mut dist_cost ) ; if skip || ( dist_cost > best_dist_cost ) { break ; } best_dist_cost = dist_cost ; params . dist = new_params . dist ; ndirect_msb += 1 ; } if ndirect_msb > 0 { ndirect_msb -= 1 ; } ndirect_msb /= 2 ; } if check_orig { let mut dist_cost : f64 = 0.0 ; ComputeDistanceCost ( cmds , num_commands , & orig_params . dist , & orig_params . dist , dst_scratch_space , & mut dist_cost ) ; if dist_cost < best_dist_cost { // ▁ best _ dist _ cost ▁ = ▁ dist _ cost ; ▁ unused ENDCOM params . dist = orig_params . dist ; } } RecomputeDistancePrefixes ( cmds , num_commands , & orig_params . dist , & params . dist ) ; } BrotliSplitBlock ( alloc , cmds , num_commands , ringbuffer , pos , mask , params , lit_scratch_space , cmd_scratch_space , dst_scratch_space , & mut ( * mb ) . literal_split , & mut ( * mb ) . command_split , & mut ( * mb ) . distance_split ) ; if ( * params ) . disable_literal_context_modeling == 0 { literal_context_multiplier = ( 1i32 << 6i32 ) as ( usize ) ; literal_context_modes = < Alloc as Allocator < ContextType > > :: alloc_cell ( alloc , ( * mb ) . literal_split . num_types ) ; for item in literal_context_modes . slice_mut ( ) . iter_mut ( ) { * item = literal_context_mode ; } } literal_histograms_size = ( * mb ) . literal_split . num_types . wrapping_mul ( literal_context_multiplier ) ; literal_histograms = < Alloc as Allocator < HistogramLiteral > > :: alloc_cell ( alloc , literal_histograms_size ) ; distance_histograms_size = ( * mb ) . distance_split . num_types << 2i32 ; distance_histograms = < Alloc as Allocator < HistogramDistance > > :: alloc_cell ( alloc , distance_histograms_size ) ; ( * mb ) . command_histograms_size = ( * mb ) . command_split . num_types ; ( * mb ) . command_histograms = < Alloc as Allocator < HistogramCommand > > :: alloc_cell ( alloc , ( * mb ) . command_histograms_size ) ; BrotliBuildHistogramsWithContext ( cmds , num_commands , & mut ( * mb ) . literal_split , & mut ( * mb ) . command_split , & mut ( * mb ) . distance_split , ringbuffer , pos , mask , prev_byte , prev_byte2 , literal_context_modes . slice ( ) , literal_histograms . slice_mut ( ) , ( * mb ) . command_histograms . slice_mut ( ) , distance_histograms . slice_mut ( ) ) ; < Alloc as Allocator < ContextType > > :: free_cell ( alloc , literal_context_modes ) ; ( * mb ) . literal_context_map_size = ( * mb ) . literal_split . num_types << 6i32 ; ( * mb ) . literal_context_map = < Alloc as Allocator < u32 > > :: alloc_cell ( alloc , ( * mb ) . literal_context_map_size ) ; ( * mb ) . literal_histograms_size = ( * mb ) . literal_context_map_size ; ( * mb ) . literal_histograms = < Alloc as Allocator < HistogramLiteral > > :: alloc_cell ( alloc , ( * mb ) . literal_histograms_size ) ; BrotliClusterHistograms ( alloc , literal_histograms . slice ( ) , literal_histograms_size , kMaxNumberOfHistograms , lit_scratch_space , ( * mb ) . literal_histograms . slice_mut ( ) , & mut ( * mb ) . literal_histograms_size , ( * mb ) . literal_context_map . slice_mut ( ) ) ; < Alloc as Allocator < HistogramLiteral > > :: free_cell ( alloc , literal_histograms ) ; if ( * params ) . disable_literal_context_modeling != 0 { i = ( * mb ) . literal_split . num_types ; while i != 0usize { let mut j : usize = 0usize ; i = i . wrapping_sub ( 1 as ( usize ) ) ; while j < ( 1i32 << 6i32 ) as ( usize ) { { let val = ( * mb ) . literal_context_map . slice ( ) [ ( i as ( usize ) ) ] ; ( * mb ) . literal_context_map . slice_mut ( ) [ ( ( i << 6i32 ) . wrapping_add ( j ) as ( usize ) ) ] = val ; } j = j . wrapping_add ( 1 as ( usize ) ) ; } } } ( * mb ) . distance_context_map_size = ( * mb ) . distance_split . num_types << 2i32 ; ( * mb ) . distance_context_map = < Alloc as Allocator < u32 > > :: alloc_cell ( alloc , ( * mb ) . distance_context_map_size ) ; ( * mb ) . distance_histograms_size = ( * mb ) . distance_context_map_size ; ( * mb ) . distance_histograms = < Alloc as Allocator < HistogramDistance > > :: alloc_cell ( alloc , ( * mb ) . distance_histograms_size ) ; BrotliClusterHistograms ( alloc , distance_histograms . slice ( ) , ( * mb ) . distance_context_map_size , kMaxNumberOfHistograms , dst_scratch_space , ( * mb ) . distance_histograms . slice_mut ( ) , & mut ( * mb ) . distance_histograms_size , ( * mb ) . distance_context_map . slice_mut ( ) ) ; < Alloc as Allocator < HistogramDistance > > :: free_cell ( alloc , distance_histograms ) ; } </s>

INFO - 01/14/22 19:41:04 - 7:16:19 - Generated source tok: </s> func ( c * Client ) Get@@ Remote@@ Remote@@ Config ( ctx context . Context , remote@@ Config * Remote@@ Config ) ( * Remote@@ Config , error ) { var ( remote@@ Config * Remote@@ Config NEW_LINE err error NEW_LINE ) NEW_LINE if err = c . conn . Read@@ Deadline ( context . Background ( ) , time . Now ( ) . Add ( time . Duration ( c . timeout ) * time . Second ) ) ; err != nil { return nil , err NEW_LINE } NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config . Remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config . Remote@@ Config = remote@@ Config NEW_LINE remote@@ Config . Remote@@ Config = remote@@ Config </s>
INFO - 01/14/22 19:41:04 - 7:16:20 - Target (x1) tok: </s> fn B@@ rot@@ li@@ Build@@ Meta@@ Block < Alloc : B@@ rot@@ li@@ Alloc , > ( alloc : & mut Alloc , ring@@ buffer : & [ u8 ] , pos : usize , mask : usize , params : & mut B@@ rot@@ li@@ Encoder@@ Params , prev_@@ byte : u8 , prev_@@ byte@@ 2 : u8 , cmds : & mut [ Command ] , num_@@ commands : usize , literal_@@ context_@@ mode : Context@@ Type , lit_@@ scratch@@ _@@ space : & mut < Histogram@@ Literal as Cost@@ Access@@ ors > :: i32@@ vec , cmd_@@ scratch@@ _@@ space : & mut < Histogram@@ Command as Cost@@ Access@@ ors > :: i32@@ vec , dst_@@ scratch@@ _@@ space : & mut < Histogram@@ Distance as Cost@@ Access@@ ors > :: i32@@ vec , mb : & mut Meta@@ Block@@ Split < Alloc > ) { static kMax@@ NumberOf@@ Histogram@@ s : usize = 256@@ usize ; let mut distance_@@ histogram@@ s : < Alloc as Allocator < Histogram@@ Distance > > :: Allocated@@ Memory ; let mut literal_@@ histogram@@ s : < Alloc as Allocator < Histogram@@ Literal > > :: Allocated@@ Memory ; let mut literal_@@ context_@@ modes : < Alloc as Allocator < Context@@ Type > > :: Allocated@@ Memory = < Alloc as Allocator < Context@@ Type > > :: Allocated@@ Memory :: default ( ) ; let literal_@@ histogram@@ s_size : usize ; let distance_@@ histogram@@ s_size : usize ; let mut i : usize ; let mut literal_@@ context_@@ multiplier : usize = 1@@ usize ; let mut n@@ direct_@@ ms@@ b : u32 = 0 ; let mut check_@@ orig = true ; if ! params . av@@ o@@ id_@@ distance_@@ prefix_@@ search { let mut best_@@ dist_@@ cost : f64 = 1e@@ 99 ; let orig_@@ params = params . clone ( ) ; let mut new_@@ params = params . clone ( ) ; for n@@ postfix in 0 .. ( BRO@@ T@@ LI@@ _@@ MAX_@@ N@@ POST@@ FIX + 1 ) { while n@@ direct_@@ ms@@ b < 16 { let n@@ direct = n@@ direct_@@ ms@@ b << n@@ postfix ; let skip : bool ; let mut dist_@@ cost : f64 = 0.0 ; B@@ rot@@ li@@ Init@@ Distance@@ Params ( & mut new_@@ params , n@@ postfix as u32 , n@@ direct as u32 ) ; if n@@ postfix as u32 == orig_@@ params . dist . distance_@@ post@@ fix_@@ bits && n@@ direct == orig_@@ params . dist . num_@@ direct_@@ distance_@@ codes { check_@@ orig = false ; } skip = ! Compute@@ Distance@@ Cost ( cmds , num_@@ commands , & orig_@@ params . dist , & new_@@ params . dist , dst_@@ scratch@@ _@@ space , & mut dist_@@ cost ) ; if skip || ( dist_@@ cost > best_@@ dist_@@ cost ) { break ; } best_@@ dist_@@ cost = dist_@@ cost ; params . dist = new_@@ params . dist ; n@@ direct_@@ ms@@ b += 1 ; } if n@@ direct_@@ ms@@ b > 0 { n@@ direct_@@ ms@@ b -= 1 ; } n@@ direct_@@ ms@@ b /= 2 ; } if check_@@ orig { let mut dist_@@ cost : f64 = 0.0 ; Compute@@ Distance@@ Cost ( cmds , num_@@ commands , & orig_@@ params . dist , & orig_@@ params . dist , dst_@@ scratch@@ _@@ space , & mut dist_@@ cost ) ; if dist_@@ cost < best_@@ dist_@@ cost { // ▁ best _ dist _ cost ▁ = ▁ dist _ cost ; ▁ unused ENDCOM params . dist = orig_@@ params . dist ; } } Recomp@@ ute@@ Distance@@ Prefixes ( cmds , num_@@ commands , & orig_@@ params . dist , & params . dist ) ; } B@@ rot@@ li@@ Split@@ Block ( alloc , cmds , num_@@ commands , ring@@ buffer , pos , mask , params , lit_@@ scratch@@ _@@ space , cmd_@@ scratch@@ _@@ space , dst_@@ scratch@@ _@@ space , & mut ( * mb ) . literal_@@ split , & mut ( * mb ) . command_@@ split , & mut ( * mb ) . distance_@@ split ) ; if ( * params ) . disable_@@ literal_@@ context_@@ model@@ ing == 0 { literal_@@ context_@@ multiplier = ( 1@@ i32 << 6@@ i32 ) as ( usize ) ; literal_@@ context_@@ modes = < Alloc as Allocator < Context@@ Type > > :: alloc_@@ cell ( alloc , ( * mb ) . literal_@@ split . num_@@ types ) ; for item in literal_@@ context_@@ modes . slice_@@ mut ( ) . iter_mut ( ) { * item = literal_@@ context_@@ mode ; } } literal_@@ histogram@@ s_size = ( * mb ) . literal_@@ split . num_@@ types . wrapping_@@ mul ( literal_@@ context_@@ multiplier ) ; literal_@@ histogram@@ s = < Alloc as Allocator < Histogram@@ Literal > > :: alloc_@@ cell ( alloc , literal_@@ histogram@@ s_size ) ; distance_@@ histogram@@ s_size = ( * mb ) . distance_@@ split . num_@@ types << 2@@ i32 ; distance_@@ histogram@@ s = < Alloc as Allocator < Histogram@@ Distance > > :: alloc_@@ cell ( alloc , distance_@@ histogram@@ s_size ) ; ( * mb ) . command_@@ histogram@@ s_size = ( * mb ) . command_@@ split . num_@@ types ; ( * mb ) . command_@@ histogram@@ s = < Alloc as Allocator < Histogram@@ Command > > :: alloc_@@ cell ( alloc , ( * mb ) . command_@@ histogram@@ s_size ) ; B@@ rot@@ li@@ Build@@ Histogram@@ s@@ WithContext ( cmds , num_@@ commands , & mut ( * mb ) . literal_@@ split , & mut ( * mb ) . command_@@ split , & mut ( * mb ) . distance_@@ split , ring@@ buffer , pos , mask , prev_@@ byte , prev_@@ byte@@ 2 , literal_@@ context_@@ modes . slice ( ) , literal_@@ histogram@@ s . slice_@@ mut ( ) , ( * mb ) . command_@@ histogram@@ s . slice_@@ mut ( ) , distance_@@ histogram@@ s . slice_@@ mut ( ) ) ; < Alloc as Allocator < Context@@ Type > > :: free_@@ cell ( alloc , literal_@@ context_@@ modes ) ; ( * mb ) . literal_@@ context_@@ map_@@ size = ( * mb ) . literal_@@ split . num_@@ types << 6@@ i32 ; ( * mb ) . literal_@@ context_@@ map = < Alloc as Allocator < u32 > > :: alloc_@@ cell ( alloc , ( * mb ) . literal_@@ context_@@ map_@@ size ) ; ( * mb ) . literal_@@ histogram@@ s_size = ( * mb ) . literal_@@ context_@@ map_@@ size ; ( * mb ) . literal_@@ histogram@@ s = < Alloc as Allocator < Histogram@@ Literal > > :: alloc_@@ cell ( alloc , ( * mb ) . literal_@@ histogram@@ s_size ) ; B@@ rot@@ li@@ Cluster@@ Histogram@@ s ( alloc , literal_@@ histogram@@ s . slice ( ) , literal_@@ histogram@@ s_size , kMax@@ NumberOf@@ Histogram@@ s , lit_@@ scratch@@ _@@ space , ( * mb ) . literal_@@ histogram@@ s . slice_@@ mut ( ) , & mut ( * mb ) . literal_@@ histogram@@ s_size , ( * mb ) . literal_@@ context_@@ map . slice_@@ mut ( ) ) ; < Alloc as Allocator < Histogram@@ Literal > > :: free_@@ cell ( alloc , literal_@@ histogram@@ s ) ; if ( * params ) . disable_@@ literal_@@ context_@@ model@@ ing != 0 { i = ( * mb ) . literal_@@ split . num_@@ types ; while i != 0@@ usize { let mut j : usize = 0@@ usize ; i = i . wrapping_@@ sub ( 1 as ( usize ) ) ; while j < ( 1@@ i32 << 6@@ i32 ) as ( usize ) { { let val = ( * mb ) . literal_@@ context_@@ map . slice ( ) [ ( i as ( usize ) ) ] ; ( * mb ) . literal_@@ context_@@ map . slice_@@ mut ( ) [ ( ( i << 6@@ i32 ) . wrapping_@@ add ( j ) as ( usize ) ) ] = val ; } j = j . wrapping_@@ add ( 1 as ( usize ) ) ; } } } ( * mb ) . distance_@@ context_@@ map_@@ size = ( * mb ) . distance_@@ split . num_@@ types << 2@@ i32 ; ( * mb ) . distance_@@ context_@@ map = < Alloc as Allocator < u32 > > :: alloc_@@ cell ( alloc , ( * mb ) . distance_@@ context_@@ map_@@ size ) ; ( * mb ) . distance_@@ histogram@@ s_size = ( * mb ) . distance_@@ context_@@ map_@@ size ; ( * mb ) . distance_@@ histogram@@ s = < Alloc as Allocator < Histogram@@ Distance > > :: alloc_@@ cell ( alloc , ( * mb ) . distance_@@ histogram@@ s_size ) ; B@@ rot@@ li@@ Cluster@@ Histogram@@ s ( alloc , distance_@@ histogram@@ s . slice ( ) , ( * mb ) . distance_@@ context_@@ map_@@ size , kMax@@ NumberOf@@ Histogram@@ s , dst_@@ scratch@@ _@@ space , ( * mb ) . distance_@@ histogram@@ s . slice_@@ mut ( ) , & mut ( * mb ) . distance_@@ histogram@@ s_size , ( * mb ) . distance_@@ context_@@ map . slice_@@ mut ( ) ) ; < Alloc as Allocator < Histogram@@ Distance > > :: free_@@ cell ( alloc , distance_@@ histogram@@ s ) ; } </s>


INFO - 01/14/22 19:41:21 - 7:16:36 - ========== BT go_sa-cpp_sa example ==========
INFO - 01/14/22 19:41:21 - 7:16:36 - Generated source sent: </s> static void test_mulps_2 ( ) { // ▁ Test ▁ that ▁ the ▁ number ▁ of ▁ times ▁ the ▁ number ▁ of ▁ times ▁ are ▁ equal ▁ to ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ of ▁ in ▁ the ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ </s>
INFO - 01/14/22 19:41:21 - 7:16:36 - Target (x1) sent: </s> func doOneInput ( input , filename string ) bool { conf := loader . Config { SourceImports : true } NEW_LINE // ▁ Parsing . ENDCOM f , err := conf . ParseFile ( filename , input ) NEW_LINE if err != nil { fmt . Println ( err ) NEW_LINE return false NEW_LINE } NEW_LINE // ▁ Create ▁ single - file ▁ main ▁ package ▁ and ▁ import ▁ its ▁ dependencies . ENDCOM conf . CreateFromFiles ( " main " , f ) NEW_LINE iprog , err := conf . Load ( ) NEW_LINE if err != nil { fmt . Println ( err ) NEW_LINE return false NEW_LINE } NEW_LINE mainPkgInfo := iprog . Created [ 0 ] . Pkg NEW_LINE // ▁ SSA ▁ creation ▁ + ▁ building . ENDCOM prog := ssa . Create ( iprog , ssa . SanityCheckFunctions ) NEW_LINE prog . BuildAll ( ) NEW_LINE mainpkg := prog . Package ( mainPkgInfo ) NEW_LINE ptrmain := mainpkg // ▁ main ▁ package ▁ for ▁ the ▁ pointer ▁ analysis ENDCOM NEW_LINE if mainpkg . Func ( " main " ) == nil { // ▁ No ▁ main ▁ function ; ▁ assume ▁ it ' s ▁ a ▁ test . ENDCOM ptrmain = prog . CreateTestMainPackage ( mainpkg ) NEW_LINE } NEW_LINE // ▁ Find ▁ all ▁ calls ▁ to ▁ the ▁ built - in ▁ print ( x ) . ▁ Analytically , ENDCOM // ▁ print ▁ is ▁ a ▁ no - op , ▁ but ▁ it ' s ▁ a ▁ convenient ▁ hook ▁ for ▁ testing ENDCOM // ▁ the ▁ PTS ▁ of ▁ an ▁ expression , ▁ so ▁ our ▁ tests ▁ use ▁ it . ENDCOM probes := make ( map [ * ssa . CallCommon ] bool ) NEW_LINE for fn := range ssautil . AllFunctions ( prog ) { if fn . Pkg == mainpkg { for _ , b := range fn . Blocks { for _ , instr := range b . Instrs { if instr , ok := instr . ( ssa . CallInstruction ) ; ok { call := instr . Common ( ) NEW_LINE if b , ok := call . Value . ( * ssa . Builtin ) ; ok && b . Name ( ) == " print " && len ( call . Args ) == 1 { probes [ instr . Common ( ) ] = true NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE ok := true NEW_LINE lineMapping := make ( map [ string ] string ) // ▁ maps ▁ " file : line " ▁ to ▁ @ line ▁ tag ENDCOM NEW_LINE // ▁ Parse ▁ expectations ▁ in ▁ this ▁ input . ENDCOM var exps [ ] * expectation NEW_LINE re := regexp . MustCompile ( " // ▁ * @ ( [ a - z ] * ) ▁ * ( . * ) $ " ) NEW_LINE lines := strings . Split ( input , " \n " ) NEW_LINE for linenum , line := range lines { linenum ++ // ▁ make ▁ it ▁ 1 - based ENDCOM NEW_LINE if matches := re . FindAllStringSubmatch ( line , - 1 ) ; matches != nil { match := matches [ 0 ] NEW_LINE kind , rest := match [ 1 ] , match [ 2 ] NEW_LINE e := & expectation { kind : kind , filename : filename , linenum : linenum } NEW_LINE if kind == " line " { if rest == " " { ok = false NEW_LINE e . errorf ( " @ % s ▁ expectation ▁ requires ▁ identifier " , kind ) NEW_LINE } else { lineMapping [ fmt . Sprintf ( " % s : % d " , filename , linenum ) ] = rest NEW_LINE } NEW_LINE continue NEW_LINE } NEW_LINE if e . needsProbe ( ) && ! strings . Contains ( line , " print ( " ) { ok = false NEW_LINE e . errorf ( " @ % s ▁ expectation ▁ must ▁ follow ▁ call ▁ to ▁ print ( x ) " , kind ) NEW_LINE continue NEW_LINE } NEW_LINE switch kind { case " pointsto " : e . args = split ( rest , " | " ) NEW_LINE case " types " : for _ , typstr := range split ( rest , " | " ) { var t types . Type = types . Typ [ types . Invalid ] // ▁ means ▁ " . . . " ENDCOM NEW_LINE if typstr != " . . . " { texpr , err := parser . ParseExpr ( typstr ) NEW_LINE if err != nil { ok = false NEW_LINE // ▁ Don ' t ▁ print ▁ err ▁ since ▁ its ▁ location ▁ is ▁ bad . ENDCOM e . errorf ( " ' % s ' ▁ is ▁ not ▁ a ▁ valid ▁ type " , typstr ) NEW_LINE continue NEW_LINE } NEW_LINE mainFileScope := mainpkg . Object . Scope ( ) . Child ( 0 ) NEW_LINE tv , err := types . EvalNode ( prog . Fset , texpr , mainpkg . Object , mainFileScope ) NEW_LINE if err != nil { ok = false NEW_LINE // ▁ Don ' t ▁ print ▁ err ▁ since ▁ its ▁ location ▁ is ▁ bad . ENDCOM e . errorf ( " ' % s ' ▁ is ▁ not ▁ a ▁ valid ▁ type : ▁ % s " , typstr , err ) NEW_LINE continue NEW_LINE } NEW_LINE t = tv . Type NEW_LINE } NEW_LINE e . types = append ( e . types , t ) NEW_LINE } NEW_LINE case " calls " : e . args = split ( rest , " - > " ) NEW_LINE // ▁ TODO ( adonovan ) : ▁ eagerly ▁ reject ▁ the ENDCOM // ▁ expectation ▁ if ▁ fn ▁ doesn ' t ▁ denote ENDCOM // ▁ existing ▁ function , ▁ rather ▁ than ▁ fail ENDCOM // ▁ the ▁ expectation ▁ after ▁ analysis . ENDCOM if len ( e . args ) != 2 { ok = false NEW_LINE e . errorf ( " @ calls ▁ expectation ▁ wants ▁ ' caller ▁ - > ▁ callee ' ▁ arguments " ) NEW_LINE continue NEW_LINE } NEW_LINE case " warning " : lit , err := strconv . Unquote ( strings . TrimSpace ( rest ) ) NEW_LINE if err != nil { ok = false NEW_LINE e . errorf ( " couldn ' t ▁ parse ▁ @ warning ▁ operand : ▁ % s " , err . Error ( ) ) NEW_LINE continue NEW_LINE } NEW_LINE e . args = append ( e . args , lit ) NEW_LINE default : ok = false NEW_LINE e . errorf ( " unknown ▁ expectation ▁ kind : ▁ % s " , e ) NEW_LINE continue NEW_LINE } NEW_LINE exps = append ( exps , e ) NEW_LINE } NEW_LINE } NEW_LINE var log bytes . Buffer NEW_LINE fmt . Fprintf ( & log , " Input : ▁ % s \n " , filename ) NEW_LINE // ▁ Run ▁ the ▁ analysis . ENDCOM config := & pointer . Config { Reflection : true , BuildCallGraph : true , Mains : [ ] * ssa . Package { ptrmain } , Log : & log , } NEW_LINE for probe := range probes { v := probe . Args [ 0 ] NEW_LINE if pointer . CanPoint ( v . Type ( ) ) { config . AddQuery ( v ) NEW_LINE } NEW_LINE } NEW_LINE // ▁ Print ▁ the ▁ log ▁ is ▁ there ▁ was ▁ an ▁ error ▁ or ▁ a ▁ panic . ENDCOM complete := false NEW_LINE defer func ( ) { if ! complete || ! ok { log . WriteTo ( os . Stderr ) NEW_LINE } NEW_LINE } ( ) NEW_LINE result , err := pointer . Analyze ( config ) NEW_LINE if err != nil { panic ( err ) // ▁ internal ▁ error ▁ in ▁ pointer ▁ analysis ENDCOM NEW_LINE } NEW_LINE // ▁ Check ▁ the ▁ expectations . ENDCOM for _ , e := range exps { var call * ssa . CallCommon NEW_LINE var pts pointer . PointsToSet NEW_LINE var tProbe types . Type NEW_LINE if e . needsProbe ( ) { if call , pts = findProbe ( prog , probes , result . Queries , e ) ; call == nil { ok = false NEW_LINE e . errorf ( " unreachable ▁ print ( ) ▁ statement ▁ has ▁ expectation ▁ % s " , e ) NEW_LINE continue NEW_LINE } NEW_LINE tProbe = call . Args [ 0 ] . Type ( ) NEW_LINE if ! pointer . CanPoint ( tProbe ) { ok = false NEW_LINE e . errorf ( " expectation ▁ on ▁ non - pointerlike ▁ operand : ▁ % s " , tProbe ) NEW_LINE continue NEW_LINE } NEW_LINE } NEW_LINE switch e . kind { case " pointsto " : if ! checkPointsToExpectation ( e , pts , lineMapping , prog ) { ok = false NEW_LINE } NEW_LINE case " types " : if ! checkTypesExpectation ( e , pts , tProbe ) { ok = false NEW_LINE } NEW_LINE case " calls " : if ! checkCallsExpectation ( prog , e , result . CallGraph ) { ok = false NEW_LINE } NEW_LINE case " warning " : if ! checkWarningExpectation ( prog , e , result . Warnings ) { ok = false NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE complete = true NEW_LINE // ▁ ok ▁ = ▁ false ▁ // ▁ debugging : ▁ uncomment ▁ to ▁ always ▁ see ▁ log ENDCOM return ok NEW_LINE } </s>

INFO - 01/14/22 19:41:21 - 7:16:36 - Generated source tok: </s> static void test@@ _m@@ ul@@ ps_@@ 2 ( ) { // ▁ Test ▁ that ▁ the ▁ number ▁ of ▁ times ▁ the ▁ number ▁ of ▁ times ▁ are ▁ equal ▁ to ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ of ▁ in ▁ the ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ in ▁ the ▁ number ▁ of ▁ times ▁ in ▁ the ▁ number ▁ of ▁ times ▁ </s>
INFO - 01/14/22 19:41:21 - 7:16:36 - Target (x1) tok: </s> func do@@ One@@ Input ( input , filename string ) bool { conf := loader . Config { Source@@ Imports : true } NEW_LINE // ▁ Parsing . ENDCOM f , err := conf . Parse@@ File ( filename , input ) NEW_LINE if err != nil { fmt . Println ( err ) NEW_LINE return false NEW_LINE } NEW_LINE // ▁ Create ▁ single - file ▁ main ▁ package ▁ and ▁ import ▁ its ▁ dependencies . ENDCOM conf . Create@@ From@@ Files ( " main " , f ) NEW_LINE i@@ prog , err := conf . Load ( ) NEW_LINE if err != nil { fmt . Println ( err ) NEW_LINE return false NEW_LINE } NEW_LINE main@@ Pkg@@ Info := i@@ prog . Created [ 0 ] . Pkg NEW_LINE // ▁ SS@@ A ▁ creation ▁ + ▁ building . ENDCOM prog := ssa . Create ( i@@ prog , ssa . Sanity@@ Check@@ Functions ) NEW_LINE prog . Build@@ All ( ) NEW_LINE main@@ pkg := prog . Package ( main@@ Pkg@@ Info ) NEW_LINE ptr@@ main := main@@ pkg // ▁ main ▁ package ▁ for ▁ the ▁ pointer ▁ analysis ENDCOM NEW_LINE if main@@ pkg . Func ( " main " ) == nil { // ▁ No ▁ main ▁ function ; ▁ assume ▁ it ' s ▁ a ▁ test . ENDCOM ptr@@ main = prog . Create@@ Test@@ Main@@ Package ( main@@ pkg ) NEW_LINE } NEW_LINE // ▁ Find ▁ all ▁ calls ▁ to ▁ the ▁ built - in ▁ print ( x ) . ▁ Analy@@ tic@@ ally , ENDCOM // ▁ print ▁ is ▁ a ▁ no - op , ▁ but ▁ it ' s ▁ a ▁ conven@@ ient ▁ hook ▁ for ▁ testing ENDCOM // ▁ the ▁ P@@ TS ▁ of ▁ an ▁ expression , ▁ so ▁ our ▁ tests ▁ use ▁ it . ENDCOM prob@@ es := make ( map [ * ssa . Call@@ Common ] bool ) NEW_LINE for fn := range ssa@@ util . All@@ Functions ( prog ) { if fn . Pkg == main@@ pkg { for _ , b := range fn . Blocks { for _ , instr := range b . Instr@@ s { if instr , ok := instr . ( ssa . Call@@ Instruction ) ; ok { call := instr . Common ( ) NEW_LINE if b , ok := call . Value . ( * ssa . Builtin ) ; ok && b . Name ( ) == " print " && len ( call . Args ) == 1 { prob@@ es [ instr . Common ( ) ] = true NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE ok := true NEW_LINE line@@ Mapping := make ( map [ string ] string ) // ▁ maps ▁ " file : line " ▁ to ▁ @ line ▁ tag ENDCOM NEW_LINE // ▁ Parse ▁ expectations ▁ in ▁ this ▁ input . ENDCOM var exp@@ s [ ] * expect@@ ation NEW_LINE re := regexp . MustCompile ( " // ▁ * @ ( [ a - z ] * ) ▁ * ( . * ) $ " ) NEW_LINE lines := strings . Split ( input , " \n " ) NEW_LINE for lin@@ enum , line := range lines { lin@@ enum ++ // ▁ make ▁ it ▁ 1 - based ENDCOM NEW_LINE if matches := re . FindAll@@ StringSubmatch ( line , - 1 ) ; matches != nil { match := matches [ 0 ] NEW_LINE kind , rest := match [ 1 ] , match [ 2 ] NEW_LINE e := & expect@@ ation { kind : kind , filename : filename , lin@@ enum : lin@@ enum } NEW_LINE if kind == " line " { if rest == " " { ok = false NEW_LINE e . errorf ( " @ % s ▁ expect@@ ation ▁ requires ▁ identifier " , kind ) NEW_LINE } else { line@@ Mapping [ fmt . Sprintf ( " % s : % d " , filename , lin@@ enum ) ] = rest NEW_LINE } NEW_LINE continue NEW_LINE } NEW_LINE if e . needs@@ Probe ( ) && ! strings . Contains ( line , " print ( " ) { ok = false NEW_LINE e . errorf ( " @ % s ▁ expect@@ ation ▁ must ▁ follow ▁ call ▁ to ▁ print ( x ) " , kind ) NEW_LINE continue NEW_LINE } NEW_LINE switch kind { case " point@@ sto " : e . args = split ( rest , " | " ) NEW_LINE case " types " : for _ , typ@@ str := range split ( rest , " | " ) { var t types . Type = types . Typ [ types . Invalid ] // ▁ means ▁ " . . . " ENDCOM NEW_LINE if typ@@ str != " . . . " { tex@@ pr , err := parser . Parse@@ Expr ( typ@@ str ) NEW_LINE if err != nil { ok = false NEW_LINE // ▁ Don ' t ▁ print ▁ err ▁ since ▁ its ▁ location ▁ is ▁ bad . ENDCOM e . errorf ( " ' % s ' ▁ is ▁ not ▁ a ▁ valid ▁ type " , typ@@ str ) NEW_LINE continue NEW_LINE } NEW_LINE main@@ File@@ Scope := main@@ pkg . Object . Scope ( ) . Child ( 0 ) NEW_LINE tv , err := types . Eval@@ Node ( prog . F@@ set , tex@@ pr , main@@ pkg . Object , main@@ File@@ Scope ) NEW_LINE if err != nil { ok = false NEW_LINE // ▁ Don ' t ▁ print ▁ err ▁ since ▁ its ▁ location ▁ is ▁ bad . ENDCOM e . errorf ( " ' % s ' ▁ is ▁ not ▁ a ▁ valid ▁ type : ▁ % s " , typ@@ str , err ) NEW_LINE continue NEW_LINE } NEW_LINE t = tv . Type NEW_LINE } NEW_LINE e . types = append ( e . types , t ) NEW_LINE } NEW_LINE case " calls " : e . args = split ( rest , " - > " ) NEW_LINE // ▁ TODO ( ad@@ on@@ ov@@ an ) : ▁ e@@ ager@@ ly ▁ reject ▁ the ENDCOM // ▁ expect@@ ation ▁ if ▁ fn ▁ doesn ' t ▁ den@@ o@@ te ENDCOM // ▁ existing ▁ function , ▁ rather ▁ than ▁ fail ENDCOM // ▁ the ▁ expect@@ ation ▁ after ▁ analysis . ENDCOM if len ( e . args ) != 2 { ok = false NEW_LINE e . errorf ( " @ calls ▁ expect@@ ation ▁ wants ▁ ' caller ▁ - > ▁ callee ' ▁ arguments " ) NEW_LINE continue NEW_LINE } NEW_LINE case " warning " : lit , err := strconv . Un@@ quote ( strings . TrimSpace ( rest ) ) NEW_LINE if err != nil { ok = false NEW_LINE e . errorf ( " couldn ' t ▁ parse ▁ @ warning ▁ operand : ▁ % s " , err . Error ( ) ) NEW_LINE continue NEW_LINE } NEW_LINE e . args = append ( e . args , lit ) NEW_LINE default : ok = false NEW_LINE e . errorf ( " unknown ▁ expect@@ ation ▁ kind : ▁ % s " , e ) NEW_LINE continue NEW_LINE } NEW_LINE exp@@ s = append ( exp@@ s , e ) NEW_LINE } NEW_LINE } NEW_LINE var log bytes . Buffer NEW_LINE fmt . Fprintf ( & log , " Input : ▁ % s \n " , filename ) NEW_LINE // ▁ Run ▁ the ▁ analysis . ENDCOM config := & pointer . Config { Reflection : true , Build@@ Call@@ Graph : true , Main@@ s : [ ] * ssa . Package { ptr@@ main } , Log : & log , } NEW_LINE for probe := range prob@@ es { v := probe . Args [ 0 ] NEW_LINE if pointer . Can@@ Point ( v . Type ( ) ) { config . Add@@ Query ( v ) NEW_LINE } NEW_LINE } NEW_LINE // ▁ Print ▁ the ▁ log ▁ is ▁ there ▁ was ▁ an ▁ error ▁ or ▁ a ▁ panic . ENDCOM complete := false NEW_LINE defer func ( ) { if ! complete || ! ok { log . WriteTo ( os . Stderr ) NEW_LINE } NEW_LINE } ( ) NEW_LINE result , err := pointer . Analyze ( config ) NEW_LINE if err != nil { panic ( err ) // ▁ internal ▁ error ▁ in ▁ pointer ▁ analysis ENDCOM NEW_LINE } NEW_LINE // ▁ Check ▁ the ▁ expectations . ENDCOM for _ , e := range exp@@ s { var call * ssa . Call@@ Common NEW_LINE var pts pointer . Point@@ sTo@@ Set NEW_LINE var t@@ Probe types . Type NEW_LINE if e . needs@@ Probe ( ) { if call , pts = find@@ Probe ( prog , prob@@ es , result . Queries , e ) ; call == nil { ok = false NEW_LINE e . errorf ( " unreachable ▁ print ( ) ▁ statement ▁ has ▁ expect@@ ation ▁ % s " , e ) NEW_LINE continue NEW_LINE } NEW_LINE t@@ Probe = call . Args [ 0 ] . Type ( ) NEW_LINE if ! pointer . Can@@ Point ( t@@ Probe ) { ok = false NEW_LINE e . errorf ( " expect@@ ation ▁ on ▁ non - pointer@@ like ▁ operand : ▁ % s " , t@@ Probe ) NEW_LINE continue NEW_LINE } NEW_LINE } NEW_LINE switch e . kind { case " point@@ sto " : if ! check@@ Point@@ sTo@@ Expectation ( e , pts , line@@ Mapping , prog ) { ok = false NEW_LINE } NEW_LINE case " types " : if ! check@@ Types@@ Expectation ( e , pts , t@@ Probe ) { ok = false NEW_LINE } NEW_LINE case " calls " : if ! check@@ Calls@@ Expectation ( prog , e , result . Call@@ Graph ) { ok = false NEW_LINE } NEW_LINE case " warning " : if ! check@@ Warning@@ Expectation ( prog , e , result . Warnings ) { ok = false NEW_LINE } NEW_LINE } NEW_LINE } NEW_LINE complete = true NEW_LINE // ▁ ok ▁ = ▁ false ▁ // ▁ debugging : ▁ un@@ comment ▁ to ▁ always ▁ see ▁ log ENDCOM return ok NEW_LINE } </s>


INFO - 01/14/22 19:41:27 - 7:16:42 - ========== BT rust_sa-java_sa example ==========
INFO - 01/14/22 19:41:27 - 7:16:42 - Generated source sent: </s> public static void main ( String [ ] args ) { // ▁ Create ▁ a ▁ new ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM </s>
INFO - 01/14/22 19:41:27 - 7:16:42 - Target (x1) sent: </s> fn read_socket ( s : Socket , buf : * mut WsaBuf , recvd : * mut u32 , flags : * mut u32 , ol : * mut Overlapped ) -> Result < ( ) , i32 > { let r = ws2_32 :: WSARecv ( s , buf , 1 , recvd , flags , ol , None ) ; if r == 0 { Ok ( ( ) ) } else { Err ( wsa_last_error ( ) ) } } </s>

INFO - 01/14/22 19:41:27 - 7:16:42 - Generated source tok: </s> public static void main ( String [ ] args ) { // ▁ Create ▁ a ▁ new ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM // ▁ instance ▁ of ▁ the ▁ given ▁ class ENDCOM </s>
INFO - 01/14/22 19:41:27 - 7:16:42 - Target (x1) tok: </s> fn read@@ _socket ( s : Socket , buf : * mut W@@ sa@@ Buf , recv@@ d : * mut u32 , flags : * mut u32 , ol : * mut Overla@@ pped ) -> Result < ( ) , i32 > { let r = ws@@ 2_@@ 32 :: WS@@ AR@@ ec@@ v ( s , buf , 1 , recv@@ d , flags , ol , None ) ; if r == 0 { Ok ( ( ) ) } else { Err ( ws@@ a_@@ last_@@ error ( ) ) } } </s>


INFO - 01/14/22 19:41:54 - 7:17:10 - ========== BT cpp_sa-rust_sa example ==========
INFO - 01/14/22 19:41:54 - 7:17:10 - Generated source sent: </s> fn test_parse_parse_error ( ) { let mut parser = Parser :: new ( ) ; let mut errors = vec ! [ ] ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser . parse_error ( & mut errors ) ; parser </s>
INFO - 01/14/22 19:41:54 - 7:17:10 - Target (x1) sent: </s> static Instruction * foldSelectShuffleWith1Binop ( ShuffleVectorInst & Shuf ) { assert ( Shuf . isSelect ( ) && " Must ▁ have ▁ select - equivalent ▁ shuffle " ) ; // ▁ Are ▁ we ▁ shuffling ▁ together ▁ some ▁ value ▁ and ▁ that ▁ same ▁ value ▁ after ▁ it ▁ has ▁ been ENDCOM // ▁ modified ▁ by ▁ a ▁ binop ▁ with ▁ a ▁ constant ? ENDCOM Value * Op0 = Shuf . getOperand ( 0 ) , * Op1 = Shuf . getOperand ( 1 ) ; Constant * C ; bool Op0IsBinop ; if ( match ( Op0 , m_BinOp ( m_Specific ( Op1 ) , m_Constant ( C ) ) ) ) Op0IsBinop = true ; else if ( match ( Op1 , m_BinOp ( m_Specific ( Op0 ) , m_Constant ( C ) ) ) ) Op0IsBinop = false ; else return nullptr ; // ▁ The ▁ identity ▁ constant ▁ for ▁ a ▁ binop ▁ leaves ▁ a ▁ variable ▁ operand ▁ unchanged . ▁ For ENDCOM // ▁ a ▁ vector , ▁ this ▁ is ▁ a ▁ splat ▁ of ▁ something ▁ like ▁ 0 , ▁ - 1 , ▁ or ▁ 1 . ENDCOM // ▁ If ▁ there ' s ▁ no ▁ identity ▁ constant ▁ for ▁ this ▁ binop , ▁ we ' re ▁ done . ENDCOM auto * BO = cast < BinaryOperator > ( Op0IsBinop ? Op0 : Op1 ) ; BinaryOperator :: BinaryOps BOpcode = BO -> getOpcode ( ) ; Constant * IdC = ConstantExpr :: getBinOpIdentity ( BOpcode , Shuf . getType ( ) , true ) ; if ( ! IdC ) return nullptr ; // ▁ Shuffle ▁ identity ▁ constants ▁ into ▁ the ▁ lanes ▁ that ▁ return ▁ the ▁ original ▁ value . ENDCOM // ▁ Example : ▁ shuf ▁ ( mul ▁ X , ▁ { - 1 , - 2 , - 3 , - 4 } ) , ▁ X , ▁ { 0,5,6,3 } ▁ - - > ▁ mul ▁ X , ▁ { - 1,1,1 , - 4 } ENDCOM // ▁ Example : ▁ shuf ▁ X , ▁ ( add ▁ X , ▁ { - 1 , - 2 , - 3 , - 4 } ) , ▁ { 0,1,6,7 } ▁ - - > ▁ add ▁ X , ▁ { 0,0 , - 3 , - 4 } ENDCOM // ▁ The ▁ existing ▁ binop ▁ constant ▁ vector ▁ remains ▁ in ▁ the ▁ same ▁ operand ▁ position . ENDCOM Constant * Mask = Shuf . getMask ( ) ; Constant * NewC = Op0IsBinop ? ConstantExpr :: getShuffleVector ( C , IdC , Mask ) : ConstantExpr :: getShuffleVector ( IdC , C , Mask ) ; bool MightCreatePoisonOrUB = Mask -> containsUndefElement ( ) && ( Instruction :: isIntDivRem ( BOpcode ) || Instruction :: isShift ( BOpcode ) ) ; if ( MightCreatePoisonOrUB ) NewC = getSafeVectorConstantForBinop ( BOpcode , NewC , true ) ; // ▁ shuf ▁ ( bop ▁ X , ▁ C ) , ▁ X , ▁ M ▁ - - > ▁ bop ▁ X , ▁ C ' ENDCOM // ▁ shuf ▁ X , ▁ ( bop ▁ X , ▁ C ) , ▁ M ▁ - - > ▁ bop ▁ X , ▁ C ' ENDCOM Value * X = Op0IsBinop ? Op1 : Op0 ; Instruction * NewBO = BinaryOperator :: Create ( BOpcode , X , NewC ) ; NewBO -> copyIRFlags ( BO ) ; // ▁ An ▁ undef ▁ shuffle ▁ mask ▁ element ▁ may ▁ propagate ▁ as ▁ an ▁ undef ▁ constant ▁ element ▁ in ENDCOM // ▁ the ▁ new ▁ binop . ▁ That ▁ would ▁ produce ▁ poison ▁ where ▁ the ▁ original ▁ code ▁ might ▁ not . ENDCOM // ▁ If ▁ we ▁ already ▁ made ▁ a ▁ safe ▁ constant , ▁ then ▁ there ' s ▁ no ▁ danger . ENDCOM if ( Mask -> containsUndefElement ( ) && ! MightCreatePoisonOrUB ) NewBO -> dropPoisonGeneratingFlags ( ) ; return NewBO ; } </s>

INFO - 01/14/22 19:41:54 - 7:17:10 - Generated source tok: </s> fn test_@@ parse_@@ parse_@@ error ( ) { let mut parser = Parser :: new ( ) ; let mut errors = vec ! [ ] ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; let mut parser = Parser :: new ( ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser . parse_@@ error ( & mut errors ) ; parser </s>
INFO - 01/14/22 19:41:55 - 7:17:10 - Target (x1) tok: </s> static Instruction * fold@@ Select@@ Shuffle@@ With@@ 1@@ Bin@@ op ( Shuffle@@ Vector@@ Inst & Sh@@ uf ) { assert ( Sh@@ uf . is@@ Select ( ) && " Must ▁ have ▁ select - equivalent ▁ shuffle " ) ; // ▁ Are ▁ we ▁ shuff@@ ling ▁ together ▁ some ▁ value ▁ and ▁ that ▁ same ▁ value ▁ after ▁ it ▁ has ▁ been ENDCOM // ▁ modified ▁ by ▁ a ▁ binop ▁ with ▁ a ▁ constant ? ENDCOM Value * Op0 = Sh@@ uf . getOperand ( 0 ) , * Op1 = Sh@@ uf . getOperand ( 1 ) ; Constant * C ; bool Op@@ 0@@ Is@@ Bin@@ op ; if ( match ( Op0 , m_@@ BinOp ( m_@@ Specific ( Op1 ) , m_@@ Constant ( C ) ) ) ) Op@@ 0@@ Is@@ Bin@@ op = true ; else if ( match ( Op1 , m_@@ BinOp ( m_@@ Specific ( Op0 ) , m_@@ Constant ( C ) ) ) ) Op@@ 0@@ Is@@ Bin@@ op = false ; else return nullptr ; // ▁ The ▁ identity ▁ constant ▁ for ▁ a ▁ binop ▁ leaves ▁ a ▁ variable ▁ operand ▁ un@@ changed . ▁ For ENDCOM // ▁ a ▁ vector , ▁ this ▁ is ▁ a ▁ sp@@ lat ▁ of ▁ something ▁ like ▁ 0 , ▁ - 1 , ▁ or ▁ 1 . ENDCOM // ▁ If ▁ there ' s ▁ no ▁ identity ▁ constant ▁ for ▁ this ▁ binop , ▁ we ' re ▁ done . ENDCOM auto * BO = cast < BinaryOperator > ( Op@@ 0@@ Is@@ Bin@@ op ? Op0 : Op1 ) ; BinaryOperator :: Binary@@ Ops B@@ Opcode = BO -> getOpcode ( ) ; Constant * Id@@ C = ConstantExpr :: get@@ Bin@@ Op@@ Identity ( B@@ Opcode , Sh@@ uf . getType ( ) , true ) ; if ( ! Id@@ C ) return nullptr ; // ▁ Sh@@ uffle ▁ identity ▁ constants ▁ into ▁ the ▁ lane@@ s ▁ that ▁ return ▁ the ▁ original ▁ value . ENDCOM // ▁ Example : ▁ sh@@ uf ▁ ( mul ▁ X , ▁ { - 1 , - 2 , - 3 , - 4 } ) , ▁ X , ▁ { 0,@@ 5,@@ 6,@@ 3 } ▁ - - > ▁ mul ▁ X , ▁ { - 1,@@ 1,@@ 1 , - 4 } ENDCOM // ▁ Example : ▁ sh@@ uf ▁ X , ▁ ( add ▁ X , ▁ { - 1 , - 2 , - 3 , - 4 } ) , ▁ { 0,@@ 1,@@ 6,@@ 7 } ▁ - - > ▁ add ▁ X , ▁ { 0,0 , - 3 , - 4 } ENDCOM // ▁ The ▁ existing ▁ binop ▁ constant ▁ vector ▁ remain@@ s ▁ in ▁ the ▁ same ▁ operand ▁ position . ENDCOM Constant * Mask = Sh@@ uf . get@@ Mask ( ) ; Constant * New@@ C = Op@@ 0@@ Is@@ Bin@@ op ? ConstantExpr :: get@@ Shuffle@@ Vector ( C , Id@@ C , Mask ) : ConstantExpr :: get@@ Shuffle@@ Vector ( Id@@ C , C , Mask ) ; bool M@@ ight@@ Create@@ Po@@ ison@@ Or@@ UB = Mask -> contains@@ Un@@ def@@ Element ( ) && ( Instruction :: is@@ Int@@ Div@@ Rem ( B@@ Opcode ) || Instruction :: is@@ Shift ( B@@ Opcode ) ) ; if ( M@@ ight@@ Create@@ Po@@ ison@@ Or@@ UB ) New@@ C = get@@ Safe@@ Vector@@ Constant@@ For@@ Bin@@ op ( B@@ Opcode , New@@ C , true ) ; // ▁ sh@@ uf ▁ ( bo@@ p ▁ X , ▁ C ) , ▁ X , ▁ M ▁ - - > ▁ bo@@ p ▁ X , ▁ C ' ENDCOM // ▁ sh@@ uf ▁ X , ▁ ( bo@@ p ▁ X , ▁ C ) , ▁ M ▁ - - > ▁ bo@@ p ▁ X , ▁ C ' ENDCOM Value * X = Op@@ 0@@ Is@@ Bin@@ op ? Op1 : Op0 ; Instruction * New@@ BO = BinaryOperator :: Create ( B@@ Opcode , X , New@@ C ) ; New@@ BO -> copy@@ IR@@ Flags ( BO ) ; // ▁ An ▁ undef ▁ shuffle ▁ mask ▁ element ▁ may ▁ propagate ▁ as ▁ an ▁ undef ▁ constant ▁ element ▁ in ENDCOM // ▁ the ▁ new ▁ binop . ▁ That ▁ would ▁ produce ▁ po@@ ison ▁ where ▁ the ▁ original ▁ code ▁ might ▁ not . ENDCOM // ▁ If ▁ we ▁ already ▁ made ▁ a ▁ safe ▁ constant , ▁ then ▁ there ' s ▁ no ▁ dan@@ ger . ENDCOM if ( Mask -> contains@@ Un@@ def@@ Element ( ) && ! M@@ ight@@ Create@@ Po@@ ison@@ Or@@ UB ) New@@ BO -> drop@@ Po@@ ison@@ Gener@@ ating@@ Flags ( ) ; return New@@ BO ; } </s>


INFO - 01/14/22 19:42:11 - 7:17:26 - ========== BT java_sa-rust_sa example ==========
INFO - 01/14/22 19:42:11 - 7:17:26 - Generated source sent: </s> fn test_parse_parse_error ( ) { let mut parser = Parser :: new ( ) ; let mut errors = vec ! [ ] ; let mut parser = Parser :: new ( ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors , vec ! [ ] ) ; parser . parse ( </s>
INFO - 01/14/22 19:42:11 - 7:17:26 - Target (x1) sent: </s> /* * ▁ STRNEWLINE ▁ * ▁ 从中间裁切需要的大小 ▁ STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ @ param ▁ src ▁ STRNEWLINE ▁ * ▁ @ param ▁ target ▁ STRNEWLINE ▁ * ▁ @ param ▁ width ▁ STRNEWLINE ▁ * ▁ @ param ▁ height ▁ STRNEWLINE ▁ */ @ SuppressWarnings ( " static - access " ) public final static void CutCenter ( String src , String target , Integer width , Integer height ) { File out = new File ( target ) ; // ▁ 目的图片 ENDCOM FileOutputStream outStream = null ; File in = new File ( src ) ; // ▁ 原图片 ENDCOM FileInputStream inStream = null ; try { inStream = new FileInputStream ( in ) ; ImageWrapper imageWrapper = ImageReadHelper . read ( inStream ) ; int w = imageWrapper . getWidth ( ) ; int h = imageWrapper . getHeight ( ) ; int x = ( w - width ) / 2 ; int y = ( h - height ) / 2 ; CropParameter cropParam = new CropParameter ( x , y , width , height ) ; // ▁ 裁切参数 ENDCOM if ( x < 0 || y < 0 ) { cropParam = new CropParameter ( 0 , 0 , w , h ) ; // ▁ 裁切参数 ENDCOM } PlanarImage planrImage = ImageCropHelper . crop ( imageWrapper . getAsPlanarImage ( ) , cropParam ) ; imageWrapper = new ImageWrapper ( planrImage ) ; // ▁ 4 . 输出 ENDCOM outStream = new FileOutputStream ( out ) ; String prefix = out . getName ( ) . substring ( out . getName ( ) . lastIndexOf ( " . " ) + 1 ) ; WriteParameter writeParameter = new WriteParameter ( ) ; writeParameter . setDefaultQuality ( QUALITY ) ; ImageWriteHelper . write ( imageWrapper , outStream , outputFormat . getImageFormat ( prefix ) , writeParameter ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } catch ( SimpleImageException e ) { } finally { IOUtils . closeQuietly ( inStream ) ; // ▁ 图片文件输入输出流必须记得关闭 ENDCOM IOUtils . closeQuietly ( outStream ) ; } } </s>

INFO - 01/14/22 19:42:11 - 7:17:27 - Generated source tok: </s> fn test_@@ parse_@@ parse_@@ error ( ) { let mut parser = Parser :: new ( ) ; let mut errors = vec ! [ ] ; let mut parser = Parser :: new ( ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors ) ; assert_eq ! ( parser . errors , vec ! [ ] ) ; parser . parse ( & mut errors , vec ! [ ] ) ; parser . parse ( </s>
INFO - 01/14/22 19:42:11 - 7:17:27 - Target (x1) tok: </s> /* * ▁ STRNEWLINE ▁ * ▁ 从@@ 中@@ 间@@ 裁@@ 切@@ 需@@ 要@@ 的@@ 大@@ 小 ▁ STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ @ param ▁ src ▁ STRNEWLINE ▁ * ▁ @ param ▁ target ▁ STRNEWLINE ▁ * ▁ @ param ▁ width ▁ STRNEWLINE ▁ * ▁ @ param ▁ height ▁ STRNEWLINE ▁ */ @ SuppressWarnings ( " static - access " ) public final static void Cut@@ Center ( String src , String target , Integer width , Integer height ) { File out = new File ( target ) ; // ▁ 目@@ 的@@ 图@@ 片 ENDCOM FileOutputStream outStream = null ; File in = new File ( src ) ; // ▁ 原@@ 图@@ 片 ENDCOM FileInputStream inStream = null ; try { inStream = new FileInputStream ( in ) ; Image@@ Wrapper image@@ Wrapper = Image@@ Read@@ Helper . read ( inStream ) ; int w = image@@ Wrapper . getWidth ( ) ; int h = image@@ Wrapper . getHeight ( ) ; int x = ( w - width ) / 2 ; int y = ( h - height ) / 2 ; Crop@@ Parameter crop@@ Param = new Crop@@ Parameter ( x , y , width , height ) ; // ▁ 裁@@ 切@@ 参@@ 数 ENDCOM if ( x < 0 || y < 0 ) { crop@@ Param = new Crop@@ Parameter ( 0 , 0 , w , h ) ; // ▁ 裁@@ 切@@ 参@@ 数 ENDCOM } Plan@@ ar@@ Image plan@@ r@@ Image = Image@@ Crop@@ Helper . crop ( image@@ Wrapper . getAs@@ Plan@@ ar@@ Image ( ) , crop@@ Param ) ; image@@ Wrapper = new Image@@ Wrapper ( plan@@ r@@ Image ) ; // ▁ 4 . 输@@ 出 ENDCOM outStream = new FileOutputStream ( out ) ; String prefix = out . getName ( ) . substring ( out . getName ( ) . lastIndexOf ( " . " ) + 1 ) ; Write@@ Parameter write@@ Parameter = new Write@@ Parameter ( ) ; write@@ Parameter . setDefault@@ Quality ( QU@@ ALITY ) ; Image@@ Write@@ Helper . write ( image@@ Wrapper , outStream , outputFormat . getImage@@ Format ( prefix ) , write@@ Parameter ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } catch ( Simple@@ Image@@ Exception e ) { } finally { IOUtils . closeQuietly ( inStream ) ; // ▁ 图@@ 片@@ 文@@ 件@@ 输@@ 入@@ 输@@ 出@@ 流@@ 必@@ 须@@ 记@@ 得@@ 关@@ 闭 ENDCOM IOUtils . closeQuietly ( outStream ) ; } } </s>


INFO - 01/14/22 19:42:26 - 7:17:41 - ========== BT rust_sa-cpp_sa example ==========
INFO - 01/14/22 19:42:26 - 7:17:41 - Generated source sent: </s> void test_get_all_all_values ( ) { std :: vector < std :: string > values ; values . push_back ( " a " ) ; values . push_back ( " b " ) ; values . push_back ( " c " ) ; values . push_back ( " d " ) ; values . push_back ( " e " ) ; values . push_back ( " f " ) ; values . push_back ( " g " ) ; values . push_back ( " h " ) ; values . push_back ( " i " ) ; values . push_back ( " j " ) ; values . push_back ( " k " ) ; values . push_back ( " l " ) ; values . push_back ( " m " ) ; values . push_back ( " n " ) ; values . push_back ( " o " ) ; values . push_back ( " p " ) ; values . push_back ( " q " ) ; values . push_back ( " r " ) ; values . push_back ( " t " ) ; values . push_back ( " u " ) ; values . push_back ( " v " ) ; values . push_back ( " w " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " w " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " w " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " z " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " </s>
INFO - 01/14/22 19:42:26 - 7:17:41 - Target (x1) sent: </s> fn make_scrobbler_pass_auth ( ) { let _m = mock ( " POST " , mockito :: Matcher :: Any ) . create ( ) ; let mut scrobbler = Scrobbler :: new ( " api _ key " , " api _ secret " ) ; let resp = scrobbler . authenticate_with_password ( " user " , " pass " ) ; assert ! ( resp . is_err ( ) ) ; let _m = mock ( " POST " , mockito :: Matcher :: Any ) . with_body ( r # " STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ { ▁ ▁ ▁ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ " session " : ▁ { STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ " key " : ▁ " key " , STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ " subscriber " : ▁ 1337 , STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ " name " : ▁ " foo ▁ floyd " STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ } </s>

INFO - 01/14/22 19:42:26 - 7:17:41 - Generated source tok: </s> void test_@@ get_@@ all_@@ all_@@ values ( ) { std :: vector < std :: string > values ; values . push_back ( " a " ) ; values . push_back ( " b " ) ; values . push_back ( " c " ) ; values . push_back ( " d " ) ; values . push_back ( " e " ) ; values . push_back ( " f " ) ; values . push_back ( " g " ) ; values . push_back ( " h " ) ; values . push_back ( " i " ) ; values . push_back ( " j " ) ; values . push_back ( " k " ) ; values . push_back ( " l " ) ; values . push_back ( " m " ) ; values . push_back ( " n " ) ; values . push_back ( " o " ) ; values . push_back ( " p " ) ; values . push_back ( " q " ) ; values . push_back ( " r " ) ; values . push_back ( " t " ) ; values . push_back ( " u " ) ; values . push_back ( " v " ) ; values . push_back ( " w " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " w " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " w " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " z " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " x " ) ; values . push_back ( " y " ) ; values . push_back ( " z " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " ) ; values . push_back ( " x " </s>
INFO - 01/14/22 19:42:26 - 7:17:41 - Target (x1) tok: </s> fn make_@@ sc@@ ro@@ bb@@ ler_@@ pass_@@ auth ( ) { let _m = mock ( " POST " , mockito :: Matcher :: Any ) . create ( ) ; let mut sc@@ ro@@ bb@@ ler = Sc@@ ro@@ bb@@ ler :: new ( " api _ key " , " api _ secret " ) ; let resp = sc@@ ro@@ bb@@ ler . authentic@@ ate_@@ with@@ _password ( " user " , " pass " ) ; assert ! ( resp . is_err ( ) ) ; let _m = mock ( " POST " , mockito :: Matcher :: Any ) . with_@@ body ( r # " STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ { ▁ ▁ ▁ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ " session " : ▁ { STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ " key " : ▁ " key " , STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ " subscriber " : ▁ 13@@ 37 , STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ " name " : ▁ " foo ▁ flo@@ y@@ d " STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ } </s>

INFO - 01/14/22 19:45:49 - 7:21:04 -     100 -    0.19 sent/s -    32.85 words/s - AE-cpp_sa:  2.0355 || AE-java_sa:  1.7361 || AE-go_sa:  1.5770 || AE-rust_sa:  1.6721 || BT-cpp_sa-go_sa-cpp_sa:  2.0602 || BT-cpp_sa-java_sa-cpp_sa:  1.8314 || BT-cpp_sa-rust_sa-cpp_sa:  1.7945 || BT-go_sa-cpp_sa-go_sa:  1.7643 || BT-go_sa-java_sa-go_sa:  1.4658 || BT-go_sa-rust_sa-go_sa:  1.7096 || BT-java_sa-cpp_sa-java_sa:  1.7389 || BT-java_sa-go_sa-java_sa:  1.7283 || BT-java_sa-rust_sa-java_sa:  1.6014 || BT-rust_sa-cpp_sa-rust_sa:  1.4383 || BT-rust_sa-go_sa-rust_sa:  1.5848 || BT-rust_sa-java_sa-rust_sa:  1.5623 -  - model LR: 4.7934e-05
INFO - 01/14/22 20:02:29 - 7:37:44 -     105 -    1.11 sent/s -   240.67 words/s - AE-cpp_sa:  1.8453 || AE-java_sa:  1.7336 || AE-go_sa:  1.3297 || AE-rust_sa:  1.5465 || BT-cpp_sa-go_sa-cpp_sa:  1.7512 || BT-cpp_sa-java_sa-cpp_sa:  1.8621 || BT-cpp_sa-rust_sa-cpp_sa:  1.9824 || BT-go_sa-cpp_sa-go_sa:  1.5051 || BT-go_sa-java_sa-go_sa:  1.5711 || BT-go_sa-rust_sa-go_sa:  1.5172 || BT-java_sa-cpp_sa-java_sa:  1.5727 || BT-java_sa-go_sa-java_sa:  1.6492 || BT-java_sa-rust_sa-java_sa:  1.6682 || BT-rust_sa-cpp_sa-rust_sa:  1.5328 || BT-rust_sa-go_sa-rust_sa:  1.5432 || BT-rust_sa-java_sa-rust_sa:  1.3759 -  - model LR: 5.0333e-05
INFO - 01/14/22 20:19:09 - 7:54:24 -     110 -    1.27 sent/s -   238.66 words/s - AE-cpp_sa:  1.7387 || AE-java_sa:  1.6533 || AE-go_sa:  1.3709 || AE-rust_sa:  1.5326 || BT-cpp_sa-go_sa-cpp_sa:  1.8660 || BT-cpp_sa-java_sa-cpp_sa:  1.9342 || BT-cpp_sa-rust_sa-cpp_sa:  2.0852 || BT-go_sa-cpp_sa-go_sa:  1.6291 || BT-go_sa-java_sa-go_sa:  1.3247 || BT-go_sa-rust_sa-go_sa:  1.4438 || BT-java_sa-cpp_sa-java_sa:  1.7729 || BT-java_sa-go_sa-java_sa:  1.5158 || BT-java_sa-rust_sa-java_sa:  1.5068 || BT-rust_sa-cpp_sa-rust_sa:  1.5682 || BT-rust_sa-go_sa-rust_sa:  1.4492 || BT-rust_sa-java_sa-rust_sa:  1.4146 -  - model LR: 5.2732e-05
INFO - 01/14/22 20:35:46 - 8:11:01 -     115 -    1.02 sent/s -   238.10 words/s - AE-cpp_sa:  1.9527 || AE-java_sa:  1.6820 || AE-go_sa:  1.3500 || AE-rust_sa:  1.4393 || BT-cpp_sa-go_sa-cpp_sa:  1.9283 || BT-cpp_sa-java_sa-cpp_sa:  1.7592 || BT-cpp_sa-rust_sa-cpp_sa:  1.5795 || BT-go_sa-cpp_sa-go_sa:  1.6225 || BT-go_sa-java_sa-go_sa:  1.5754 || BT-go_sa-rust_sa-go_sa:  1.5395 || BT-java_sa-cpp_sa-java_sa:  1.6838 || BT-java_sa-go_sa-java_sa:  1.5316 || BT-java_sa-rust_sa-java_sa:  1.4852 || BT-rust_sa-cpp_sa-rust_sa:  1.5326 || BT-rust_sa-go_sa-rust_sa:  1.5445 || BT-rust_sa-java_sa-rust_sa:  1.4809 -  - model LR: 5.5132e-05
INFO - 01/14/22 20:52:22 - 8:27:37 -     120 -    1.07 sent/s -   238.78 words/s - AE-cpp_sa:  1.7307 || AE-java_sa:  1.5281 || AE-go_sa:  1.3834 || AE-rust_sa:  1.4777 || BT-cpp_sa-go_sa-cpp_sa:  1.9754 || BT-cpp_sa-java_sa-cpp_sa:  1.8525 || BT-cpp_sa-rust_sa-cpp_sa:  1.6021 || BT-go_sa-cpp_sa-go_sa:  1.4350 || BT-go_sa-java_sa-go_sa:  1.3658 || BT-go_sa-rust_sa-go_sa:  1.3193 || BT-java_sa-cpp_sa-java_sa:  1.5338 || BT-java_sa-go_sa-java_sa:  1.5561 || BT-java_sa-rust_sa-java_sa:  1.5318 || BT-rust_sa-cpp_sa-rust_sa:  1.4910 || BT-rust_sa-go_sa-rust_sa:  1.4697 || BT-rust_sa-java_sa-rust_sa:  1.4637 -  - model LR: 5.7531e-05
INFO - 01/14/22 21:09:03 - 8:44:18 -     125 -    1.41 sent/s -   235.12 words/s - AE-cpp_sa:  1.6508 || AE-java_sa:  1.5273 || AE-go_sa:  1.2735 || AE-rust_sa:  1.4391 || BT-cpp_sa-go_sa-cpp_sa:  1.5426 || BT-cpp_sa-java_sa-cpp_sa:  1.9186 || BT-cpp_sa-rust_sa-cpp_sa:  1.7594 || BT-go_sa-cpp_sa-go_sa:  1.3977 || BT-go_sa-java_sa-go_sa:  1.3637 || BT-go_sa-rust_sa-go_sa:  1.3438 || BT-java_sa-cpp_sa-java_sa:  1.5281 || BT-java_sa-go_sa-java_sa:  1.8395 || BT-java_sa-rust_sa-java_sa:  1.6102 || BT-rust_sa-cpp_sa-rust_sa:  1.5600 || BT-rust_sa-go_sa-rust_sa:  1.5664 || BT-rust_sa-java_sa-rust_sa:  1.3596 -  - model LR: 5.9930e-05
INFO - 01/14/22 21:25:41 - 9:00:56 -     130 -    0.99 sent/s -   238.83 words/s - AE-cpp_sa:  1.7625 || AE-java_sa:  1.6197 || AE-go_sa:  1.3834 || AE-rust_sa:  1.3306 || BT-cpp_sa-go_sa-cpp_sa:  1.6463 || BT-cpp_sa-java_sa-cpp_sa:  1.6646 || BT-cpp_sa-rust_sa-cpp_sa:  1.8037 || BT-go_sa-cpp_sa-go_sa:  1.4303 || BT-go_sa-java_sa-go_sa:  1.4725 || BT-go_sa-rust_sa-go_sa:  1.3855 || BT-java_sa-cpp_sa-java_sa:  1.6062 || BT-java_sa-go_sa-java_sa:  1.5123 || BT-java_sa-rust_sa-java_sa:  1.5287 || BT-rust_sa-cpp_sa-rust_sa:  1.5525 || BT-rust_sa-go_sa-rust_sa:  1.4697 || BT-rust_sa-java_sa-rust_sa:  1.4613 -  - model LR: 6.2329e-05
INFO - 01/14/22 21:42:20 - 9:17:36 -     135 -    1.70 sent/s -   233.25 words/s - AE-cpp_sa:  1.5416 || AE-java_sa:  1.5953 || AE-go_sa:  1.6377 || AE-rust_sa:  1.4000 || BT-cpp_sa-go_sa-cpp_sa:  1.6187 || BT-cpp_sa-java_sa-cpp_sa:  1.8791 || BT-cpp_sa-rust_sa-cpp_sa:  1.6791 || BT-go_sa-cpp_sa-go_sa:  1.7619 || BT-go_sa-java_sa-go_sa:  1.1535 || BT-go_sa-rust_sa-go_sa:  1.4420 || BT-java_sa-cpp_sa-java_sa:  1.7400 || BT-java_sa-go_sa-java_sa:  1.5355 || BT-java_sa-rust_sa-java_sa:  1.5453 || BT-rust_sa-cpp_sa-rust_sa:  1.2785 || BT-rust_sa-go_sa-rust_sa:  1.5281 || BT-rust_sa-java_sa-rust_sa:  1.4529 -  - model LR: 6.4728e-05
INFO - 01/14/22 21:58:58 - 9:34:13 -     140 -    1.23 sent/s -   241.32 words/s - AE-cpp_sa:  1.6205 || AE-java_sa:  1.4146 || AE-go_sa:  1.2947 || AE-rust_sa:  1.1775 || BT-cpp_sa-go_sa-cpp_sa:  1.6746 || BT-cpp_sa-java_sa-cpp_sa:  1.9064 || BT-cpp_sa-rust_sa-cpp_sa:  1.6234 || BT-go_sa-cpp_sa-go_sa:  1.3348 || BT-go_sa-java_sa-go_sa:  1.4357 || BT-go_sa-rust_sa-go_sa:  1.4727 || BT-java_sa-cpp_sa-java_sa:  1.5236 || BT-java_sa-go_sa-java_sa:  1.5846 || BT-java_sa-rust_sa-java_sa:  1.5881 || BT-rust_sa-cpp_sa-rust_sa:  1.5773 || BT-rust_sa-go_sa-rust_sa:  1.3938 || BT-rust_sa-java_sa-rust_sa:  1.3344 -  - model LR: 6.7128e-05
INFO - 01/14/22 22:15:35 - 9:50:50 -     145 -    1.11 sent/s -   234.60 words/s - AE-cpp_sa:  1.8834 || AE-java_sa:  1.5164 || AE-go_sa:  1.1157 || AE-rust_sa:  1.5387 || BT-cpp_sa-go_sa-cpp_sa:  1.6252 || BT-cpp_sa-java_sa-cpp_sa:  1.8117 || BT-cpp_sa-rust_sa-cpp_sa:  1.6928 || BT-go_sa-cpp_sa-go_sa:  1.5254 || BT-go_sa-java_sa-go_sa:  1.5148 || BT-go_sa-rust_sa-go_sa:  1.3574 || BT-java_sa-cpp_sa-java_sa:  1.6113 || BT-java_sa-go_sa-java_sa:  1.4580 || BT-java_sa-rust_sa-java_sa:  1.4316 || BT-rust_sa-cpp_sa-rust_sa:  1.4135 || BT-rust_sa-go_sa-rust_sa:  1.2332 || BT-rust_sa-java_sa-rust_sa:  1.3145 -  - model LR: 6.9527e-05
INFO - 01/14/22 22:32:12 - 10:07:28 -     150 -    1.27 sent/s -   233.23 words/s - AE-cpp_sa:  1.7766 || AE-java_sa:  1.3848 || AE-go_sa:  1.2717 || AE-rust_sa:  1.5041 || BT-cpp_sa-go_sa-cpp_sa:  1.7053 || BT-cpp_sa-java_sa-cpp_sa:  2.0184 || BT-cpp_sa-rust_sa-cpp_sa:  1.7174 || BT-go_sa-cpp_sa-go_sa:  1.2971 || BT-go_sa-java_sa-go_sa:  1.3676 || BT-go_sa-rust_sa-go_sa:  1.6391 || BT-java_sa-cpp_sa-java_sa:  1.4627 || BT-java_sa-go_sa-java_sa:  1.5314 || BT-java_sa-rust_sa-java_sa:  1.6939 || BT-rust_sa-cpp_sa-rust_sa:  1.4660 || BT-rust_sa-go_sa-rust_sa:  1.5393 || BT-rust_sa-java_sa-rust_sa:  1.4230 -  - model LR: 7.1926e-05
INFO - 01/14/22 22:48:51 - 10:24:06 -     155 -    1.55 sent/s -   238.39 words/s - AE-cpp_sa:  1.6556 || AE-java_sa:  1.5068 || AE-go_sa:  1.4361 || AE-rust_sa:  1.2652 || BT-cpp_sa-go_sa-cpp_sa:  1.5342 || BT-cpp_sa-java_sa-cpp_sa:  1.5459 || BT-cpp_sa-rust_sa-cpp_sa:  1.6738 || BT-go_sa-cpp_sa-go_sa:  1.2975 || BT-go_sa-java_sa-go_sa:  1.5412 || BT-go_sa-rust_sa-go_sa:  1.3303 || BT-java_sa-cpp_sa-java_sa:  1.5680 || BT-java_sa-go_sa-java_sa:  1.5416 || BT-java_sa-rust_sa-java_sa:  1.4750 || BT-rust_sa-cpp_sa-rust_sa:  1.3215 || BT-rust_sa-go_sa-rust_sa:  1.2578 || BT-rust_sa-java_sa-rust_sa:  1.4229 -  - model LR: 7.4325e-05
INFO - 01/14/22 23:05:30 - 10:40:45 -     160 -    1.32 sent/s -   241.96 words/s - AE-cpp_sa:  1.3179 || AE-java_sa:  1.4928 || AE-go_sa:  1.2641 || AE-rust_sa:  1.3564 || BT-cpp_sa-go_sa-cpp_sa:  1.9047 || BT-cpp_sa-java_sa-cpp_sa:  1.4711 || BT-cpp_sa-rust_sa-cpp_sa:  1.6107 || BT-go_sa-cpp_sa-go_sa:  1.4148 || BT-go_sa-java_sa-go_sa:  1.2345 || BT-go_sa-rust_sa-go_sa:  1.6076 || BT-java_sa-cpp_sa-java_sa:  1.4199 || BT-java_sa-go_sa-java_sa:  1.7471 || BT-java_sa-rust_sa-java_sa:  1.5092 || BT-rust_sa-cpp_sa-rust_sa:  1.4766 || BT-rust_sa-go_sa-rust_sa:  1.5852 || BT-rust_sa-java_sa-rust_sa:  1.4865 -  - model LR: 7.6724e-05
INFO - 01/14/22 23:22:09 - 10:57:24 -     165 -    1.36 sent/s -   241.74 words/s - AE-cpp_sa:  1.6471 || AE-java_sa:  1.3592 || AE-go_sa:  1.2579 || AE-rust_sa:  1.3170 || BT-cpp_sa-go_sa-cpp_sa:  1.9215 || BT-cpp_sa-java_sa-cpp_sa:  2.0168 || BT-cpp_sa-rust_sa-cpp_sa:  1.6184 || BT-go_sa-cpp_sa-go_sa:  1.5318 || BT-go_sa-java_sa-go_sa:  1.1763 || BT-go_sa-rust_sa-go_sa:  1.4912 || BT-java_sa-cpp_sa-java_sa:  1.5789 || BT-java_sa-go_sa-java_sa:  1.6801 || BT-java_sa-rust_sa-java_sa:  1.5105 || BT-rust_sa-cpp_sa-rust_sa:  1.3784 || BT-rust_sa-go_sa-rust_sa:  1.2774 || BT-rust_sa-java_sa-rust_sa:  1.4332 -  - model LR: 7.9124e-05
INFO - 01/14/22 23:38:47 - 11:14:03 -     170 -    1.31 sent/s -   235.68 words/s - AE-cpp_sa:  1.7918 || AE-java_sa:  1.3924 || AE-go_sa:  1.1024 || AE-rust_sa:  1.2168 || BT-cpp_sa-go_sa-cpp_sa:  1.6195 || BT-cpp_sa-java_sa-cpp_sa:  1.9090 || BT-cpp_sa-rust_sa-cpp_sa:  1.7086 || BT-go_sa-cpp_sa-go_sa:  1.3044 || BT-go_sa-java_sa-go_sa:  1.4873 || BT-go_sa-rust_sa-go_sa:  1.1405 || BT-java_sa-cpp_sa-java_sa:  1.3840 || BT-java_sa-go_sa-java_sa:  1.4801 || BT-java_sa-rust_sa-java_sa:  1.6730 || BT-rust_sa-cpp_sa-rust_sa:  1.3016 || BT-rust_sa-go_sa-rust_sa:  1.4469 || BT-rust_sa-java_sa-rust_sa:  1.2730 -  - model LR: 8.1523e-05
INFO - 01/14/22 23:55:26 - 11:30:42 -     175 -    1.14 sent/s -   234.85 words/s - AE-cpp_sa:  1.4885 || AE-java_sa:  1.5455 || AE-go_sa:  1.2949 || AE-rust_sa:  1.2137 || BT-cpp_sa-go_sa-cpp_sa:  1.8156 || BT-cpp_sa-java_sa-cpp_sa:  1.7674 || BT-cpp_sa-rust_sa-cpp_sa:  1.4616 || BT-go_sa-cpp_sa-go_sa:  1.3253 || BT-go_sa-java_sa-go_sa:  1.3836 || BT-go_sa-rust_sa-go_sa:  1.3775 || BT-java_sa-cpp_sa-java_sa:  1.4648 || BT-java_sa-go_sa-java_sa:  1.7043 || BT-java_sa-rust_sa-java_sa:  1.5213 || BT-rust_sa-cpp_sa-rust_sa:  1.4848 || BT-rust_sa-go_sa-rust_sa:  1.2834 || BT-rust_sa-java_sa-rust_sa:  1.2816 -  - model LR: 8.3922e-05
INFO - 01/15/22 00:12:14 - 11:47:29 -     180 -    1.26 sent/s -   239.41 words/s - AE-cpp_sa:  1.6555 || AE-java_sa:  1.2786 || AE-go_sa:  1.2462 || AE-rust_sa:  1.2793 || BT-cpp_sa-go_sa-cpp_sa:  1.5949 || BT-cpp_sa-java_sa-cpp_sa:  1.4078 || BT-cpp_sa-rust_sa-cpp_sa:  1.5082 || BT-go_sa-cpp_sa-go_sa:  1.2295 || BT-go_sa-java_sa-go_sa:  1.2635 || BT-go_sa-rust_sa-go_sa:  1.4102 || BT-java_sa-cpp_sa-java_sa:  1.5291 || BT-java_sa-go_sa-java_sa:  1.6768 || BT-java_sa-rust_sa-java_sa:  1.5404 || BT-rust_sa-cpp_sa-rust_sa:  1.3215 || BT-rust_sa-go_sa-rust_sa:  1.2952 || BT-rust_sa-java_sa-rust_sa:  1.3019 -  - model LR: 8.6321e-05
INFO - 01/15/22 00:28:54 - 12:04:09 -     185 -    1.36 sent/s -   236.46 words/s - AE-cpp_sa:  1.7732 || AE-java_sa:  1.4189 || AE-go_sa:  1.2399 || AE-rust_sa:  1.2896 || BT-cpp_sa-go_sa-cpp_sa:  1.5744 || BT-cpp_sa-java_sa-cpp_sa:  1.4398 || BT-cpp_sa-rust_sa-cpp_sa:  1.7594 || BT-go_sa-cpp_sa-go_sa:  1.3350 || BT-go_sa-java_sa-go_sa:  1.4379 || BT-go_sa-rust_sa-go_sa:  1.2309 || BT-java_sa-cpp_sa-java_sa:  1.4387 || BT-java_sa-go_sa-java_sa:  1.6150 || BT-java_sa-rust_sa-java_sa:  1.3998 || BT-rust_sa-cpp_sa-rust_sa:  1.3676 || BT-rust_sa-go_sa-rust_sa:  1.2889 || BT-rust_sa-java_sa-rust_sa:  1.4352 -  - model LR: 8.8720e-05
INFO - 01/15/22 00:45:32 - 12:20:47 -     190 -    1.25 sent/s -   243.24 words/s - AE-cpp_sa:  1.5049 || AE-java_sa:  1.3996 || AE-go_sa:  1.2228 || AE-rust_sa:  1.2176 || BT-cpp_sa-go_sa-cpp_sa:  1.8035 || BT-cpp_sa-java_sa-cpp_sa:  1.8025 || BT-cpp_sa-rust_sa-cpp_sa:  1.5842 || BT-go_sa-cpp_sa-go_sa:  1.2355 || BT-go_sa-java_sa-go_sa:  1.3691 || BT-go_sa-rust_sa-go_sa:  1.2393 || BT-java_sa-cpp_sa-java_sa:  1.4629 || BT-java_sa-go_sa-java_sa:  1.3801 || BT-java_sa-rust_sa-java_sa:  1.4699 || BT-rust_sa-cpp_sa-rust_sa:  1.3019 || BT-rust_sa-go_sa-rust_sa:  1.4543 || BT-rust_sa-java_sa-rust_sa:  1.2372 -  - model LR: 9.1120e-05
INFO - 01/15/22 01:02:13 - 12:37:29 -     195 -    1.18 sent/s -   236.65 words/s - AE-cpp_sa:  1.2078 || AE-java_sa:  1.3545 || AE-go_sa:  1.1936 || AE-rust_sa:  1.1562 || BT-cpp_sa-go_sa-cpp_sa:  1.6406 || BT-cpp_sa-java_sa-cpp_sa:  1.7197 || BT-cpp_sa-rust_sa-cpp_sa:  1.9564 || BT-go_sa-cpp_sa-go_sa:  1.2380 || BT-go_sa-java_sa-go_sa:  1.4629 || BT-go_sa-rust_sa-go_sa:  1.1872 || BT-java_sa-cpp_sa-java_sa:  1.5670 || BT-java_sa-go_sa-java_sa:  1.3931 || BT-java_sa-rust_sa-java_sa:  1.4443 || BT-rust_sa-cpp_sa-rust_sa:  1.3436 || BT-rust_sa-go_sa-rust_sa:  1.4344 || BT-rust_sa-java_sa-rust_sa:  1.2420 -  - model LR: 9.3519e-05
INFO - 01/15/22 01:05:35 - 12:40:50 - ============ End of epoch 1 ============

INFO - 01/15/22 01:05:37 - 12:40:53 - ========== valid java_sa-cpp_sa example ==========
INFO - 01/15/22 01:05:37 - 12:40:53 - source sent: </s> static double findArea ( int r ) { return PI * Math . pow ( r , 2 ) ; } </s>
INFO - 01/15/22 01:05:37 - 12:40:53 - target sent: </s> float findArea ( float r ) { return ( pi * r * r ) ; } </s>
INFO - 01/15/22 01:05:37 - 12:40:53 - gen sent: </s> static void _glCopyTexSubImage2D ( GLenum target , GLint level , GLint xoffset , GLint yoffset , GLint width , GLsizei height ) { glCopyTexSubImage2D ( target , level , xoffset , yoffset , width , height ) ; } </s>

INFO - 01/15/22 01:05:37 - 12:40:53 - source tok: </s> static double find@@ Area ( int r ) { return PI * Math . pow ( r , 2 ) ; } </s>
INFO - 01/15/22 01:05:37 - 12:40:53 - target tok: </s> float find@@ Area ( float r ) { return ( pi * r * r ) ; } </s>
INFO - 01/15/22 01:05:37 - 12:40:53 - gen tok: </s> static void _@@ gl@@ Copy@@ Tex@@ Sub@@ Image2D ( GLenum target , GLint level , GLint xoffset , GLint yoffset , GLint width , GLsizei height ) { gl@@ Copy@@ Tex@@ Sub@@ Image2D ( target , level , xoffset , yoffset , width , height ) ; } </s>

INFO - 01/15/22 01:13:52 - 12:49:07 - Computation res valid java_sa cpp_sa : {"compilation": 231, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 239, "success": 0, "timeout": 0, "total": 470, "total_evaluated": 231}
INFO - 01/15/22 01:13:52 - 12:49:07 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.java_sa-cpp_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.java_sa-cpp_sa.valid.txt : 0.470000

INFO - 01/15/22 01:13:56 - 12:49:11 - ========== valid rust_sa-go_sa example ==========
INFO - 01/15/22 01:13:56 - 12:49:11 - source sent: </s> fn kthgroupsum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:13:56 - 12:49:11 - target sent: </s> func kthgroupsum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:13:56 - 12:49:11 - gen sent: </s> func ( m * GetCampaignsCampaignResponse ) GetCampaignId ( ) int64 { if m != nil && m . CampaignId != nil { return * m . CampaignId NEW_LINE } NEW_LINE return 0 NEW_LINE } </s>

INFO - 01/15/22 01:13:56 - 12:49:11 - source tok: </s> fn k@@ th@@ group@@ sum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:13:56 - 12:49:11 - target tok: </s> func k@@ th@@ group@@ sum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:13:56 - 12:49:11 - gen tok: </s> func ( m * Get@@ Campaign@@ s@@ Campaign@@ Response ) Get@@ Campaign@@ Id ( ) int64 { if m != nil && m . Campaign@@ Id != nil { return * m . Campaign@@ Id NEW_LINE } NEW_LINE return 0 NEW_LINE } </s>

INFO - 01/15/22 01:15:36 - 12:50:51 - Computation res valid rust_sa go_sa : {"compilation": 136, "error": 5, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 141, "total_evaluated": 141}
INFO - 01/15/22 01:15:36 - 12:50:51 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.rust_sa-go_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.rust_sa-go_sa.valid.txt : 2.280000

INFO - 01/15/22 01:15:39 - 12:50:54 - ========== valid go_sa-rust_sa example ==========
INFO - 01/15/22 01:15:39 - 12:50:54 - source sent: </s> func kthgroupsum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:15:39 - 12:50:54 - target sent: </s> fn kthgroupsum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:15:39 - 12:50:54 - gen sent: </s> fn test_get_all_keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( 1 ) ; keys . push ( 2 ) ; keys . push ( 3 ) ; keys . push ( 4 ) ; keys . push ( 5 ) ; keys . push ( 6 ) ; keys . push ( 7 ) ; keys . push ( </s>

INFO - 01/15/22 01:15:39 - 12:50:54 - source tok: </s> func k@@ th@@ group@@ sum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:15:39 - 12:50:54 - target tok: </s> fn k@@ th@@ group@@ sum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:15:39 - 12:50:54 - gen tok: </s> fn test_@@ get_@@ all_@@ keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( 1 ) ; keys . push ( 2 ) ; keys . push ( 3 ) ; keys . push ( 4 ) ; keys . push ( 5 ) ; keys . push ( 6 ) ; keys . push ( 7 ) ; keys . push ( </s>

INFO - 01/15/22 01:18:02 - 12:53:18 - Computation res valid go_sa rust_sa : {"compilation": 141, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 141, "total_evaluated": 141}
INFO - 01/15/22 01:18:03 - 12:53:18 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.go_sa-rust_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.go_sa-rust_sa.valid.txt : 0.140000

INFO - 01/15/22 01:18:05 - 12:53:20 - ========== valid java_sa-go_sa example ==========
INFO - 01/15/22 01:18:05 - 12:53:20 - source sent: </s> public static int kthgroupsum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:18:05 - 12:53:20 - target sent: </s> func kthgroupsum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:18:05 - 12:53:20 - gen sent: </s> func ( m * GetCampaignsCampaignResponse ) GetCampaignId ( ) int64 { if m != nil && m . CampaignId != nil { return * m . CampaignId NEW_LINE } NEW_LINE return 0 NEW_LINE } </s>

INFO - 01/15/22 01:18:05 - 12:53:20 - source tok: </s> public static int k@@ th@@ group@@ sum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:18:05 - 12:53:20 - target tok: </s> func k@@ th@@ group@@ sum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:18:05 - 12:53:20 - gen tok: </s> func ( m * Get@@ Campaign@@ s@@ Campaign@@ Response ) Get@@ Campaign@@ Id ( ) int64 { if m != nil && m . Campaign@@ Id != nil { return * m . Campaign@@ Id NEW_LINE } NEW_LINE return 0 NEW_LINE } </s>

INFO - 01/15/22 01:18:57 - 12:54:12 - Computation res valid java_sa go_sa : {"compilation": 152, "error": 5, "failure": 0, "identical_gold": 0, "script_not_found": 4, "success": 0, "timeout": 0, "total": 161, "total_evaluated": 157}
INFO - 01/15/22 01:18:57 - 12:54:13 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.java_sa-go_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.java_sa-go_sa.valid.txt : 2.880000

INFO - 01/15/22 01:19:00 - 12:54:15 - ========== valid java_sa-rust_sa example ==========
INFO - 01/15/22 01:19:00 - 12:54:15 - source sent: </s> public static int kthgroupsum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:19:00 - 12:54:15 - target sent: </s> fn kthgroupsum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:19:00 - 12:54:15 - gen sent: </s> fn test_get_all_keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( 1 ) ; keys . push ( 2 ) ; keys . push ( 3 ) ; keys . push ( 4 ) ; keys . push ( 5 ) ; keys . push ( 6 ) ; keys . push ( 7 ) ; keys . push ( 8 ) ; </s>

INFO - 01/15/22 01:19:00 - 12:54:15 - source tok: </s> public static int k@@ th@@ group@@ sum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:19:00 - 12:54:15 - target tok: </s> fn k@@ th@@ group@@ sum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:19:00 - 12:54:15 - gen tok: </s> fn test_@@ get_@@ all_@@ keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( 1 ) ; keys . push ( 2 ) ; keys . push ( 3 ) ; keys . push ( 4 ) ; keys . push ( 5 ) ; keys . push ( 6 ) ; keys . push ( 7 ) ; keys . push ( 8 ) ; </s>

INFO - 01/15/22 01:21:00 - 12:56:15 - Computation res valid java_sa rust_sa : {"compilation": 151, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 151, "total_evaluated": 151}
INFO - 01/15/22 01:21:00 - 12:56:15 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.java_sa-rust_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.java_sa-rust_sa.valid.txt : 0.170000

INFO - 01/15/22 01:21:03 - 12:56:19 - ========== valid rust_sa-cpp_sa example ==========
INFO - 01/15/22 01:21:03 - 12:56:19 - source sent: </s> fn kthgroupsum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:21:03 - 12:56:19 - target sent: </s> int kthgroupsum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:21:03 - 12:56:19 - gen sent: </s> static void _printHelp ( ) { cout << " Usage : ▁ " << _printHelp ( ) << endl ; } </s>

INFO - 01/15/22 01:21:03 - 12:56:19 - source tok: </s> fn k@@ th@@ group@@ sum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:21:03 - 12:56:19 - target tok: </s> int k@@ th@@ group@@ sum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:21:03 - 12:56:19 - gen tok: </s> static void _@@ print@@ Help ( ) { cout << " Usage : ▁ " << _@@ print@@ Help ( ) << endl ; } </s>

INFO - 01/15/22 01:24:29 - 12:59:44 - Computation res valid rust_sa cpp_sa : {"compilation": 151, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 151, "total_evaluated": 151}
INFO - 01/15/22 01:24:29 - 12:59:45 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.rust_sa-cpp_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.rust_sa-cpp_sa.valid.txt : 1.080000

INFO - 01/15/22 01:24:32 - 12:59:47 - ========== valid cpp_sa-go_sa example ==========
INFO - 01/15/22 01:24:32 - 12:59:47 - source sent: </s> int kthgroupsum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:24:32 - 12:59:47 - target sent: </s> func kthgroupsum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:24:32 - 12:59:47 - gen sent: </s> func ( m * GetCampaignsCampaignResponse ) GetCampaignId ( ) int64 { if m != nil && m . CampaignId != nil { return * m . CampaignId NEW_LINE } NEW_LINE return 0 NEW_LINE } </s>

INFO - 01/15/22 01:24:32 - 12:59:47 - source tok: </s> int k@@ th@@ group@@ sum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:24:32 - 12:59:47 - target tok: </s> func k@@ th@@ group@@ sum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:24:32 - 12:59:47 - gen tok: </s> func ( m * Get@@ Campaign@@ s@@ Campaign@@ Response ) Get@@ Campaign@@ Id ( ) int64 { if m != nil && m . Campaign@@ Id != nil { return * m . Campaign@@ Id NEW_LINE } NEW_LINE return 0 NEW_LINE } </s>

INFO - 01/15/22 01:25:25 - 13:00:40 - Computation res valid cpp_sa go_sa : {"compilation": 153, "error": 4, "failure": 0, "identical_gold": 0, "script_not_found": 4, "success": 0, "timeout": 0, "total": 161, "total_evaluated": 157}
INFO - 01/15/22 01:25:25 - 13:00:40 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.cpp_sa-go_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.cpp_sa-go_sa.valid.txt : 2.940000

INFO - 01/15/22 01:25:28 - 13:00:43 - ========== valid go_sa-cpp_sa example ==========
INFO - 01/15/22 01:25:28 - 13:00:43 - source sent: </s> func kthgroupsum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:25:28 - 13:00:43 - target sent: </s> int kthgroupsum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:25:28 - 13:00:43 - gen sent: </s> static void _printHelp ( ) { cout << " Usage : ▁ " << _printHelp ( ) << endl ; } </s>

INFO - 01/15/22 01:25:28 - 13:00:43 - source tok: </s> func k@@ th@@ group@@ sum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:25:28 - 13:00:43 - target tok: </s> int k@@ th@@ group@@ sum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:25:28 - 13:00:43 - gen tok: </s> static void _@@ print@@ Help ( ) { cout << " Usage : ▁ " << _@@ print@@ Help ( ) << endl ; } </s>

INFO - 01/15/22 01:28:18 - 13:03:33 - Computation res valid go_sa cpp_sa : {"compilation": 161, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 161, "total_evaluated": 161}
INFO - 01/15/22 01:28:18 - 13:03:33 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.go_sa-cpp_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.go_sa-cpp_sa.valid.txt : 0.440000

INFO - 01/15/22 01:28:21 - 13:03:36 - ========== valid go_sa-java_sa example ==========
INFO - 01/15/22 01:28:21 - 13:03:36 - source sent: </s> func kthgroupsum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:28:21 - 13:03:36 - target sent: </s> public static int kthgroupsum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:28:21 - 13:03:36 - gen sent: </s> public static void main ( String [ ] args ) { new SpringApplication ( new SpringApplication ( " springapp " ) ) . run ( args ) ; } </s>

INFO - 01/15/22 01:28:21 - 13:03:36 - source tok: </s> func k@@ th@@ group@@ sum ( k int ) int { return k * k * k NEW_LINE } </s>
INFO - 01/15/22 01:28:21 - 13:03:36 - target tok: </s> public static int k@@ th@@ group@@ sum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:28:21 - 13:03:36 - gen tok: </s> public static void main ( String [ ] args ) { new Spring@@ Application ( new Spring@@ Application ( " spring@@ app " ) ) . run ( args ) ; } </s>

INFO - 01/15/22 01:29:22 - 13:04:37 - Computation res valid go_sa java_sa : {"compilation": 147, "error": 1, "failure": 0, "identical_gold": 0, "script_not_found": 13, "success": 0, "timeout": 0, "total": 161, "total_evaluated": 148}
INFO - 01/15/22 01:29:22 - 13:04:37 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.go_sa-java_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.go_sa-java_sa.valid.txt : 3.410000

INFO - 01/15/22 01:29:26 - 13:04:41 - ========== valid rust_sa-java_sa example ==========
INFO - 01/15/22 01:29:26 - 13:04:41 - source sent: </s> fn kthgroupsum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:29:26 - 13:04:41 - target sent: </s> public static int kthgroupsum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:29:26 - 13:04:41 - gen sent: </s> public static void main ( String [ ] args ) { new SpringApplication ( new SpringApplication ( " springapp " ) ) . run ( args ) ; } </s>

INFO - 01/15/22 01:29:26 - 13:04:41 - source tok: </s> fn k@@ th@@ group@@ sum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:29:26 - 13:04:41 - target tok: </s> public static int k@@ th@@ group@@ sum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:29:26 - 13:04:41 - gen tok: </s> public static void main ( String [ ] args ) { new Spring@@ Application ( new Spring@@ Application ( " spring@@ app " ) ) . run ( args ) ; } </s>

INFO - 01/15/22 01:31:25 - 13:06:40 - Computation res valid rust_sa java_sa : {"compilation": 138, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 13, "success": 0, "timeout": 0, "total": 151, "total_evaluated": 138}
INFO - 01/15/22 01:31:25 - 13:06:41 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.rust_sa-java_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.rust_sa-java_sa.valid.txt : 5.730000

INFO - 01/15/22 01:31:28 - 13:06:43 - ========== valid cpp_sa-rust_sa example ==========
INFO - 01/15/22 01:31:28 - 13:06:43 - source sent: </s> int kthgroupsum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:31:28 - 13:06:43 - target sent: </s> fn kthgroupsum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:31:28 - 13:06:43 - gen sent: </s> fn test_get_all_keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( 1 ) ; keys . push ( 2 ) ; keys . push ( 3 ) ; keys . push ( 4 ) ; keys . push ( 5 ) ; keys . push ( 6 ) ; keys . push ( 7 ) ; keys </s>

INFO - 01/15/22 01:31:28 - 13:06:43 - source tok: </s> int k@@ th@@ group@@ sum ( int k ) { return k * k * k ; } </s>
INFO - 01/15/22 01:31:28 - 13:06:43 - target tok: </s> fn k@@ th@@ group@@ sum ( mut k : i32 ) -> i32 { return k * k * k ; } </s>
INFO - 01/15/22 01:31:28 - 13:06:43 - gen tok: </s> fn test_@@ get_@@ all_@@ keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( 1 ) ; keys . push ( 2 ) ; keys . push ( 3 ) ; keys . push ( 4 ) ; keys . push ( 5 ) ; keys . push ( 6 ) ; keys . push ( 7 ) ; keys </s>

INFO - 01/15/22 01:33:20 - 13:08:36 - Computation res valid cpp_sa rust_sa : {"compilation": 151, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 151, "total_evaluated": 151}
INFO - 01/15/22 01:33:21 - 13:08:36 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.cpp_sa-rust_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.cpp_sa-rust_sa.valid.txt : 0.160000

INFO - 01/15/22 01:33:22 - 13:08:37 - ========== valid cpp_sa-java_sa example ==========
INFO - 01/15/22 01:33:22 - 13:08:37 - source sent: </s> float findArea ( float r ) { return ( pi * r * r ) ; } </s>
INFO - 01/15/22 01:33:22 - 13:08:37 - target sent: </s> static double findArea ( int r ) { return PI * Math . pow ( r , 2 ) ; } </s>
INFO - 01/15/22 01:33:22 - 13:08:37 - gen sent: </s> public static void main ( String [ ] args ) { new SpringApplication ( new SpringApplication ( SpringApplication . class ) ) . run ( args ) ; } </s>

INFO - 01/15/22 01:33:22 - 13:08:37 - source tok: </s> float find@@ Area ( float r ) { return ( pi * r * r ) ; } </s>
INFO - 01/15/22 01:33:22 - 13:08:37 - target tok: </s> static double find@@ Area ( int r ) { return PI * Math . pow ( r , 2 ) ; } </s>
INFO - 01/15/22 01:33:22 - 13:08:37 - gen tok: </s> public static void main ( String [ ] args ) { new Spring@@ Application ( new Spring@@ Application ( Spring@@ Application . class ) ) . run ( args ) ; } </s>

INFO - 01/15/22 01:35:33 - 13:10:48 - Computation res valid cpp_sa java_sa : {"compilation": 230, "error": 5, "failure": 0, "identical_gold": 0, "script_not_found": 235, "success": 0, "timeout": 0, "total": 470, "total_evaluated": 235}
INFO - 01/15/22 01:35:33 - 13:10:48 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.cpp_sa-java_sa.valid_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.cpp_sa-java_sa.valid.txt : 2.400000

INFO - 01/15/22 01:35:35 - 13:10:50 - ========== test java_sa-cpp_sa example ==========
INFO - 01/15/22 01:35:35 - 13:10:50 - source sent: </s> static int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 01:35:35 - 13:10:50 - target sent: </s> int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 01:35:35 - 13:10:50 - gen sent: </s> static void _glCopyBufferSubData ( GLenum target , GLenum subdata , GLsizei offset , GLsizei count ) { glCopyBufferSubData ( target , subdata , offset , count , count ) ; } </s>

INFO - 01/15/22 01:35:35 - 13:10:50 - source tok: </s> static int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 01:35:35 - 13:10:50 - target tok: </s> int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 01:35:35 - 13:10:50 - gen tok: </s> static void _@@ gl@@ Copy@@ Buffer@@ Sub@@ Data ( GLenum target , GLenum sub@@ data , GLsizei offset , GLsizei count ) { gl@@ Copy@@ Buffer@@ Sub@@ Data ( target , sub@@ data , offset , count , count ) ; } </s>

INFO - 01/15/22 01:52:15 - 13:27:30 - Computation res test java_sa cpp_sa : {"compilation": 467, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 481, "success": 0, "timeout": 0, "total": 948, "total_evaluated": 467}
INFO - 01/15/22 01:52:16 - 13:27:32 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.java_sa-cpp_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.java_sa-cpp_sa.test.txt : 0.410000

INFO - 01/15/22 01:52:18 - 13:27:34 - ========== test rust_sa-go_sa example ==========
INFO - 01/15/22 01:52:18 - 13:27:34 - source sent: </s> fn addOne ( mut x : i32 ) -> i32 { return - ! x ; } </s>
INFO - 01/15/22 01:52:18 - 13:27:34 - target sent: </s> func addOne ( x int ) int { return - ^ x NEW_LINE } </s>
INFO - 01/15/22 01:52:18 - 13:27:34 - gen sent: </s> func ( m * GetCampaignsCampaignResponse ) GetCampaignId ( ) int64 { if m != nil && m . CampaignId != nil { return * m . CampaignId NEW_LINE } NEW_LINE return 0 NEW_LINE } </s>

INFO - 01/15/22 01:52:18 - 13:27:34 - source tok: </s> fn add@@ One ( mut x : i32 ) -> i32 { return - ! x ; } </s>
INFO - 01/15/22 01:52:18 - 13:27:34 - target tok: </s> func add@@ One ( x int ) int { return - ^ x NEW_LINE } </s>
INFO - 01/15/22 01:52:18 - 13:27:34 - gen tok: </s> func ( m * Get@@ Campaign@@ s@@ Campaign@@ Response ) Get@@ Campaign@@ Id ( ) int64 { if m != nil && m . Campaign@@ Id != nil { return * m . Campaign@@ Id NEW_LINE } NEW_LINE return 0 NEW_LINE } </s>

INFO - 01/15/22 01:55:44 - 13:31:00 - Computation res test rust_sa go_sa : {"compilation": 291, "error": 2, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 293, "total_evaluated": 293}
INFO - 01/15/22 01:55:45 - 13:31:00 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.rust_sa-go_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.rust_sa-go_sa.test.txt : 1.620000

INFO - 01/15/22 01:55:47 - 13:31:02 - ========== test go_sa-rust_sa example ==========
INFO - 01/15/22 01:55:47 - 13:31:02 - source sent: </s> func addOne ( x int ) int { return - ^ x NEW_LINE } </s>
INFO - 01/15/22 01:55:47 - 13:31:02 - target sent: </s> fn addOne ( mut x : i32 ) -> i32 { return - ! x ; } </s>
INFO - 01/15/22 01:55:47 - 13:31:02 - gen sent: </s> fn test_get_all_keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( 1 ) ; keys . push ( 2 ) ; keys . push ( 3 ) ; keys . push ( 4 ) ; keys . push ( 5 ) ; keys . push ( 6 ) </s>

INFO - 01/15/22 01:55:47 - 13:31:02 - source tok: </s> func add@@ One ( x int ) int { return - ^ x NEW_LINE } </s>
INFO - 01/15/22 01:55:47 - 13:31:02 - target tok: </s> fn add@@ One ( mut x : i32 ) -> i32 { return - ! x ; } </s>
INFO - 01/15/22 01:55:47 - 13:31:02 - gen tok: </s> fn test_@@ get_@@ all_@@ keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( 1 ) ; keys . push ( 2 ) ; keys . push ( 3 ) ; keys . push ( 4 ) ; keys . push ( 5 ) ; keys . push ( 6 ) </s>

INFO - 01/15/22 02:01:03 - 13:36:18 - Computation res test go_sa rust_sa : {"compilation": 293, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 293, "total_evaluated": 293}
INFO - 01/15/22 02:01:03 - 13:36:19 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.go_sa-rust_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.go_sa-rust_sa.test.txt : 0.120000

INFO - 01/15/22 02:01:05 - 13:36:21 - ========== test java_sa-go_sa example ==========
INFO - 01/15/22 02:01:05 - 13:36:21 - source sent: </s> static int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:01:05 - 13:36:21 - target sent: </s> func areaSquare ( side int ) int { var area int = side * side NEW_LINE return area NEW_LINE } </s>
INFO - 01/15/22 02:01:05 - 13:36:21 - gen sent: </s> func ( m * MockS3API ) ListObjectsPages ( input * ListObjectsInput , fn func ( * ListObjectsOutput , bool ) bool ) error { return nil NEW_LINE } </s>

INFO - 01/15/22 02:01:05 - 13:36:21 - source tok: </s> static int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:01:05 - 13:36:21 - target tok: </s> func area@@ Square ( side int ) int { var area int = side * side NEW_LINE return area NEW_LINE } </s>
INFO - 01/15/22 02:01:05 - 13:36:21 - gen tok: </s> func ( m * Mock@@ S3@@ API ) List@@ Objects@@ Pages ( input * List@@ Objects@@ Input , fn func ( * List@@ Objects@@ Output , bool ) bool ) error { return nil NEW_LINE } </s>

INFO - 01/15/22 02:02:51 - 13:38:06 - Computation res test java_sa go_sa : {"compilation": 309, "error": 11, "failure": 0, "identical_gold": 0, "script_not_found": 10, "success": 0, "timeout": 0, "total": 330, "total_evaluated": 320}
INFO - 01/15/22 02:02:51 - 13:38:07 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.java_sa-go_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.java_sa-go_sa.test.txt : 2.790000

INFO - 01/15/22 02:02:54 - 13:38:09 - ========== test java_sa-rust_sa example ==========
INFO - 01/15/22 02:02:54 - 13:38:09 - source sent: </s> static int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:02:54 - 13:38:09 - target sent: </s> fn areaSquare ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 02:02:54 - 13:38:09 - gen sent: </s> fn test_get_all_keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( Key :: from_raw ( b" a " ) ) ; keys . push ( Key :: from_raw ( b" b " ) ) ; keys . push ( Key :: from_raw ( b" c " ) ) ; keys . push ( Key :: from_raw ( b" d </s>

INFO - 01/15/22 02:02:54 - 13:38:09 - source tok: </s> static int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:02:54 - 13:38:09 - target tok: </s> fn area@@ Square ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 02:02:54 - 13:38:09 - gen tok: </s> fn test_@@ get_@@ all_@@ keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( Key :: from_raw ( b@@ " a " ) ) ; keys . push ( Key :: from_raw ( b@@ " b " ) ) ; keys . push ( Key :: from_raw ( b@@ " c " ) ) ; keys . push ( Key :: from_raw ( b@@ " d </s>

INFO - 01/15/22 02:07:27 - 13:42:42 - Computation res test java_sa rust_sa : {"compilation": 313, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 313, "total_evaluated": 313}
INFO - 01/15/22 02:07:28 - 13:42:43 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.java_sa-rust_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.java_sa-rust_sa.test.txt : 0.160000

INFO - 01/15/22 02:07:30 - 13:42:45 - ========== test rust_sa-cpp_sa example ==========
INFO - 01/15/22 02:07:30 - 13:42:45 - source sent: </s> fn areaSquare ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 02:07:30 - 13:42:45 - target sent: </s> int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:07:30 - 13:42:45 - gen sent: </s> static void _glCopyBufferSubData ( GLenum target , GLenum subdata , GLsizei offset , GLsizei count ) { glCopyBufferSubData ( target , subdata , offset , count , count ) ; } </s>

INFO - 01/15/22 02:07:30 - 13:42:45 - source tok: </s> fn area@@ Square ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 02:07:30 - 13:42:45 - target tok: </s> int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:07:30 - 13:42:45 - gen tok: </s> static void _@@ gl@@ Copy@@ Buffer@@ Sub@@ Data ( GLenum target , GLenum sub@@ data , GLsizei offset , GLsizei count ) { gl@@ Copy@@ Buffer@@ Sub@@ Data ( target , sub@@ data , offset , count , count ) ; } </s>

INFO - 01/15/22 02:15:54 - 13:51:09 - Computation res test rust_sa cpp_sa : {"compilation": 313, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 313, "total_evaluated": 313}
INFO - 01/15/22 02:15:55 - 13:51:10 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.rust_sa-cpp_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.rust_sa-cpp_sa.test.txt : 1.110000

INFO - 01/15/22 02:15:57 - 13:51:12 - ========== test cpp_sa-go_sa example ==========
INFO - 01/15/22 02:15:57 - 13:51:12 - source sent: </s> int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:15:57 - 13:51:12 - target sent: </s> func areaSquare ( side int ) int { var area int = side * side NEW_LINE return area NEW_LINE } </s>
INFO - 01/15/22 02:15:57 - 13:51:12 - gen sent: </s> func ( m * MockS3API ) ListObjectsPages ( input * ListObjectsInput , fn func ( * ListObjectsOutput , bool ) bool ) error { return nil NEW_LINE } </s>

INFO - 01/15/22 02:15:57 - 13:51:12 - source tok: </s> int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:15:57 - 13:51:12 - target tok: </s> func area@@ Square ( side int ) int { var area int = side * side NEW_LINE return area NEW_LINE } </s>
INFO - 01/15/22 02:15:57 - 13:51:12 - gen tok: </s> func ( m * Mock@@ S3@@ API ) List@@ Objects@@ Pages ( input * List@@ Objects@@ Input , fn func ( * List@@ Objects@@ Output , bool ) bool ) error { return nil NEW_LINE } </s>

INFO - 01/15/22 02:18:02 - 13:53:18 - Computation res test cpp_sa go_sa : {"compilation": 315, "error": 5, "failure": 0, "identical_gold": 0, "script_not_found": 10, "success": 0, "timeout": 0, "total": 330, "total_evaluated": 320}
INFO - 01/15/22 02:18:03 - 13:53:18 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.cpp_sa-go_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.cpp_sa-go_sa.test.txt : 2.750000

INFO - 01/15/22 02:18:05 - 13:53:20 - ========== test go_sa-cpp_sa example ==========
INFO - 01/15/22 02:18:05 - 13:53:20 - source sent: </s> func areaSquare ( side int ) int { var area int = side * side NEW_LINE return area NEW_LINE } </s>
INFO - 01/15/22 02:18:05 - 13:53:20 - target sent: </s> int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:18:05 - 13:53:20 - gen sent: </s> static void _printHelp ( ) { cout << " Usage : ▁ " << endl ; cout << " ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ </s>

INFO - 01/15/22 02:18:05 - 13:53:20 - source tok: </s> func area@@ Square ( side int ) int { var area int = side * side NEW_LINE return area NEW_LINE } </s>
INFO - 01/15/22 02:18:05 - 13:53:20 - target tok: </s> int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:18:05 - 13:53:20 - gen tok: </s> static void _@@ print@@ Help ( ) { cout << " Usage : ▁ " << endl ; cout << " ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ </s>

INFO - 01/15/22 02:23:48 - 13:59:03 - Computation res test go_sa cpp_sa : {"compilation": 330, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 330, "total_evaluated": 330}
INFO - 01/15/22 02:23:48 - 13:59:04 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.go_sa-cpp_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.go_sa-cpp_sa.test.txt : 0.520000

INFO - 01/15/22 02:23:49 - 13:59:04 - ========== test go_sa-java_sa example ==========
INFO - 01/15/22 02:23:49 - 13:59:04 - source sent: </s> func areaSquare ( side int ) int { var area int = side * side NEW_LINE return area NEW_LINE } </s>
INFO - 01/15/22 02:23:49 - 13:59:04 - target sent: </s> static int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:23:49 - 13:59:04 - gen sent: </s> public static void main ( String [ ] args ) { new SpringApplication ( new SpringApplication ( SpringApplication . class ) . run ( SpringApplication . class , args ) ) ; } </s>

INFO - 01/15/22 02:23:49 - 13:59:04 - source tok: </s> func area@@ Square ( side int ) int { var area int = side * side NEW_LINE return area NEW_LINE } </s>
INFO - 01/15/22 02:23:49 - 13:59:04 - target tok: </s> static int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:23:49 - 13:59:04 - gen tok: </s> public static void main ( String [ ] args ) { new Spring@@ Application ( new Spring@@ Application ( Spring@@ Application . class ) . run ( Spring@@ Application . class , args ) ) ; } </s>

INFO - 01/15/22 02:26:21 - 14:01:36 - Computation res test go_sa java_sa : {"compilation": 304, "error": 3, "failure": 0, "identical_gold": 0, "script_not_found": 23, "success": 0, "timeout": 0, "total": 330, "total_evaluated": 307}
INFO - 01/15/22 02:26:21 - 14:01:37 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.go_sa-java_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.go_sa-java_sa.test.txt : 3.220000

INFO - 01/15/22 02:26:24 - 14:01:39 - ========== test rust_sa-java_sa example ==========
INFO - 01/15/22 02:26:24 - 14:01:39 - source sent: </s> fn areaSquare ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 02:26:24 - 14:01:39 - target sent: </s> static int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:26:24 - 14:01:39 - gen sent: </s> public static void main ( String [ ] args ) { new SpringApplication ( new SpringApplication ( SpringApplication . class ) . run ( SpringApplication . class , args ) ) ; } </s>

INFO - 01/15/22 02:26:24 - 14:01:39 - source tok: </s> fn area@@ Square ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 02:26:24 - 14:01:39 - target tok: </s> static int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:26:24 - 14:01:39 - gen tok: </s> public static void main ( String [ ] args ) { new Spring@@ Application ( new Spring@@ Application ( Spring@@ Application . class ) . run ( Spring@@ Application . class , args ) ) ; } </s>

INFO - 01/15/22 02:29:26 - 14:04:41 - Computation res test rust_sa java_sa : {"compilation": 291, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 22, "success": 0, "timeout": 0, "total": 313, "total_evaluated": 291}
INFO - 01/15/22 02:29:26 - 14:04:41 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.rust_sa-java_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.rust_sa-java_sa.test.txt : 4.850000

INFO - 01/15/22 02:29:28 - 14:04:43 - ========== test cpp_sa-rust_sa example ==========
INFO - 01/15/22 02:29:28 - 14:04:43 - source sent: </s> int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:29:28 - 14:04:43 - target sent: </s> fn areaSquare ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 02:29:28 - 14:04:43 - gen sent: </s> fn test_get_all_keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( Key :: new ( " a " ) ) ; keys . push ( Key :: new ( " b " ) ) ; keys . push ( Key :: new ( " c " ) ) ; assert_eq ! ( keys . len ( ) , 1 ) </s>

INFO - 01/15/22 02:29:28 - 14:04:43 - source tok: </s> int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:29:28 - 14:04:43 - target tok: </s> fn area@@ Square ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 02:29:28 - 14:04:43 - gen tok: </s> fn test_@@ get_@@ all_@@ keys ( ) { let mut keys = Vec :: new ( ) ; keys . push ( Key :: new ( " a " ) ) ; keys . push ( Key :: new ( " b " ) ) ; keys . push ( Key :: new ( " c " ) ) ; assert_eq ! ( keys . len ( ) , 1 ) </s>

INFO - 01/15/22 02:33:49 - 14:09:04 - Computation res test cpp_sa rust_sa : {"compilation": 313, "error": 0, "failure": 0, "identical_gold": 0, "script_not_found": 0, "success": 0, "timeout": 0, "total": 313, "total_evaluated": 313}
INFO - 01/15/22 02:33:49 - 14:09:05 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.cpp_sa-rust_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.cpp_sa-rust_sa.test.txt : 0.190000

INFO - 01/15/22 02:33:50 - 14:09:05 - ========== test cpp_sa-java_sa example ==========
INFO - 01/15/22 02:33:50 - 14:09:05 - source sent: </s> int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:33:50 - 14:09:06 - target sent: </s> static int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:33:50 - 14:09:06 - gen sent: </s> public static void main ( String [ ] args ) { new SpringApplication ( new SpringApplication ( SpringApplication . class ) . run ( SpringApplication . class , args ) ) ; } </s>

INFO - 01/15/22 02:33:50 - 14:09:06 - source tok: </s> int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:33:50 - 14:09:06 - target tok: </s> static int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 02:33:50 - 14:09:06 - gen tok: </s> public static void main ( String [ ] args ) { new Spring@@ Application ( new Spring@@ Application ( Spring@@ Application . class ) . run ( Spring@@ Application . class , args ) ) ; } </s>

INFO - 01/15/22 02:38:22 - 14:13:37 - Computation res test cpp_sa java_sa : {"compilation": 474, "error": 8, "failure": 0, "identical_gold": 0, "script_not_found": 466, "success": 0, "timeout": 0, "total": 948, "total_evaluated": 482}
INFO - 01/15/22 02:38:23 - 14:13:38 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp1.cpp_sa-java_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.cpp_sa-java_sa.test.txt : 2.200000
INFO - 01/15/22 02:38:23 - 14:13:38 - epoch -> 1.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-cpp_sa_mt_ppl -> 3.176682
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-cpp_sa_mt_acc -> 71.721442
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-cpp_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-cpp_sa_mt_bleu -> 0.470000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-go_sa_mt_ppl -> 3.612284
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-go_sa_mt_acc -> 70.215311
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-go_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-go_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-go_sa_mt_bleu -> 2.280000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-rust_sa_mt_ppl -> 3.946096
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-rust_sa_mt_acc -> 66.859781
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-rust_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-rust_sa_mt_bleu -> 0.140000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-go_sa_mt_ppl -> 3.635036
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-go_sa_mt_acc -> 70.060274
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-go_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-go_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-go_sa_mt_bleu -> 2.880000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-rust_sa_mt_ppl -> 3.920880
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-rust_sa_mt_acc -> 67.046365
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-rust_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_java_sa-rust_sa_mt_bleu -> 0.170000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-cpp_sa_mt_ppl -> 3.174748
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-cpp_sa_mt_acc -> 71.310316
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-cpp_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-cpp_sa_mt_bleu -> 1.080000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-go_sa_mt_ppl -> 3.634637
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-go_sa_mt_acc -> 70.010959
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-go_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-go_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-go_sa_mt_bleu -> 2.940000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-cpp_sa_mt_ppl -> 3.329444
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-cpp_sa_mt_acc -> 70.316043
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-cpp_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-cpp_sa_mt_bleu -> 0.440000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-java_sa_mt_ppl -> 3.215261
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-java_sa_mt_acc -> 70.037530
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-java_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-java_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_go_sa-java_sa_mt_bleu -> 3.410000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-java_sa_mt_ppl -> 3.083237
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-java_sa_mt_acc -> 71.215235
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-java_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-java_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_rust_sa-java_sa_mt_bleu -> 5.730000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-rust_sa_mt_ppl -> 3.919188
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-rust_sa_mt_acc -> 67.029490
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-rust_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-rust_sa_mt_bleu -> 0.160000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-java_sa_mt_ppl -> 2.962136
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-java_sa_mt_acc -> 72.652753
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-java_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-java_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - valid_cpp_sa-java_sa_mt_bleu -> 2.400000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-cpp_sa_mt_ppl -> 3.055167
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-cpp_sa_mt_acc -> 72.292250
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-cpp_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-cpp_sa_mt_bleu -> 0.410000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-go_sa_mt_ppl -> 3.399101
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-go_sa_mt_acc -> 71.286406
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-go_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-go_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-go_sa_mt_bleu -> 1.620000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-rust_sa_mt_ppl -> 3.674979
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-rust_sa_mt_acc -> 68.371997
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-rust_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-rust_sa_mt_bleu -> 0.120000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-go_sa_mt_ppl -> 3.456013
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-go_sa_mt_acc -> 71.150113
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-go_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-go_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-go_sa_mt_bleu -> 2.790000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-rust_sa_mt_ppl -> 3.681378
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-rust_sa_mt_acc -> 68.388065
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-rust_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_java_sa-rust_sa_mt_bleu -> 0.160000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-cpp_sa_mt_ppl -> 3.089980
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-cpp_sa_mt_acc -> 71.911313
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-cpp_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-cpp_sa_mt_bleu -> 1.110000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-go_sa_mt_ppl -> 3.454939
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-go_sa_mt_acc -> 71.131498
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-go_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-go_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-go_sa_mt_bleu -> 2.750000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-cpp_sa_mt_ppl -> 3.211859
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-cpp_sa_mt_acc -> 70.975390
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-cpp_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-cpp_sa_mt_bleu -> 0.520000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-java_sa_mt_ppl -> 3.112535
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-java_sa_mt_acc -> 70.690972
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-java_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-java_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_go_sa-java_sa_mt_bleu -> 3.220000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-java_sa_mt_ppl -> 3.006464
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-java_sa_mt_acc -> 71.639686
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-java_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-java_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_rust_sa-java_sa_mt_bleu -> 4.850000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-rust_sa_mt_ppl -> 3.678993
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-rust_sa_mt_acc -> 68.399324
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-rust_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-rust_sa_mt_bleu -> 0.190000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-java_sa_mt_ppl -> 2.850341
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-java_sa_mt_acc -> 73.355827
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-java_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-java_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 02:38:23 - 14:13:38 - test_cpp_sa-java_sa_mt_bleu -> 2.200000
INFO - 01/15/22 02:38:23 - 14:13:38 - __log__:{"epoch": 1, "valid_java_sa-cpp_sa_mt_ppl": 3.17668203268863, "valid_java_sa-cpp_sa_mt_acc": 71.72144196412778, "valid_java_sa-cpp_sa_mt_comp_acc": 0.0, "valid_java_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-cpp_sa_mt_bleu": 0.47, "valid_rust_sa-go_sa_mt_ppl": 3.612283614810018, "valid_rust_sa-go_sa_mt_acc": 70.2153110047847, "valid_rust_sa-go_sa_mt_comp_acc": 0.0, "valid_rust_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_rust_sa-go_sa_mt_bleu": 2.28, "valid_go_sa-rust_sa_mt_ppl": 3.9460956372920895, "valid_go_sa-rust_sa_mt_acc": 66.85978050963215, "valid_go_sa-rust_sa_mt_comp_acc": 0.0, "valid_go_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-rust_sa_mt_bleu": 0.14, "valid_java_sa-go_sa_mt_ppl": 3.6350355826194947, "valid_java_sa-go_sa_mt_acc": 70.06027397260274, "valid_java_sa-go_sa_mt_comp_acc": 0.0, "valid_java_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-go_sa_mt_bleu": 2.88, "valid_java_sa-rust_sa_mt_ppl": 3.920879525485073, "valid_java_sa-rust_sa_mt_acc": 67.04636543897396, "valid_java_sa-rust_sa_mt_comp_acc": 0.0, "valid_java_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-rust_sa_mt_bleu": 0.17, "valid_rust_sa-cpp_sa_mt_ppl": 3.174748192265601, "valid_rust_sa-cpp_sa_mt_acc": 71.31031555115325, "valid_rust_sa-cpp_sa_mt_comp_acc": 0.0, "valid_rust_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "valid_rust_sa-cpp_sa_mt_bleu": 1.08, "valid_cpp_sa-go_sa_mt_ppl": 3.6346373416280167, "valid_cpp_sa-go_sa_mt_acc": 70.01095890410959, "valid_cpp_sa-go_sa_mt_comp_acc": 0.0, "valid_cpp_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-go_sa_mt_bleu": 2.94, "valid_go_sa-cpp_sa_mt_ppl": 3.329443896633553, "valid_go_sa-cpp_sa_mt_acc": 70.31604308390023, "valid_go_sa-cpp_sa_mt_comp_acc": 0.0, "valid_go_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-cpp_sa_mt_bleu": 0.44, "valid_go_sa-java_sa_mt_ppl": 3.2152610234233245, "valid_go_sa-java_sa_mt_acc": 70.0375298532924, "valid_go_sa-java_sa_mt_comp_acc": 0.0, "valid_go_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-java_sa_mt_bleu": 3.41, "valid_rust_sa-java_sa_mt_ppl": 3.083237480409823, "valid_rust_sa-java_sa_mt_acc": 71.21523496369366, "valid_rust_sa-java_sa_mt_comp_acc": 0.0, "valid_rust_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_rust_sa-java_sa_mt_bleu": 5.73, "valid_cpp_sa-rust_sa_mt_ppl": 3.919187758498063, "valid_cpp_sa-rust_sa_mt_acc": 67.02948993798253, "valid_cpp_sa-rust_sa_mt_comp_acc": 0.0, "valid_cpp_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-rust_sa_mt_bleu": 0.16, "valid_cpp_sa-java_sa_mt_ppl": 2.962136158538105, "valid_cpp_sa-java_sa_mt_acc": 72.65275341410234, "valid_cpp_sa-java_sa_mt_comp_acc": 0.0, "valid_cpp_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-java_sa_mt_bleu": 2.4, "test_java_sa-cpp_sa_mt_ppl": 3.0551671382577874, "test_java_sa-cpp_sa_mt_acc": 72.29224983256341, "test_java_sa-cpp_sa_mt_comp_acc": 0.0, "test_java_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "test_java_sa-cpp_sa_mt_bleu": 0.41, "test_rust_sa-go_sa_mt_ppl": 3.399101273613141, "test_rust_sa-go_sa_mt_acc": 71.2864055509906, "test_rust_sa-go_sa_mt_comp_acc": 0.0, "test_rust_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "test_rust_sa-go_sa_mt_bleu": 1.62, "test_go_sa-rust_sa_mt_ppl": 3.674978810342386, "test_go_sa-rust_sa_mt_acc": 68.37199711310444, "test_go_sa-rust_sa_mt_comp_acc": 0.0, "test_go_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "test_go_sa-rust_sa_mt_bleu": 0.12, "test_java_sa-go_sa_mt_ppl": 3.4560131120969855, "test_java_sa-go_sa_mt_acc": 71.15011301688605, "test_java_sa-go_sa_mt_comp_acc": 0.0, "test_java_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "test_java_sa-go_sa_mt_bleu": 2.79, "test_java_sa-rust_sa_mt_ppl": 3.6813781190455823, "test_java_sa-rust_sa_mt_acc": 68.38806530305874, "test_java_sa-rust_sa_mt_comp_acc": 0.0, "test_java_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "test_java_sa-rust_sa_mt_bleu": 0.16, "test_rust_sa-cpp_sa_mt_ppl": 3.0899795397740606, "test_rust_sa-cpp_sa_mt_acc": 71.91131294243355, "test_rust_sa-cpp_sa_mt_comp_acc": 0.0, "test_rust_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "test_rust_sa-cpp_sa_mt_bleu": 1.11, "test_cpp_sa-go_sa_mt_ppl": 3.4549387586900866, "test_cpp_sa-go_sa_mt_acc": 71.13149847094802, "test_cpp_sa-go_sa_mt_comp_acc": 0.0, "test_cpp_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "test_cpp_sa-go_sa_mt_bleu": 2.75, "test_go_sa-cpp_sa_mt_ppl": 3.211858783661112, "test_go_sa-cpp_sa_mt_acc": 70.97538985541122, "test_go_sa-cpp_sa_mt_comp_acc": 0.0, "test_go_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "test_go_sa-cpp_sa_mt_bleu": 0.52, "test_go_sa-java_sa_mt_ppl": 3.1125354053646146, "test_go_sa-java_sa_mt_acc": 70.6909715594579, "test_go_sa-java_sa_mt_comp_acc": 0.0, "test_go_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "test_go_sa-java_sa_mt_bleu": 3.22, "test_rust_sa-java_sa_mt_ppl": 3.0064643923341365, "test_rust_sa-java_sa_mt_acc": 71.63968584709087, "test_rust_sa-java_sa_mt_comp_acc": 0.0, "test_rust_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "test_rust_sa-java_sa_mt_bleu": 4.85, "test_cpp_sa-rust_sa_mt_ppl": 3.6789933038964167, "test_cpp_sa-rust_sa_mt_acc": 68.39932445111653, "test_cpp_sa-rust_sa_mt_comp_acc": 0.0, "test_cpp_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "test_cpp_sa-rust_sa_mt_bleu": 0.19, "test_cpp_sa-java_sa_mt_ppl": 2.8503411699241887, "test_cpp_sa-java_sa_mt_acc": 73.35582720283202, "test_cpp_sa-java_sa_mt_comp_acc": 0.0, "test_cpp_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "test_cpp_sa-java_sa_mt_bleu": 2.2}
INFO - 01/15/22 02:38:23 - 14:13:38 - Not a better validation score (0 / 30).
INFO - 01/15/22 02:38:23 - 14:13:38 - Saving checkpoint to /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/checkpoint.pth ...
WARNING - 01/15/22 02:38:23 - 14:13:38 - Saving encoder parameters ...
WARNING - 01/15/22 02:38:23 - 14:13:38 - Saving decoder parameters ...
WARNING - 01/15/22 02:38:23 - 14:13:38 - Saving model optimizer ...
INFO - 01/15/22 02:38:35 - 14:13:51 - ============ Starting epoch 2 ... ============

INFO - 01/15/22 02:38:35 - 14:13:51 - ========== Train java_sa-java_sa example ==========
INFO - 01/15/22 09:23:00 - 20:58:15 - test_cpp_sa-java_sa_mt_bleu -> 12.290000
INFO - 01/15/22 09:23:00 - 20:58:15 - __log__:{"epoch": 2, "valid_java_sa-cpp_sa_mt_ppl": 3.0791241904214712, "valid_java_sa-cpp_sa_mt_acc": 72.722609403191, "valid_java_sa-cpp_sa_mt_comp_acc": 0.0, "valid_java_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-cpp_sa_mt_bleu": 1.35, "valid_rust_sa-go_sa_mt_ppl": 3.50276225917409, "valid_rust_sa-go_sa_mt_acc": 70.8133971291866, "valid_rust_sa-go_sa_mt_comp_acc": 0.0, "valid_rust_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_rust_sa-go_sa_mt_bleu": 2.96, "valid_go_sa-rust_sa_mt_ppl": 3.795069018299155, "valid_go_sa-rust_sa_mt_acc": 68.0844048796571, "valid_go_sa-rust_sa_mt_comp_acc": 0.0, "valid_go_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-rust_sa_mt_bleu": 0.14, "valid_java_sa-go_sa_mt_ppl": 3.5271606688833743, "valid_java_sa-go_sa_mt_acc": 70.68493150684931, "valid_java_sa-go_sa_mt_comp_acc": 0.0, "valid_java_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-go_sa_mt_bleu": 2.68, "valid_java_sa-rust_sa_mt_ppl": 3.762136002730743, "valid_java_sa-rust_sa_mt_acc": 68.2656203856052, "valid_java_sa-rust_sa_mt_comp_acc": 0.0, "valid_java_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-rust_sa_mt_bleu": 0.15, "valid_rust_sa-cpp_sa_mt_ppl": 3.071090866124792, "valid_rust_sa-cpp_sa_mt_acc": 72.4352624876185, "valid_rust_sa-cpp_sa_mt_comp_acc": 0.0, "valid_rust_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "valid_rust_sa-cpp_sa_mt_bleu": 1.62, "valid_cpp_sa-go_sa_mt_ppl": 3.5263366348552103, "valid_cpp_sa-go_sa_mt_acc": 70.67945205479452, "valid_cpp_sa-go_sa_mt_comp_acc": 0.0, "valid_cpp_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-go_sa_mt_bleu": 2.64, "valid_go_sa-cpp_sa_mt_ppl": 3.2307927952513014, "valid_go_sa-cpp_sa_mt_acc": 71.07426303854875, "valid_go_sa-cpp_sa_mt_comp_acc": 0.0, "valid_go_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-cpp_sa_mt_bleu": 1.45, "valid_go_sa-java_sa_mt_ppl": 3.111004748606183, "valid_go_sa-java_sa_mt_acc": 70.99965881951552, "valid_go_sa-java_sa_mt_comp_acc": 0.0, "valid_go_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-java_sa_mt_bleu": 8.06, "valid_rust_sa-java_sa_mt_ppl": 2.969618701098601, "valid_rust_sa-java_sa_mt_acc": 72.22222222222223, "valid_rust_sa-java_sa_mt_comp_acc": 0.0, "valid_rust_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_rust_sa-java_sa_mt_bleu": 8.41, "valid_cpp_sa-rust_sa_mt_ppl": 3.7606803710160426, "valid_cpp_sa-rust_sa_mt_acc": 68.26983926085306, "valid_cpp_sa-rust_sa_mt_comp_acc": 0.0, "valid_cpp_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-rust_sa_mt_bleu": 0.16, "valid_cpp_sa-java_sa_mt_ppl": 2.8588014203400514, "valid_cpp_sa-java_sa_mt_acc": 73.72001901732872, "valid_cpp_sa-java_sa_mt_comp_acc": 0.0, "valid_cpp_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-java_sa_mt_bleu": 11.61, "test_java_sa-cpp_sa_mt_ppl": 2.956989980092236, "test_java_sa-cpp_sa_mt_acc": 73.333791279559, "test_java_sa-cpp_sa_mt_comp_acc": 0.0, "test_java_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "test_java_sa-cpp_sa_mt_bleu": 1.35, "test_rust_sa-go_sa_mt_ppl": 3.305036696051308, "test_rust_sa-go_sa_mt_acc": 72.01375574424054, "test_rust_sa-go_sa_mt_comp_acc": 0.0, "test_rust_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "test_rust_sa-go_sa_mt_bleu": 2.66, "test_go_sa-rust_sa_mt_ppl": 3.53828876103418, "test_go_sa-rust_sa_mt_acc": 69.51644499432932, "test_go_sa-rust_sa_mt_comp_acc": 0.0, "test_go_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "test_go_sa-rust_sa_mt_bleu": 0.12, "test_java_sa-go_sa_mt_ppl": 3.362328806283288, "test_java_sa-go_sa_mt_acc": 71.76705225368967, "test_java_sa-go_sa_mt_comp_acc": 0.0, "test_java_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "test_java_sa-go_sa_mt_bleu": 2.43, "test_java_sa-rust_sa_mt_ppl": 3.5471039704055563, "test_java_sa-rust_sa_mt_acc": 69.48395571401764, "test_java_sa-rust_sa_mt_comp_acc": 0.0, "test_java_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "test_java_sa-rust_sa_mt_bleu": 0.17, "test_rust_sa-cpp_sa_mt_ppl": 2.9932033285469846, "test_rust_sa-cpp_sa_mt_acc": 72.89301455856818, "test_rust_sa-cpp_sa_mt_comp_acc": 0.0, "test_rust_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "test_rust_sa-cpp_sa_mt_bleu": 2.11, "test_cpp_sa-go_sa_mt_ppl": 3.362944004909721, "test_cpp_sa-go_sa_mt_acc": 71.788326020476, "test_cpp_sa-go_sa_mt_comp_acc": 0.0, "test_cpp_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "test_cpp_sa-go_sa_mt_bleu": 2.39, "test_go_sa-cpp_sa_mt_ppl": 3.1144711090034733, "test_go_sa-cpp_sa_mt_acc": 71.94710655491367, "test_go_sa-cpp_sa_mt_comp_acc": 0.0, "test_go_sa-cpp_samt_comp_acc_contrib_beam_0": 0.0, "test_go_sa-cpp_sa_mt_bleu": 1.37, "test_go_sa-java_sa_mt_ppl": 2.996226013819444, "test_go_sa-java_sa_mt_acc": 71.69307119679328, "test_go_sa-java_sa_mt_comp_acc": 0.0, "test_go_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "test_go_sa-java_sa_mt_bleu": 9.07, "test_rust_sa-java_sa_mt_ppl": 2.8889154383047675, "test_rust_sa-java_sa_mt_acc": 72.55329379708287, "test_rust_sa-java_sa_mt_comp_acc": 0.0, "test_rust_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "test_rust_sa-java_sa_mt_bleu": 8.82, "test_cpp_sa-rust_sa_mt_ppl": 3.54683571635533, "test_cpp_sa-rust_sa_mt_acc": 69.47832613998874, "test_cpp_sa-rust_sa_mt_comp_acc": 0.0, "test_cpp_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "test_cpp_sa-rust_sa_mt_bleu": 0.17, "test_cpp_sa-java_sa_mt_ppl": 2.746135181118852, "test_cpp_sa-java_sa_mt_acc": 74.38148443735037, "test_cpp_sa-java_sa_mt_comp_acc": 0.0, "test_cpp_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "test_cpp_sa-java_sa_mt_bleu": 12.29}
INFO - 01/15/22 09:23:00 - 20:58:15 - Not a better validation score (1 / 30).
INFO - 01/15/22 09:23:00 - 20:58:15 - Saving checkpoint to /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/checkpoint.pth ...
WARNING - 01/15/22 09:23:00 - 20:58:15 - Saving encoder parameters ...
WARNING - 01/15/22 09:23:00 - 20:58:15 - Saving decoder parameters ...
WARNING - 01/15/22 09:23:00 - 20:58:15 - Saving model optimizer ...
INFO - 01/15/22 09:23:13 - 20:58:28 - ============ Starting epoch 3 ... ============

INFO - 01/15/22 09:23:13 - 20:58:28 - ========== Train java_sa-java_sa example ==========
INFO - 01/15/22 09:23:13 - 20:58:28 - source sent: </s> ServerSocket static <special1> Socket getServer( NBDConfig nbd) throws <special1> nbIOException <special1> Config d. Socket is) Unix<special1> <special1> ) unix= File Socket <special1> dConfig <special1> get) ( <special1> <special1> unix<special1> <special1> <special1> <special1> ( unixSocket . ) <special1> <special1> <special1> Socket <special1> delete ( . } ; <special1> IXSocketAddress addr new <special1> = <special1> IXSocketAddress ( <special1> Socket unixFUNServerSocket return A. bindIXOn ( ) addr ; <special1> { return ServerSocket <special1> <special1> nb. TcpConfig Port ) <special1> <special1> } </s>
INFO - 01/15/22 09:23:13 - 20:58:28 - target sent: </s> private static ServerSocket getServerSocket ( NBDConfig nbdConfig ) throws IOException { if ( nbdConfig . isEnableUnixSocket ( ) ) { File unixSocket = nbdConfig . getUnixSocket ( ) ; unixSocket . mkdirs ( ) ; if ( unixSocket . exists ( ) ) { unixSocket . delete ( ) ; } AFUNIXSocketAddress addr = new AFUNIXSocketAddress ( unixSocket ) ; return AFUNIXServerSocket . bindOn ( addr ) ; } else { return new ServerSocket ( nbdConfig . getTcpPort ( ) ) ; } } </s>

INFO - 01/15/22 09:23:13 - 20:58:28 - source tok: </s> ServerSocket static <special1> Socket getServer@@ ( NB@@ D@@ Config nb@@ d@@ ) throws <special1> nb@@ IOException <special1> Config d@@ . Socket is@@ ) Unix@@ <special1> <special1> ) unix@@ = File Socket <special1> d@@ Config <special1> get@@ ) ( <special1> <special1> unix@@ <special1> <special1> <special1> <special1> ( unix@@ Socket . ) <special1> <special1> <special1> Socket <special1> delete ( . } ; <special1> IX@@ SocketAddress addr new <special1> = <special1> IX@@ SocketAddress ( <special1> Socket unix@@ FUN@@ ServerSocket return A@@ . bind@@ IX@@ On ( ) addr ; <special1> { return ServerSocket <special1> <special1> nb@@ . Tcp@@ Config Port ) <special1> <special1> } </s>
INFO - 01/15/22 09:23:13 - 20:58:28 - target tok: </s> private static ServerSocket getServer@@ Socket ( NB@@ D@@ Config nb@@ d@@ Config ) throws IOException { if ( nb@@ d@@ Config . is@@ Enable@@ Unix@@ Socket ( ) ) { File unix@@ Socket = nb@@ d@@ Config . get@@ Unix@@ Socket ( ) ; unix@@ Socket . mkdirs ( ) ; if ( unix@@ Socket . exists ( ) ) { unix@@ Socket . delete ( ) ; } A@@ FUN@@ IX@@ SocketAddress addr = new A@@ FUN@@ IX@@ SocketAddress ( unix@@ Socket ) ; return A@@ FUN@@ IX@@ ServerSocket . bind@@ On ( addr ) ; } else { return new ServerSocket ( nb@@ d@@ Config . get@@ Tcp@@ Port ( ) ) ; } } </s>
INFO - 01/15/22 16:49:10 - 1 day, 4:24:25 - gen tok: </s> public static int area@@ Square ( int side ) { return ( side & ( 1 << side ) ) ; } </s>

INFO - 01/15/22 16:59:04 - 1 day, 4:34:20 - Computation res test rust_sa java_sa : {"compilation": 219, "error": 8, "failure": 52, "identical_gold": 0, "script_not_found": 22, "success": 5, "timeout": 7, "total": 313, "total_evaluated": 291}
INFO - 01/15/22 16:59:05 - 1 day, 4:34:20 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp3.rust_sa-java_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.rust_sa-java_sa.test.txt : 7.820000

INFO - 01/15/22 16:59:06 - 1 day, 4:34:21 - ========== test cpp_sa-rust_sa example ==========
INFO - 01/15/22 16:59:06 - 1 day, 4:34:21 - source sent: </s> int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 16:59:06 - 1 day, 4:34:21 - target sent: </s> fn areaSquare ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 16:59:06 - 1 day, 4:34:21 - gen sent: </s> fn area_squared ( side : usize ) -> usize { let area = side * side ; area } </s>

INFO - 01/15/22 16:59:06 - 1 day, 4:34:21 - source tok: </s> int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 16:59:06 - 1 day, 4:34:21 - target tok: </s> fn area@@ Square ( mut side : i32 ) -> i32 { let mut area : i32 = side * side ; return area ; } </s>
INFO - 01/15/22 16:59:06 - 1 day, 4:34:21 - gen tok: </s> fn area@@ _squ@@ ared ( side : usize ) -> usize { let area = side * side ; area } </s>

INFO - 01/15/22 17:03:30 - 1 day, 4:38:45 - Computation res test cpp_sa rust_sa : {"compilation": 300, "error": 1, "failure": 9, "identical_gold": 0, "script_not_found": 0, "success": 3, "timeout": 0, "total": 313, "total_evaluated": 313}
INFO - 01/15/22 17:03:30 - 1 day, 4:38:45 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp3.cpp_sa-rust_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.cpp_sa-rust_sa.test.txt : 8.410000

INFO - 01/15/22 17:03:32 - 1 day, 4:38:47 - ========== test cpp_sa-java_sa example ==========
INFO - 01/15/22 17:03:32 - 1 day, 4:38:47 - source sent: </s> int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 17:03:32 - 1 day, 4:38:47 - target sent: </s> static int areaSquare ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 17:03:32 - 1 day, 4:38:47 - gen sent: </s> public static int areaSquare ( int side ) { int area = side * side ; return area ; } </s>

INFO - 01/15/22 17:03:32 - 1 day, 4:38:47 - source tok: </s> int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 17:03:32 - 1 day, 4:38:47 - target tok: </s> static int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>
INFO - 01/15/22 17:03:32 - 1 day, 4:38:47 - gen tok: </s> public static int area@@ Square ( int side ) { int area = side * side ; return area ; } </s>

INFO - 01/15/22 17:19:48 - 1 day, 4:55:04 - Computation res test cpp_sa java_sa : {"compilation": 301, "error": 22, "failure": 142, "identical_gold": 1, "script_not_found": 466, "success": 16, "timeout": 1, "total": 948, "total_evaluated": 482}
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - BLEU /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/hyp3.cpp_sa-java_sa.test_beam0.txt /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/hypotheses/ref.cpp_sa-java_sa.test.txt : 23.020000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - epoch -> 3.000000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-cpp_sa_mt_ppl -> 1.790085
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-cpp_sa_mt_acc -> 82.950083
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-cpp_sa_mt_comp_acc -> 0.021645
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.021645
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-cpp_sa_mt_bleu -> 14.770000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_rust_sa-go_sa_mt_ppl -> 2.278264
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_rust_sa-go_sa_mt_acc -> 78.242256
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_rust_sa-go_sa_mt_comp_acc -> 0.007092
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_rust_sa-go_samt_comp_acc_contrib_beam_0 -> 0.007092
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_rust_sa-go_sa_mt_bleu -> 11.780000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_go_sa-rust_sa_mt_ppl -> 2.771838
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_go_sa-rust_sa_mt_acc -> 73.171306
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_go_sa-rust_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_go_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_go_sa-rust_sa_mt_bleu -> 9.720000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-go_sa_mt_ppl -> 2.202181
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-go_sa_mt_acc -> 79.232877
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-go_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-go_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-go_sa_mt_bleu -> 26.700000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-rust_sa_mt_ppl -> 2.789793
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-rust_sa_mt_acc -> 72.708096
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-rust_sa_mt_comp_acc -> 0.000000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.000000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_java_sa-rust_sa_mt_bleu -> 9.680000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_rust_sa-cpp_sa_mt_ppl -> 1.907387
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_rust_sa-cpp_sa_mt_acc -> 80.748550
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_rust_sa-cpp_sa_mt_comp_acc -> 0.006623
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - valid_rust_sa-cpp_samt_comp_acc_contrib_beam_0 -> 0.006623
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_rust_sa-java_sa_mt_comp_acc -> 0.017182
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_rust_sa-java_samt_comp_acc_contrib_beam_0 -> 0.017182
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_rust_sa-java_sa_mt_bleu -> 7.820000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-rust_sa_mt_ppl -> 2.713123
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-rust_sa_mt_acc -> 73.602927
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-rust_sa_mt_comp_acc -> 0.009585
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-rust_samt_comp_acc_contrib_beam_0 -> 0.009585
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-rust_sa_mt_bleu -> 8.410000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-java_sa_mt_ppl -> 1.727158
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-java_sa_mt_acc -> 83.625042
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-java_sa_mt_comp_acc -> 0.033195
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-java_samt_comp_acc_contrib_beam_0 -> 0.033195
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - test_cpp_sa-java_sa_mt_bleu -> 23.020000
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - __log__:{"epoch": 3, "valid_java_sa-cpp_sa_mt_ppl": 1.7900852083761438, "valid_java_sa-cpp_sa_mt_acc": 82.95008313581208, "valid_java_sa-cpp_sa_mt_comp_acc": 0.021645021645021644, "valid_java_sa-cpp_samt_comp_acc_contrib_beam_0": 0.021645021645021644, "valid_java_sa-cpp_sa_mt_bleu": 14.77, "valid_rust_sa-go_sa_mt_ppl": 2.2782635809037135, "valid_rust_sa-go_sa_mt_acc": 78.24225635859985, "valid_rust_sa-go_sa_mt_comp_acc": 0.0070921985815602835, "valid_rust_sa-go_samt_comp_acc_contrib_beam_0": 0.0070921985815602835, "valid_rust_sa-go_sa_mt_bleu": 11.78, "valid_go_sa-rust_sa_mt_ppl": 2.7718376321423612, "valid_go_sa-rust_sa_mt_acc": 73.17130610899157, "valid_go_sa-rust_sa_mt_comp_acc": 0.0, "valid_go_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-rust_sa_mt_bleu": 9.72, "valid_java_sa-go_sa_mt_ppl": 2.202180637421665, "valid_java_sa-go_sa_mt_acc": 79.23287671232876, "valid_java_sa-go_sa_mt_comp_acc": 0.0, "valid_java_sa-go_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-go_sa_mt_bleu": 26.7, "valid_java_sa-rust_sa_mt_ppl": 2.7897927818884107, "valid_java_sa-rust_sa_mt_acc": 72.70809602160064, "valid_java_sa-rust_sa_mt_comp_acc": 0.0, "valid_java_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_java_sa-rust_sa_mt_bleu": 9.68, "valid_rust_sa-cpp_sa_mt_ppl": 1.9073872409808208, "valid_rust_sa-cpp_sa_mt_acc": 80.74854959671714, "valid_rust_sa-cpp_sa_mt_comp_acc": 0.006622516556291391, "valid_rust_sa-cpp_samt_comp_acc_contrib_beam_0": 0.006622516556291391, "valid_rust_sa-cpp_sa_mt_bleu": 6.86, "valid_cpp_sa-go_sa_mt_ppl": 2.196401617303988, "valid_cpp_sa-go_sa_mt_acc": 79.36438356164383, "valid_cpp_sa-go_sa_mt_comp_acc": 0.006369426751592357, "valid_cpp_sa-go_samt_comp_acc_contrib_beam_0": 0.006369426751592357, "valid_cpp_sa-go_sa_mt_bleu": 28.44, "valid_go_sa-cpp_sa_mt_ppl": 1.770976811918028, "valid_go_sa-cpp_sa_mt_acc": 82.87981859410431, "valid_go_sa-cpp_sa_mt_comp_acc": 0.031055900621118012, "valid_go_sa-cpp_samt_comp_acc_contrib_beam_0": 0.031055900621118012, "valid_go_sa-cpp_sa_mt_bleu": 17.33, "valid_go_sa-java_sa_mt_ppl": 1.779903296262398, "valid_go_sa-java_sa_mt_acc": 82.31320368474923, "valid_go_sa-java_sa_mt_comp_acc": 0.0, "valid_go_sa-java_samt_comp_acc_contrib_beam_0": 0.0, "valid_go_sa-java_sa_mt_bleu": 18.27, "valid_rust_sa-java_sa_mt_ppl": 1.8778087013550147, "valid_rust_sa-java_sa_mt_acc": 81.12755171941362, "valid_rust_sa-java_sa_mt_comp_acc": 0.007246376811594203, "valid_rust_sa-java_samt_comp_acc_contrib_beam_0": 0.007246376811594203, "valid_rust_sa-java_sa_mt_bleu": 8.92, "valid_cpp_sa-rust_sa_mt_ppl": 2.7780209472581734, "valid_cpp_sa-rust_sa_mt_acc": 72.89372653250643, "valid_cpp_sa-rust_sa_mt_comp_acc": 0.0, "valid_cpp_sa-rust_samt_comp_acc_contrib_beam_0": 0.0, "valid_cpp_sa-rust_sa_mt_bleu": 9.82, "valid_cpp_sa-java_sa_mt_ppl": 1.7379973158328137, "valid_cpp_sa-java_sa_mt_acc": 83.56476548026953, "valid_cpp_sa-java_sa_mt_comp_acc": 0.01702127659574468, "valid_cpp_sa-java_samt_comp_acc_contrib_beam_0": 0.01702127659574468, "valid_cpp_sa-java_sa_mt_bleu": 22.73, "test_java_sa-cpp_sa_mt_ppl": 1.7740499150962754, "test_java_sa-cpp_sa_mt_acc": 83.17734540021638, "test_java_sa-cpp_sa_mt_comp_acc": 0.02569593147751606, "test_java_sa-cpp_samt_comp_acc_contrib_beam_0": 0.02569593147751606, "test_java_sa-cpp_sa_mt_bleu": 15.13, "test_rust_sa-go_sa_mt_ppl": 2.200430723886675, "test_rust_sa-go_sa_mt_acc": 79.18378526431115, "test_rust_sa-go_sa_mt_comp_acc": 0.020477815699658702, "test_rust_sa-go_samt_comp_acc_contrib_beam_0": 0.020477815699658702, "test_rust_sa-go_sa_mt_bleu": 9.29, "test_go_sa-rust_sa_mt_ppl": 2.692835651289511, "test_go_sa-rust_sa_mt_acc": 73.82410557789463, "test_go_sa-rust_sa_mt_comp_acc": 0.020477815699658702, "test_go_sa-rust_samt_comp_acc_contrib_beam_0": 0.020477815699658702, "test_go_sa-rust_sa_mt_bleu": 8.79, "test_java_sa-go_sa_mt_ppl": 2.101629087614995, "test_java_sa-go_sa_mt_acc": 80.1888046802287, "test_java_sa-go_sa_mt_comp_acc": 0.03125, "test_java_sa-go_samt_comp_acc_contrib_beam_0": 0.03125, "test_java_sa-go_sa_mt_bleu": 24.33, "test_java_sa-rust_sa_mt_ppl": 2.7238239395174824, "test_java_sa-rust_sa_mt_acc": 73.43779320698067, "test_java_sa-rust_sa_mt_comp_acc": 0.009584664536741214, "test_java_sa-rust_samt_comp_acc_contrib_beam_0": 0.009584664536741214, "test_java_sa-rust_sa_mt_bleu": 8.12, "test_rust_sa-cpp_sa_mt_ppl": 1.9234121278477585, "test_rust_sa-cpp_sa_mt_acc": 80.84012287965807, "test_rust_sa-cpp_sa_mt_comp_acc": 0.022364217252396165, "test_rust_sa-cpp_samt_comp_acc_contrib_beam_0": 0.022364217252396165, "test_rust_sa-cpp_sa_mt_bleu": 6.19, "test_cpp_sa-go_sa_mt_ppl": 2.0849024385222914, "test_cpp_sa-go_sa_mt_acc": 80.49461507778221, "test_cpp_sa-go_sa_mt_comp_acc": 0.034375, "test_cpp_sa-go_samt_comp_acc_contrib_beam_0": 0.034375, "test_cpp_sa-go_sa_mt_bleu": 25.23, "test_go_sa-cpp_sa_mt_ppl": 1.731073580296595, "test_go_sa-cpp_sa_mt_acc": 83.43740608408187, "test_go_sa-cpp_sa_mt_comp_acc": 0.03333333333333333, "test_go_sa-cpp_samt_comp_acc_contrib_beam_0": 0.03333333333333333, "test_go_sa-cpp_sa_mt_bleu": 16.26, "test_go_sa-java_sa_mt_ppl": 1.7637850486988553, "test_go_sa-java_sa_mt_acc": 82.43303429407648, "test_go_sa-java_sa_mt_comp_acc": 0.026058631921824105, "test_go_sa-java_samt_comp_acc_contrib_beam_0": 0.026058631921824105, "test_go_sa-java_sa_mt_bleu": 19.63, "test_rust_sa-java_sa_mt_ppl": 1.9232806988469247, "test_rust_sa-java_sa_mt_acc": 80.94887001121975, "test_rust_sa-java_sa_mt_comp_acc": 0.01718213058419244, "test_rust_sa-java_samt_comp_acc_contrib_beam_0": 0.01718213058419244, "test_rust_sa-java_sa_mt_bleu": 7.82, "test_cpp_sa-rust_sa_mt_ppl": 2.7131226439199123, "test_cpp_sa-rust_sa_mt_acc": 73.60292737849502, "test_cpp_sa-rust_sa_mt_comp_acc": 0.009584664536741214, "test_cpp_sa-rust_samt_comp_acc_contrib_beam_0": 0.009584664536741214, "test_cpp_sa-rust_sa_mt_bleu": 8.41, "test_cpp_sa-java_sa_mt_ppl": 1.727157733310322, "test_cpp_sa-java_sa_mt_acc": 83.62504247232386, "test_cpp_sa-java_sa_mt_comp_acc": 0.03319502074688797, "test_cpp_sa-java_samt_comp_acc_contrib_beam_0": 0.03319502074688797, "test_cpp_sa-java_sa_mt_bleu": 23.02}
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - New best score for valid_java_sa-cpp_sa_mt_comp_acc: 0.021645
INFO - 01/15/22 17:19:49 - 1 day, 4:55:05 - Saving best-valid_java_sa-cpp_sa_mt_comp_acc to /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/best-valid_java_sa-cpp_sa_mt_comp_acc.pth ...
WARNING - 01/15/22 17:19:49 - 1 day, 4:55:05 - Saving encoder parameters ...
WARNING - 01/15/22 17:19:49 - 1 day, 4:55:05 - Saving decoder parameters ...
INFO - 01/15/22 17:19:54 - 1 day, 4:55:09 - New best validation score: 0.021645
INFO - 01/15/22 17:19:54 - 1 day, 4:55:09 - Saving checkpoint to /checkpoint/broz/dumped/transcoder_cpp_java_go_rust_eval_new_transcoder_eval_from_tlm_new_init_32_gpus_2/52150003/checkpoint.pth ...
WARNING - 01/15/22 17:19:54 - 1 day, 4:55:09 - Saving encoder parameters ...
WARNING - 01/15/22 17:19:54 - 1 day, 4:55:09 - Saving decoder parameters ...
WARNING - 01/15/22 17:19:54 - 1 day, 4:55:09 - Saving model optimizer ...
INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - ============ Starting epoch 4 ... ============

INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - ========== Train java_sa-java_sa example ==========
INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - source sent: </s> /* <special1> * ▁ ▁ * a Creuna <special1> ▁ ▁ cia ▁ ▁ la ▁ de struce▁ <special1> <special1> <special1> dat<special1> recibos ▁ or id<special1> ▁ DDS ▁ * <special1> <special1> STRNEWLINE * ▁ STRNEWLINE <special1> param ▁ <special1> tura Estrucde ▁ os datrec▁ ida ib<special1> STRNEWLINE ▁ return @ ▁ <special1> N<special1> ue<special1> STRNEWLINE instan. */ static public ▁ osFrom<special1> o ( Dfinal <special1> Data Dynamic<special1> <special1> o Nin{ osdatnew = os o DatNin<special1> <special1> <special1> datos . cal<special1> = ad . sample get_( " caldouble ad Dynamicid" Data , . MEMBER_<special1> UNSPECIFIED ) os dat<special1> . . = sample get_<special1> ( " " <special1> DynamicMEMBER_, . ID_Data ) <special1> ; datos <special1> . sample = Id get_. " ( <special1> cam<special1> , " Dynamic. MEMBER_<special1> ; ) UNSPECIFIED <special1> <special1> sala <special1> . get_= <special1> string " <special1> a <special1> <special1> DynamicData . <special1> <special1> ) UNSPECIFIED datos ; <special1> sa. W sample = <special1> ( double <special1> sala, W " DynamicID_MEMBER_Data UNSPECIFIED <special1> ; os <special1> <special1> laL sa= sample . " sa( L " <special1> Data MEMBER_ID_<special1> ; UNSPECIFIED dat) posX os = sample <special1> . get_<special1> ( double <special1> <special1> , Data MEMBER_Dynamic. ) ID_; UNSPECIFIED . os dat. = posY get_<special1> double " ( " Dynamic<special1> ID_. <special1> ; ) os . <special1> = nombre sample get_string ( <special1> " , " <special1> Dynamic. ) UNSPECIFIED ID_; datdo = <special1> . sample get_string <special1> apo" <special1> do , " Dynamic. Data <special1> ; MEMBER_ID_dat) return <special1> <special1> } </s>
INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - target sent: </s> /* * STRNEWLINE ▁ * ▁ Crea ▁ una ▁ instancia ▁ de ▁ la ▁ estructura ▁ leyendo ▁ datos ▁ recibidos ▁ por ▁ DDS . STRNEWLINE ▁ * STRNEWLINE ▁ * ▁ @ param ▁ sample ▁ Estructura ▁ de ▁ datos ▁ recibida . STRNEWLINE ▁ * ▁ @ return ▁ Nueva ▁ instancia . STRNEWLINE ▁ */ public static DatosNino FromDds ( final DynamicData sample ) { DatosNino datos = new DatosNino ( ) ; datos . calidad = sample . get_double ( " calidad " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; datos . id = sample . get_string ( " id " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; datos . camId = sample . get_string ( " camId " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; datos . sala = sample . get_string ( " sala " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; datos . salaW = sample . get_double ( " salaW " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; datos . salaL = sample . get_double ( " salaL " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; datos . posX = sample . get_double ( " posX " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; datos . posY = sample . get_double ( " posY " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; datos . nombre = sample . get_string ( " nombre " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; datos . apodo = sample . get_string ( " apodo " , DynamicData . MEMBER_ID_UNSPECIFIED ) ; return datos ; } </s>

INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - source tok: </s> /* <special1> * ▁ ▁ * a Cre@@ una <special1> ▁ ▁ cia ▁ ▁ la ▁ de struc@@ e@@ ▁ <special1> <special1> <special1> dat@@ <special1> rec@@ ib@@ os ▁ or id@@ <special1> ▁ DDS ▁ * <special1> <special1> STRNEWLINE * ▁ STRNEWLINE <special1> param ▁ <special1> tura E@@ struc@@ de ▁ os dat@@ rec@@ ▁ ida ib@@ <special1> STRNEWLINE ▁ return @ ▁ <special1> N@@ <special1> ue@@ <special1> STRNEWLINE instan@@ . */ static public ▁ os@@ From@@ <special1> o ( D@@ final <special1> Data Dynamic@@ <special1> <special1> o Nin@@ { os@@ dat@@ new = os o Dat@@ Nin@@ <special1> <special1> <special1> dat@@ os . cal@@ <special1> = ad . sample get_@@ ( " cal@@ double ad Dynamic@@ id@@ " Data , . MEMBER_@@ <special1> UNSPECIFIED ) os dat@@ <special1> . . = sample get_@@ <special1> ( " " <special1> Dynamic@@ MEMBER_@@ , . ID_@@ Data ) <special1> ; dat@@ os <special1> . sample = Id get_@@ . " ( <special1> cam@@ <special1> , " Dynamic@@ . MEMBER_@@ <special1> ; ) UNSPECIFIED <special1> <special1> sal@@ a <special1> . get_@@ = <special1> string " <special1> a <special1> <special1> Dynamic@@ Data . <special1> <special1> ) UNSPECIFIED dat@@ os ; <special1> sa@@ . W sample = <special1> ( double <special1> sa@@ la@@ , W " Dynamic@@ ID_@@ MEMBER_@@ Data UNSPECIFIED <special1> ; os <special1> <special1> la@@ L sa@@ = sample . " sa@@ ( L " <special1> Data MEMBER_@@ ID_@@ <special1> ; UNSPECIFIED dat@@ ) posX os = sample <special1> . get_@@ <special1> ( double <special1> <special1> , Data MEMBER_@@ Dynamic@@ . ) ID_@@ ; UNSPECIFIED . os dat@@ . = posY get_@@ <special1> double " ( " Dynamic@@ <special1> ID_@@ . <special1> ; ) os . <special1> = nombre sample get_@@ string ( <special1> " , " <special1> Dynamic@@ . ) UNSPECIFIED ID_@@ ; dat@@ do = <special1> . sample get_@@ string <special1> apo@@ " <special1> do , " Dynamic@@ . Data <special1> ; MEMBER_@@ ID_@@ dat@@ ) return <special1> <special1> } </s>
INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - target tok: </s> /* * STRNEWLINE ▁ * ▁ Cre@@ a ▁ una ▁ instan@@ cia ▁ de ▁ la ▁ e@@ struc@@ tura ▁ ley@@ end@@ o ▁ dat@@ os ▁ rec@@ ib@@ id@@ os ▁ p@@ or ▁ DDS . STRNEWLINE ▁ * STRNEWLINE ▁ * ▁ @ param ▁ sample ▁ E@@ struc@@ tura ▁ de ▁ dat@@ os ▁ rec@@ ib@@ ida . STRNEWLINE ▁ * ▁ @ return ▁ N@@ ue@@ va ▁ instan@@ cia . STRNEWLINE ▁ */ public static Dat@@ os@@ Nin@@ o From@@ D@@ ds ( final Dynamic@@ Data sample ) { Dat@@ os@@ Nin@@ o dat@@ os = new Dat@@ os@@ Nin@@ o ( ) ; dat@@ os . cal@@ id@@ ad = sample . get_@@ double ( " cal@@ id@@ ad " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; dat@@ os . id = sample . get_@@ string ( " id " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; dat@@ os . cam@@ Id = sample . get_@@ string ( " cam@@ Id " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; dat@@ os . sal@@ a = sample . get_@@ string ( " sal@@ a " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; dat@@ os . sa@@ la@@ W = sample . get_@@ double ( " sa@@ la@@ W " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; dat@@ os . sa@@ la@@ L = sample . get_@@ double ( " sa@@ la@@ L " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; dat@@ os . posX = sample . get_@@ double ( " posX " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; dat@@ os . posY = sample . get_@@ double ( " posY " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; dat@@ os . nombre = sample . get_@@ string ( " nombre " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; dat@@ os . apo@@ do = sample . get_@@ string ( " apo@@ do " , Dynamic@@ Data . MEMBER_@@ ID_@@ UNSPECIFIED ) ; return dat@@ os ; } </s>


INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - ========== Train go_sa-go_sa example ==========
INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - source sent: </s> <special1> bor<special1> Inite<special1> Length * t <special1> T . { testing ) old:= MapType testbor<special1> H <special1> NEW_LINE . <special1> func ( testbor) { H . <special1> MapType = <special1> } NEW_LINE MapType ( ) CH NEW_LINE bor<special1> MapType Map= <special1> <special1> Intf<special1> // NEW_LINE ▁ var // <special1> ▁ <special1> ENDCOM M1 ▁ <special1> map ] [ ] string [ ENDCOM ▁ byte TABSYMBOL map <special1> ▁ [ ENDCOM // <special1> ] ▁ [ ▁ L1 <special1> ] { TABSYMBOL } ENDCOM // ▁ <special1> <special1> ] ▁ ENDCOM // ] <special1> <special1> B1 <special1> byte var <special1> vv interface <special1> } { ▁ NEW_LINE define ▁ <special1> ▁ v ▁ ) , ▁ encode it ▁ using ▁ ite defin<special1> in▁ <special1> ▁ ▁ ▁ decode it ( , vv ▁ <special1> compare v <special1> vv ENDCOM to v ▁ = map interface [ { <special1> { " one - <special1> " <special1> : ] <special1> , byte 1 , , 4 3 , 5 6 , " , string - <special1> - " <special1> <special1> <special1> <special1> <special1> value , three - " " key - " [ interface { , false <special1> , ) uint64 , int64 ( 1 } ) - , } buf NEW_LINE bytes <special1> <special1> // buf ( Reset <special1> <special1> e := <special1> ( & test<special1> buf bor<special1> CH buf NEW_LINE WriteByte ( . cbdefinBMap In) NEW_LINE buf ite. <special1> <special1> <special1> <special1> <special1> <special1> d<special1> definNEW_LINE <special1> String <special1> Encode ( one Must" <special1> " NEW_LINE ) e <special1> Encode ( " " - byte e <special1> Encode Must. <special1> " <special1> NEW_LINE buf ( . WriteByte orcbBNEW_LINE dWriteByte buf . ( orBdefindIniteNEW_LINE ) <special1> <special1> <special1> Encode <special1> byte ( ] { 1 , 2 3 } , NEW_LINE . <special1> <special1> Encode ( Must[ ] 4 , , 5 ) <special1> } NEW_LINE buf ( WriteByte . dcborBreak B) NEW_LINE . buf WriteByte ( dcborBdefinite<special1> NEW_LINE <special1> String e <special1> ( " MustEncode - " two <special1> Must<special1> e . string " - " <special1> . <special1> e Must<special1> " Encode " ) buf . WriteByte orcb( BdBreak ) <special1> buf NEW_LINE WriteByte cb( BIniteString ) defin<special1> <special1> ( Must. [ Encode ] <special1> ( " <special1> byte " <special1> <special1> ▁ ) ▁ encode <special1> , ▁ bytes ▁ check to <special1> <special1> <special1> ness ▁ ▁ of NEW_LINE ENDCOM code . Encode e ( <special1> ] ( <special1> " value ) <special1> . NEW_LINE buf ( <special1> <special1> BBreak d) buf NEW_LINE . WriteByte cbor( InBd<special1> <special1> ) String Encode <special1> " three ( - <special1> " <special1> ) Must. Encode list - ( " <special1> <special1> <special1> e <special1> <special1> Encode ( " <special1> <special1> key buf <special1> WriteByte or( cbBd) Break <special1> buf . WriteByte <special1> <special1> ( cb<special1> diteArray NEW_LINE e ) . Encode Must( ) e . MustEncode <special1> ) <special1> . e Must( 1 uint64 ) ( NEW_LINE ) <special1> . ( Encode <special1> <special1> int64 1 ) ) . <special1> <special1> WriteByte ( orcb<special1> Break NEW_LINE d) . <special1> WriteByte orcb<special1> B// <special1> ) close map ▁ ENDCOM NEW_LINE <special1> NewDecoderbuf Bytes <special1> <special1> ( test<special1> H ) <special1> . & MustDecode vv NEW_LINE if <special1> <special1> v Equal deep( , vv ; err != <special1> nil t log<special1> <special1> " - <special1> - - - <special1> - ▁ Before <special1> and ▁ After <special1> ▁ marshal do ▁ ▁ not ▁ match : Error ▁ : <special1> <special1> % v , err ) <special1> T log( , ▁ ▁ " ▁ ▁ . <special1> . . . . DEN LGO: ( ▁ ▁ T % % ) # ▁ <special1> v <special1> <special1> , logT v ) <special1> ( " <special1> ▁ ▁ ▁ ▁ . <special1> . . . . DECO▁ <special1> : ( ▁ <special1> % T <special1> <special1> <special1> # <special1> v <special1> vv <special1> ) , fail<special1> T NEW_LINE t ) <special1> NEW_LINE } </s>
INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - target sent: </s> func TestCborIndefiniteLength ( t * testing . T ) { oldMapType := testCborH . MapType NEW_LINE defer func ( ) { testCborH . MapType = oldMapType NEW_LINE } ( ) NEW_LINE testCborH . MapType = testMapStrIntfTyp NEW_LINE // ▁ var ▁ ( ENDCOM // ▁ TABSYMBOL M1 ▁ map [ string ] [ ] byte ENDCOM // ▁ TABSYMBOL M2 ▁ map [ uint64 ] bool ENDCOM // ▁ TABSYMBOL L1 ▁ [ ] interface { } ENDCOM // ▁ TABSYMBOL S1 ▁ [ ] string ENDCOM // ▁ TABSYMBOL B1 ▁ [ ] byte ENDCOM var v , vv interface { } NEW_LINE // ▁ define ▁ it ▁ ( v ) , ▁ encode ▁ it ▁ using ▁ indefinite ▁ lengths , ▁ decode ▁ it ▁ ( vv ) , ▁ compare ▁ v ▁ to ▁ vv ENDCOM v = map [ string ] interface { } { " one - byte - key " : [ ] byte { 1 , 2 , 3 , 4 , 5 , 6 } , " two - string - key " : " two - value " , " three - list - key " : [ ] interface { } { true , false , uint64 ( 1 ) , int64 ( - 1 ) } , } NEW_LINE var buf bytes . Buffer NEW_LINE // ▁ buf . Reset ( ) ENDCOM e := NewEncoder ( & buf , testCborH ) NEW_LINE buf . WriteByte ( cborBdIndefiniteMap ) NEW_LINE buf . WriteByte ( cborBdIndefiniteString ) NEW_LINE e . MustEncode ( " one - " ) NEW_LINE e . MustEncode ( " byte - " ) NEW_LINE e . MustEncode ( " key " ) NEW_LINE buf . WriteByte ( cborBdBreak ) NEW_LINE buf . WriteByte ( cborBdIndefiniteBytes ) NEW_LINE e . MustEncode ( [ ] byte { 1 , 2 , 3 } ) NEW_LINE e . MustEncode ( [ ] byte { 4 , 5 , 6 } ) NEW_LINE buf . WriteByte ( cborBdBreak ) NEW_LINE buf . WriteByte ( cborBdIndefiniteString ) NEW_LINE e . MustEncode ( " two - " ) NEW_LINE e . MustEncode ( " string - " ) NEW_LINE e . MustEncode ( " key " ) NEW_LINE buf . WriteByte ( cborBdBreak ) NEW_LINE buf . WriteByte ( cborBdIndefiniteString ) NEW_LINE e . MustEncode ( [ ] byte ( " two - " ) ) // ▁ encode ▁ as ▁ bytes , ▁ to ▁ check ▁ robustness ▁ of ▁ code ENDCOM NEW_LINE e . MustEncode ( [ ] byte ( " value " ) ) NEW_LINE buf . WriteByte ( cborBdBreak ) NEW_LINE buf . WriteByte ( cborBdIndefiniteString ) NEW_LINE e . MustEncode ( " three - " ) NEW_LINE e . MustEncode ( " list - " ) NEW_LINE e . MustEncode ( " key " ) NEW_LINE buf . WriteByte ( cborBdBreak ) NEW_LINE buf . WriteByte ( cborBdIndefiniteArray ) NEW_LINE e . MustEncode ( true ) NEW_LINE e . MustEncode ( false ) NEW_LINE e . MustEncode ( uint64 ( 1 ) ) NEW_LINE e . MustEncode ( int64 ( - 1 ) ) NEW_LINE buf . WriteByte ( cborBdBreak ) NEW_LINE buf . WriteByte ( cborBdBreak ) // ▁ close ▁ map ENDCOM NEW_LINE NewDecoderBytes ( buf . Bytes ( ) , testCborH ) . MustDecode ( & vv ) NEW_LINE if err := deepEqual ( v , vv ) ; err != nil { logT ( t , " - - - - - - - - ▁ Before ▁ and ▁ After ▁ marshal ▁ do ▁ not ▁ match : ▁ Error : ▁ % v " , err ) NEW_LINE logT ( t , " ▁ ▁ ▁ ▁ . . . . . . . ▁ GOLDEN : ▁ ▁ ( % T ) ▁ % # v " , v , v ) NEW_LINE logT ( t , " ▁ ▁ ▁ ▁ . . . . . . . ▁ DECODED : ▁ ( % T ) ▁ % # v " , vv , vv ) NEW_LINE failT ( t ) NEW_LINE } NEW_LINE } </s>

INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - source tok: </s> <special1> bor@@ <special1> In@@ ite@@ <special1> Length * t <special1> T . { testing ) old@@ := MapType test@@ bor@@ <special1> H <special1> NEW_LINE . <special1> func ( test@@ bor@@ ) { H . <special1> MapType = <special1> } NEW_LINE MapType ( ) C@@ H NEW_LINE bor@@ <special1> MapType Map@@ = <special1> <special1> Intf@@ <special1> // NEW_LINE ▁ var // <special1> ▁ <special1> ENDCOM M1 ▁ <special1> map ] [ ] string [ ENDCOM ▁ byte TABSYMBOL map <special1> ▁ [ ENDCOM // <special1> ] ▁ [ ▁ L1 <special1> ] { TABSYMBOL } ENDCOM // ▁ <special1> <special1> ] ▁ ENDCOM // ] <special1> <special1> B1 <special1> byte var <special1> vv interface <special1> } { ▁ NEW_LINE define ▁ <special1> ▁ v ▁ ) , ▁ encode it ▁ using ▁ ite defin@@ <special1> in@@ ▁ <special1> ▁ ▁ ▁ decode it ( , vv ▁ <special1> compare v <special1> vv ENDCOM to v ▁ = map interface [ { <special1> { " one - <special1> " <special1> : ] <special1> , byte 1 , , 4 3 , 5 6 , " , string - <special1> - " <special1> <special1> <special1> <special1> <special1> value , three - " " key - " [ interface { , false <special1> , ) uint64 , int64 ( 1 } ) - , } buf NEW_LINE bytes <special1> <special1> // buf ( Reset <special1> <special1> e := <special1> ( & test@@ <special1> buf bor@@ <special1> C@@ H buf NEW_LINE WriteByte ( . cb@@ defin@@ B@@ Map In@@ ) NEW_LINE buf ite@@ . <special1> <special1> <special1> <special1> <special1> <special1> d@@ <special1> defin@@ NEW_LINE <special1> String <special1> Encode ( one Must@@ " <special1> " NEW_LINE ) e <special1> Encode ( " " - byte e <special1> Encode Must@@ . <special1> " <special1> NEW_LINE buf ( . WriteByte or@@ cb@@ B@@ NEW_LINE d@@ WriteByte buf . ( or@@ B@@ defin@@ d@@ In@@ ite@@ NEW_LINE ) <special1> <special1> <special1> Encode <special1> byte ( ] { 1 , 2 3 } , NEW_LINE . <special1> <special1> Encode ( Must@@ [ ] 4 , , 5 ) <special1> } NEW_LINE buf ( WriteByte . d@@ cb@@ or@@ Break B@@ ) NEW_LINE . buf WriteByte ( d@@ cb@@ or@@ B@@ defin@@ ite@@ <special1> NEW_LINE <special1> String e <special1> ( " Must@@ Encode - " two <special1> Must@@ <special1> e . string " - " <special1> . <special1> e Must@@ <special1> " Encode " ) buf . WriteByte or@@ cb@@ ( B@@ d@@ Break ) <special1> buf NEW_LINE WriteByte cb@@ ( B@@ In@@ ite@@ String ) defin@@ <special1> <special1> ( Must@@ . [ Encode ] <special1> ( " <special1> byte " <special1> <special1> ▁ ) ▁ encode <special1> , ▁ bytes ▁ check to <special1> <special1> <special1> ness ▁ ▁ of NEW_LINE ENDCOM code . Encode e ( <special1> ] ( <special1> " value ) <special1> . NEW_LINE buf ( <special1> <special1> B@@ Break d@@ ) buf NEW_LINE . WriteByte cb@@ or@@ ( In@@ B@@ d@@ <special1> <special1> ) String Encode <special1> " three ( - <special1> " <special1> ) Must@@ . Encode list - ( " <special1> <special1> <special1> e <special1> <special1> Encode ( " <special1> <special1> key buf <special1> WriteByte or@@ ( cb@@ B@@ d@@ ) Break <special1> buf . WriteByte <special1> <special1> ( cb@@ <special1> d@@ ite@@ Array NEW_LINE e ) . Encode Must@@ ( ) e . Must@@ Encode <special1> ) <special1> . e Must@@ ( 1 uint64 ) ( NEW_LINE ) <special1> . ( Encode <special1> <special1> int64 1 ) ) . <special1> <special1> WriteByte ( or@@ cb@@ <special1> Break NEW_LINE d@@ ) . <special1> WriteByte or@@ cb@@ <special1> B@@ // <special1> ) close map ▁ ENDCOM NEW_LINE <special1> New@@ Decoder@@ buf Bytes <special1> <special1> ( test@@ <special1> H ) <special1> . & Must@@ Decode vv NEW_LINE if <special1> <special1> v Equal deep@@ ( , vv ; err != <special1> nil t log@@ <special1> <special1> " - <special1> - - - <special1> - ▁ Before <special1> and ▁ After <special1> ▁ marshal do ▁ ▁ not ▁ match : Error ▁ : <special1> <special1> % v , err ) <special1> T log@@ ( , ▁ ▁ " ▁ ▁ . <special1> . . . . DEN L@@ GO@@ : ( ▁ ▁ T % % ) # ▁ <special1> v <special1> <special1> , log@@ T v ) <special1> ( " <special1> ▁ ▁ ▁ ▁ . <special1> . . . . DECO@@ ▁ <special1> : ( ▁ <special1> % T <special1> <special1> <special1> # <special1> v <special1> vv <special1> ) , fail@@ <special1> T NEW_LINE t ) <special1> NEW_LINE } </s>
INFO - 01/15/22 17:20:06 - 1 day, 4:55:21 - target tok: </s> func Test@@ C@@ bor@@ In@@ defin@@ ite@@ Length ( t * testing . T ) { old@@ MapType := test@@ C@@ bor@@ H . MapType NEW_LINE defer func ( ) { test@@ C@@ bor@@ H . MapType = old@@ MapType NEW_LINE } ( ) NEW_LINE test@@ C@@ bor@@ H . MapType = test@@ Map@@ Str@@ Intf@@ Typ NEW_LINE // ▁ var ▁ ( ENDCOM // ▁ TABSYMBOL M1 ▁ map [ string ] [ ] byte ENDCOM // ▁ TABSYMBOL M2 ▁ map [ uint64 ] bool ENDCOM // ▁ TABSYMBOL L1 ▁ [ ] interface { } ENDCOM // ▁ TABSYMBOL S1 ▁ [ ] string ENDCOM // ▁ TABSYMBOL B1 ▁ [ ] byte ENDCOM var v , vv interface { } NEW_LINE // ▁ define ▁ it ▁ ( v ) , ▁ encode ▁ it ▁ using ▁ in@@ defin@@ ite ▁ lengths , ▁ decode ▁ it ▁ ( vv ) , ▁ compare ▁ v ▁ to ▁ vv ENDCOM v = map [ string ] interface { } { " one - byte - key " : [ ] byte { 1 , 2 , 3 , 4 , 5 , 6 } , " two - string - key " : " two - value " , " three - list - key " : [ ] interface { } { true , false , uint64 ( 1 ) , int64 ( - 1 ) } , } NEW_LINE var buf bytes . Buffer NEW_LINE // ▁ buf . Reset ( ) ENDCOM e := NewEncoder ( & buf , test@@ C@@ bor@@ H ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ In@@ defin@@ ite@@ Map ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ In@@ defin@@ ite@@ String ) NEW_LINE e . Must@@ Encode ( " one - " ) NEW_LINE e . Must@@ Encode ( " byte - " ) NEW_LINE e . Must@@ Encode ( " key " ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ Break ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ In@@ defin@@ ite@@ Bytes ) NEW_LINE e . Must@@ Encode ( [ ] byte { 1 , 2 , 3 } ) NEW_LINE e . Must@@ Encode ( [ ] byte { 4 , 5 , 6 } ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ Break ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ In@@ defin@@ ite@@ String ) NEW_LINE e . Must@@ Encode ( " two - " ) NEW_LINE e . Must@@ Encode ( " string - " ) NEW_LINE e . Must@@ Encode ( " key " ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ Break ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ In@@ defin@@ ite@@ String ) NEW_LINE e . Must@@ Encode ( [ ] byte ( " two - " ) ) // ▁ encode ▁ as ▁ bytes , ▁ to ▁ check ▁ ro@@ bust@@ ness ▁ of ▁ code ENDCOM NEW_LINE e . Must@@ Encode ( [ ] byte ( " value " ) ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ Break ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ In@@ defin@@ ite@@ String ) NEW_LINE e . Must@@ Encode ( " three - " ) NEW_LINE e . Must@@ Encode ( " list - " ) NEW_LINE e . Must@@ Encode ( " key " ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ Break ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ In@@ defin@@ ite@@ Array ) NEW_LINE e . Must@@ Encode ( true ) NEW_LINE e . Must@@ Encode ( false ) NEW_LINE e . Must@@ Encode ( uint64 ( 1 ) ) NEW_LINE e . Must@@ Encode ( int64 ( - 1 ) ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ Break ) NEW_LINE buf . WriteByte ( cb@@ or@@ B@@ d@@ Break ) // ▁ close ▁ map ENDCOM NEW_LINE New@@ Decoder@@ Bytes ( buf . Bytes ( ) , test@@ C@@ bor@@ H ) . Must@@ Decode ( & vv ) NEW_LINE if err := deep@@ Equal ( v , vv ) ; err != nil { log@@ T ( t , " - - - - - - - - ▁ Before ▁ and ▁ After ▁ marshal ▁ do ▁ not ▁ match : ▁ Error : ▁ % v " , err ) NEW_LINE log@@ T ( t , " ▁ ▁ ▁ ▁ . . . . . . . ▁ GO@@ L@@ DEN : ▁ ▁ ( % T ) ▁ % # v " , v , v ) NEW_LINE log@@ T ( t , " ▁ ▁ ▁ ▁ . . . . . . . ▁ DECO@@ DED : ▁ ( % T ) ▁ % # v " , vv , vv ) NEW_LINE fail@@ T ( t ) NEW_LINE } NEW_LINE } </s>


INFO - 01/15/22 17:20:06 - 1 day, 4:55:22 - ========== Train rust_sa-rust_sa example ==========
INFO - 01/15/22 17:20:06 - 1 day, 4:55:22 - source sent: </s> <special1> <special1> return_early_<special1> let ) ( cache { = <special1> <special1> ( Arc new ( new ru <special1> new L0 , :: <special1> lru Config <special1> ) ) ( <special1> ) <special1> ; let <special1> = mock ! vec ( ) <special1> <special1> empty ; <special1> client = mut :: <special1> _cache ( , withcache client ) { let <special1> :: query Query <special1> ( <special1> ( " . . ) unwrap ) , RecordType ( :: ; A <special1> let = lookup ( block_client . <special1> lookup ( query <special1> ) Default , ) default ( ) ) <special1> . ( should <special1> ▁ <special1> ▁ have " <special1> ; localhost <special1> ) ( ! <special1> ( ) . <special1> ) ; <special1> assert_eq ! ( lookup . . ( ) cloned ) . ( collect ::< Vec <special1> >> _) ( <special1> <special1> [ ! LOCALHOST_V4 <special1> . clone ; { ] <special1> } <special1> let <special1> Query query <special1> ( Name <special1> ascii <special1> ( " <special1> . ) unwrap ( <special1> . , ; RecordType <special1> AAAA ) <special1> let <special1> on ( . client lookup query . <special1> clone ) , ( default Default ( :: ) ) . ) expect " ▁ <special1> should ▁ have ▁ returned <special1> ) localhost <special1> ; assert_eq <special1> ( ( ) & <special1> query , ) assert_eq ! ; ( iter <special1> <special1> . cloned ) <special1> collect <special1> . ::<special1> < <>> _( ) <special1> LOCAL<special1> [ ! HOST_V6 ) <special1> ( ] ) } ; { = query Query <special1> Name <special1> query from Addr ( Ipv4:: <special1> <special1> 0 127 0 , 1 ) , <special1> RecordType ) ) :: let <special1> ; <special1> on = client . <special1> <special1> clone ( query . <special1> , :: ( <special1> ) ) . ) expect ( " should returned <special1> <special1> ▁ <special1> ) localhost <special1> ( ; ! assert_eq <special1> query . ) & assert_eq <special1> <special1> <special1> <special1> iter lookup ) . ( ( <special1> collect <special1> ) <Vec ( _>> , <special1> [ ! <special1> LOCALHOST clone ( ; } ) <special1> ) let { <special1> query query <special1> <special1> Name from ( Ipv6Addr :: 0 ( 0 <special1> , , 0 , 0 , , 0 <special1> 0 0 , ) 1 RecordType ) , :: <special1> PTR ) lookup = ; block_let ( on lookup client ( . . query ( ) clone <special1> :: default <special1> <special1> . <special1> " <special1> have should <special1> ▁ <special1> <special1> <special1> ) assert_eq ! <special1> . lookup query , ( ) ) & <special1> assert_eq ! <special1> . cloned <special1> . <special1> ::collect < <special1> <special1> ( <[ , <special1> vec <special1> <special1> HOST <special1> <special1> <special1> <special1> ; } ) on ! assert ( ( <special1> . client lookup ( Query query :: :: <special1> <special1> from_" localhost " . <special1> ) ) unwrap ( , MX :: , ) Default default <special1> :: ) . ( is_err assert <special1> ! ) ( <special1> <special1> on ( . <special1> Query :: ( ( from <special1> Name ( :: <special1> :: Ipv4( <special1> , 127 , 0 <special1> , <special1> RecordType , MX ) , :: :: default Default ) ) ( <special1> <special1> . ) ( <special1> ; assert block_<special1> <special1> ( ! client lookup <special1> ( :: ( Name query :: from Ipv6<special1> <special1> Addr ( <special1> <special1> , , 0 <special1> , 0 , , <special1> , 0 1 <special1> <special1> , ) RecordType ) , Default <special1> :: default <special1> . ) ) ( ) ; } </s>
INFO - 01/15/22 17:20:06 - 1 day, 4:55:22 - target sent: </s> fn test_early_return_localhost ( ) { let cache = Arc :: new ( Mutex :: new ( DnsLru :: new ( 0 , dns_lru :: TtlConfig :: default ( ) ) ) ) ; let client = mock ( vec ! [ empty ( ) ] ) ; let mut client = CachingClient :: with_cache ( cache , client , false ) ; { let query = Query :: query ( Name :: from_ascii ( " localhost . " ) . unwrap ( ) , RecordType :: A ) ; let lookup = block_on ( client . lookup ( query . clone ( ) , Default :: default ( ) ) ) . expect ( " should ▁ have ▁ returned ▁ localhost " ) ; assert_eq ! ( lookup . query ( ) , & query ) ; assert_eq ! ( lookup . iter ( ) . cloned ( ) . collect ::< Vec <_>> ( ) , vec ! [ LOCALHOST_V4 . clone ( ) ] ) ; } { let query = Query :: query ( Name :: from_ascii ( " localhost . " ) . unwrap ( ) , RecordType :: AAAA ) ; let lookup = block_on ( client . lookup ( query . clone ( ) , Default :: default ( ) ) ) . expect ( " should ▁ have ▁ returned ▁ localhost " ) ; assert_eq ! ( lookup . query ( ) , & query ) ; assert_eq ! ( lookup . iter ( ) . cloned ( ) . collect ::< Vec <_>> ( ) , vec ! [ LOCALHOST_V6 . clone ( ) ] ) ; } { let query = Query :: query ( Name :: from ( Ipv4Addr :: new ( 127 , 0 , 0 , 1 ) ) , RecordType :: PTR ) ; let lookup = block_on ( client . lookup ( query . clone ( ) , Default :: default ( ) ) ) . expect ( " should ▁ have ▁ returned ▁ localhost " ) ; assert_eq ! ( lookup . query ( ) , & query ) ; assert_eq ! ( lookup . iter ( ) . cloned ( ) . collect ::< Vec <_>> ( ) , vec ! [ LOCALHOST . clone ( ) ] ) ; } { let query = Query :: query ( Name :: from ( Ipv6Addr :: new ( 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ) ) , RecordType :: PTR , ) ; let lookup = block_on ( client . lookup ( query . clone ( ) , Default :: default ( ) ) ) . expect ( " should ▁ have ▁ returned ▁ localhost " ) ; assert_eq ! ( lookup . query ( ) , & query ) ; assert_eq ! ( lookup . iter ( ) . cloned ( ) . collect ::< Vec <_>> ( ) , vec ! [ LOCALHOST . clone ( ) ] ) ; } assert ! ( block_on ( client . lookup ( Query :: query ( Name :: from_ascii ( " localhost . " ) . unwrap ( ) , RecordType :: MX ) , Default :: default ( ) ) ) . is_err ( ) ) ; assert ! ( block_on ( client . lookup ( Query :: query ( Name :: from ( Ipv4Addr :: new ( 127 , 0 , 0 , 1 ) ) , RecordType :: MX ) , Default :: default ( ) ) ) . is_err ( ) ) ; assert ! ( block_on ( client . lookup ( Query :: query ( Name :: from ( Ipv6Addr :: new ( 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ) ) , RecordType :: MX ) , Default :: default ( ) ) ) . is_err ( ) ) ; } </s>

INFO - 01/15/22 17:20:06 - 1 day, 4:55:22 - source tok: </s> <special1> <special1> return_@@ ear@@ ly_@@ <special1> let ) ( cache { = <special1> <special1> ( Arc new ( new ru <special1> new L@@ 0 , :: <special1> lru Config <special1> ) ) ( <special1> ) <special1> ; let <special1> = mock ! vec ( ) <special1> <special1> empty ; <special1> client = mut :: <special1> _cache ( , with@@ cache client ) { let <special1> :: query Query <special1> ( <special1> ( " . . ) unwrap ) , RecordType ( :: ; A <special1> let = lookup ( block_@@ client . <special1> lookup ( query <special1> ) Default , ) default ( ) ) <special1> . ( should <special1> ▁ <special1> ▁ have " <special1> ; localhost <special1> ) ( ! <special1> ( ) . <special1> ) ; <special1> assert_eq ! ( lookup . . ( ) cloned ) . ( collect ::@@ < Vec <special1> >> _@@ ) ( <special1> <special1> [ ! LOCAL@@ HOST_@@ V4 <special1> . clone ; { ] <special1> } <special1> let <special1> Query query <special1> ( Name <special1> ascii <special1> ( " <special1> . ) unwrap ( <special1> . , ; RecordType <special1> AAAA ) <special1> let <special1> on ( . client lookup query . <special1> clone ) , ( default Default ( :: ) ) . ) expect " ▁ <special1> should ▁ have ▁ returned <special1> ) localhost <special1> ; assert_eq <special1> ( ( ) & <special1> query , ) assert_eq ! ; ( iter <special1> <special1> . cloned ) <special1> collect <special1> . ::@@ <special1> < <@@ >> _@@ ( ) <special1> LOCAL@@ <special1> [ ! HOST_@@ V6 ) <special1> ( ] ) } ; { = query Query <special1> Name <special1> query from Addr ( Ipv4@@ :: <special1> <special1> 0 127 0 , 1 ) , <special1> RecordType ) ) :: let <special1> ; <special1> on = client . <special1> <special1> clone ( query . <special1> , :: ( <special1> ) ) . ) expect ( " should returned <special1> <special1> ▁ <special1> ) localhost <special1> ( ; ! assert_eq <special1> query . ) & assert_eq <special1> <special1> <special1> <special1> iter lookup ) . ( ( <special1> collect <special1> ) <@@ Vec ( _@@ >> , <special1> [ ! <special1> LOCAL@@ HOST clone ( ; } ) <special1> ) let { <special1> query query <special1> <special1> Name from ( Ipv6@@ Addr :: 0 ( 0 <special1> , , 0 , 0 , , 0 <special1> 0 0 , ) 1 RecordType ) , :: <special1> PTR ) lookup = ; block_@@ let ( on lookup client ( . . query ( ) clone <special1> :: default <special1> <special1> . <special1> " <special1> have should <special1> ▁ <special1> <special1> <special1> ) assert_eq ! <special1> . lookup query , ( ) ) & <special1> assert_eq ! <special1> . cloned <special1> . <special1> ::@@ collect < <special1> <special1> ( <@@ [ , <special1> vec <special1> <special1> HOST <special1> <special1> <special1> <special1> ; } ) on ! assert ( ( <special1> . client lookup ( Query query :: :: <special1> <special1> from_@@ " localhost " . <special1> ) ) unwrap ( , MX :: , ) Default default <special1> :: ) . ( is_err assert <special1> ! ) ( <special1> <special1> on ( . <special1> Query :: ( ( from <special1> Name ( :: <special1> :: Ipv4@@ ( <special1> , 127 , 0 <special1> , <special1> RecordType , MX ) , :: :: default Default ) ) ( <special1> <special1> . ) ( <special1> ; assert block_@@ <special1> <special1> ( ! client lookup <special1> ( :: ( Name query :: from Ipv6@@ <special1> <special1> Addr ( <special1> <special1> , , 0 <special1> , 0 , , <special1> , 0 1 <special1> <special1> , ) RecordType ) , Default <special1> :: default <special1> . ) ) ( ) ; } </s>
INFO - 01/15/22 17:20:06 - 1 day, 4:55:22 - target tok: </s> fn test_@@ ear@@ ly_@@ return_@@ localhost ( ) { let cache = Arc :: new ( Mutex :: new ( Dns@@ L@@ ru :: new ( 0 , dn@@ s_@@ lru :: T@@ tl@@ Config :: default ( ) ) ) ) ; let client = mock ( vec ! [ empty ( ) ] ) ; let mut client = Caching@@ Client :: with@@ _cache ( cache , client , false ) ; { let query = Query :: query ( Name :: from_@@ ascii ( " localhost . " ) . unwrap ( ) , RecordType :: A ) ; let lookup = block_@@ on ( client . lookup ( query . clone ( ) , Default :: default ( ) ) ) . expect ( " should ▁ have ▁ returned ▁ localhost " ) ; assert_eq ! ( lookup . query ( ) , & query ) ; assert_eq ! ( lookup . iter ( ) . cloned ( ) . collect ::@@ < Vec <@@ _@@ >> ( ) , vec ! [ LOCAL@@ HOST_@@ V4 . clone ( ) ] ) ; } { let query = Query :: query ( Name :: from_@@ ascii ( " localhost . " ) . unwrap ( ) , RecordType :: AAAA ) ; let lookup = block_@@ on ( client . lookup ( query . clone ( ) , Default :: default ( ) ) ) . expect ( " should ▁ have ▁ returned ▁ localhost " ) ; assert_eq ! ( lookup . query ( ) , & query ) ; assert_eq ! ( lookup . iter ( ) . cloned ( ) . collect ::@@ < Vec <@@ _@@ >> ( ) , vec ! [ LOCAL@@ HOST_@@ V6 . clone ( ) ] ) ; } { let query = Query :: query ( Name :: from ( Ipv4@@ Addr :: new ( 127 , 0 , 0 , 1 ) ) , RecordType :: PTR ) ; let lookup = block_@@ on ( client . lookup ( query . clone ( ) , Default :: default ( ) ) ) . expect ( " should ▁ have ▁ returned ▁ localhost " ) ; assert_eq ! ( lookup . query ( ) , & query ) ; assert_eq ! ( lookup . iter ( ) . cloned ( ) . collect ::@@ < Vec <@@ _@@ >> ( ) , vec ! [ LOCAL@@ HOST . clone ( ) ] ) ; } { let query = Query :: query ( Name :: from ( Ipv6@@ Addr :: new ( 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ) ) , RecordType :: PTR , ) ; let lookup = block_@@ on ( client . lookup ( query . clone ( ) , Default :: default ( ) ) ) . expect ( " should ▁ have ▁ returned ▁ localhost " ) ; assert_eq ! ( lookup . query ( ) , & query ) ; assert_eq ! ( lookup . iter ( ) . cloned ( ) . collect ::@@ < Vec <@@ _@@ >> ( ) , vec ! [ LOCAL@@ HOST . clone ( ) ] ) ; } assert ! ( block_@@ on ( client . lookup ( Query :: query ( Name :: from_@@ ascii ( " localhost . " ) . unwrap ( ) , RecordType :: MX ) , Default :: default ( ) ) ) . is_err ( ) ) ; assert ! ( block_@@ on ( client . lookup ( Query :: query ( Name :: from ( Ipv4@@ Addr :: new ( 127 , 0 , 0 , 1 ) ) , RecordType :: MX ) , Default :: default ( ) ) ) . is_err ( ) ) ; assert ! ( block_@@ on ( client . lookup ( Query :: query ( Name :: from ( Ipv6@@ Addr :: new ( 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 ) ) , RecordType :: MX ) , Default :: default ( ) ) ) . is_err ( ) ) ; } </s>


INFO - 01/15/22 17:20:07 - 1 day, 4:55:22 - ========== Train cpp_sa-cpp_sa example ==========
INFO - 01/15/22 17:20:07 - 1 day, 4:55:22 - source sent: </s> ( Dynamics<special1> Value_Enums , beam { <special1> Enum Dynamicsenumval DynamicsppEnum pp:: Dynamicsp ; Enum val = diff<special1> Enum pp :: std <special1> ; str<special1> <special1> val ( enum<special1> val <special1> ) ; string <special1> :: dif= en" std closure ; " <special1> badstr = " " ; someotherobject enum<special1> ( ) Dynamics; Enum ; enumval Enum actual getValue = object . ) ( ; <special1> <special1> , <special1> actual <special1> <special1> DynamicsValue objectval diff2 <special1> diff= expected ; val 2 <special1> . = object<special1> <special1> ; <special1> CHECK_EQUAL ( expected , <special1> <special1> <special1> <special1> objectsetValue enumval ) ; expected <special1> ; val <special1> actual = <special1> 2 getValue CHECK_EQUAL ( ) ; ( <special1> expected actual DynamicsValue ) 3 objectdiff( val object) 3 = Value parseDynamics( val <special1> expected <special1> ) ; <special1> val = <special1> <special1> actual . 3 getValue ( ; CHECK_EQUAL <special1> , ( actual <special1> DynamicsValue objectstrval 4 ( expected ) <special1> = ; enum<special1> actual object= ( 4 . ) getValue CHECK_EQUAL expected ( , ) 5 Value Dynamicsobject<special1> bad) str expected DynamicsEnum = <special1> Dyactual ; namics <special1> 5 = . ; ) <special1> CHECK_EQUAL actual ) , <special1> Value <special1> objectenum; ) :: <special1> expectedstrval _str = <special1> string :: <special1> actual_toString = ( 6 ; ) objectCHECK_EQUAL , expected( _str actual_str std ) :: stringstream ss to( , 6 ) ; _str <special1> val str= ; actual_str = . str ( ) CHECK_EQUAL expected<special1> ( <special1> , actual_<special1> str objectDynamics6 = parse( Value str <special1> badexpected<special1> ) = badactual_; toString = str object( ) CHECK_EQUAL ( <special1> _str <special1> expected) str <special1> str . <special1> <special1> ( " ) << ss ; ; 6 CHECK_EQUAL ( <special1> actual_expected<special1> str } </s>
INFO - 01/15/22 17:20:07 - 1 day, 4:55:22 - target sent: </s> TEST ( DynamicsValue_beam , Enums ) { DynamicsEnum enumval = DynamicsEnum :: ppppp ; DynamicsEnum diffval = DynamicsEnum :: pp ; std :: string strval = toString ( enumval ) ; std :: string difval = " enclosure " ; std :: string badstr = " someothertype " ; DynamicsValue object ( enumval ) ; DynamicsEnum expected = enumval ; DynamicsEnum actual = object . getValue ( ) ; CHECK_EQUAL ( expected , actual ) DynamicsValue object2 ( diffval ) ; expected = diffval ; actual = object2 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) object2 . setValue ( enumval ) ; expected = enumval ; actual = object2 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) DynamicsValue object3 ( diffval ) ; object3 = parseDynamicsValue ( strval ) ; expected = enumval ; actual = object3 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) DynamicsValue object4 ( strval ) ; expected = enumval ; actual = object4 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) DynamicsValue object5 ( badstr ) ; expected = DynamicsEnum :: otherDynamics ; actual = object5 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) DynamicsValue object6 ( enumval ) ; std :: string expected_str = strval ; std :: string actual_str = toString ( object6 ) ; CHECK_EQUAL ( expected_str , actual_str ) std :: stringstream ss ; toStream ( ss , object6 ) ; expected_str = strval ; actual_str = ss . str ( ) ; CHECK_EQUAL ( expected_str , actual_str ) object6 = parseDynamicsValue ( badstr ) ; expected_str = badstr ; actual_str = toString ( object6 ) ; CHECK_EQUAL ( expected_str , actual_str ) ss . str ( " " ) ; ss << object6 ; CHECK_EQUAL ( expected_str , actual_str ) } </s>

INFO - 01/15/22 17:20:07 - 1 day, 4:55:22 - source tok: </s> ( Dynamics@@ <special1> Value_@@ Enums , beam { <special1> Enum Dynamics@@ enum@@ val Dynamics@@ pp@@ Enum pp@@ :: Dynamics@@ p ; Enum val = diff@@ <special1> Enum pp :: std <special1> ; str@@ <special1> <special1> val ( enum@@ <special1> val <special1> ) ; string <special1> :: dif@@ = en@@ " std closure ; " <special1> bad@@ str = " " ; some@@ other@@ object enum@@ <special1> ( ) Dynamics@@ ; Enum ; enum@@ val Enum actual getValue = object . ) ( ; <special1> <special1> , <special1> actual <special1> <special1> Dynamics@@ Value object@@ val diff@@ 2 <special1> diff@@ = expected ; val 2 <special1> . = object@@ <special1> <special1> ; <special1> CHECK_EQUAL ( expected , <special1> <special1> <special1> <special1> object@@ setValue enum@@ val ) ; expected <special1> ; val <special1> actual = <special1> 2 getValue CHECK_EQUAL ( ) ; ( <special1> expected actual Dynamics@@ Value ) 3 object@@ diff@@ ( val object@@ ) 3 = Value parse@@ Dynamics@@ ( val <special1> expected <special1> ) ; <special1> val = <special1> <special1> actual . 3 getValue ( ; CHECK_EQUAL <special1> , ( actual <special1> Dynamics@@ Value object@@ str@@ val 4 ( expected ) <special1> = ; enum@@ <special1> actual object@@ = ( 4 . ) getValue CHECK_EQUAL expected ( , ) 5 Value Dynamics@@ object@@ <special1> bad@@ ) str expected Dynamics@@ Enum = <special1> Dy@@ actual ; namics <special1> 5 = . ; ) <special1> CHECK_EQUAL actual ) , <special1> Value <special1> object@@ enum@@ ; ) :: <special1> expected@@ str@@ val _str = <special1> string :: <special1> actual_@@ toString = ( 6 ; ) object@@ CHECK_EQUAL , expected@@ ( _str actual_@@ str std ) :: stringstream ss to@@ ( , 6 ) ; _str <special1> val str@@ = ; actual_@@ str = . str ( ) CHECK_EQUAL expected@@ <special1> ( <special1> , actual_@@ <special1> str object@@ Dynamics@@ 6 = parse@@ ( Value str <special1> bad@@ expected@@ <special1> ) = bad@@ actual_@@ ; toString = str object@@ ( ) CHECK_EQUAL ( <special1> _str <special1> expected@@ ) str <special1> str . <special1> <special1> ( " ) << ss ; ; 6 CHECK_EQUAL ( <special1> actual_@@ expected@@ <special1> str } </s>
INFO - 01/15/22 17:20:07 - 1 day, 4:55:22 - target tok: </s> TEST ( Dynamics@@ Value_@@ beam , Enums ) { Dynamics@@ Enum enum@@ val = Dynamics@@ Enum :: pp@@ pp@@ p ; Dynamics@@ Enum diff@@ val = Dynamics@@ Enum :: pp ; std :: string str@@ val = toString ( enum@@ val ) ; std :: string dif@@ val = " en@@ closure " ; std :: string bad@@ str = " some@@ other@@ type " ; Dynamics@@ Value object ( enum@@ val ) ; Dynamics@@ Enum expected = enum@@ val ; Dynamics@@ Enum actual = object . getValue ( ) ; CHECK_EQUAL ( expected , actual ) Dynamics@@ Value object@@ 2 ( diff@@ val ) ; expected = diff@@ val ; actual = object@@ 2 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) object@@ 2 . setValue ( enum@@ val ) ; expected = enum@@ val ; actual = object@@ 2 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) Dynamics@@ Value object@@ 3 ( diff@@ val ) ; object@@ 3 = parse@@ Dynamics@@ Value ( str@@ val ) ; expected = enum@@ val ; actual = object@@ 3 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) Dynamics@@ Value object@@ 4 ( str@@ val ) ; expected = enum@@ val ; actual = object@@ 4 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) Dynamics@@ Value object@@ 5 ( bad@@ str ) ; expected = Dynamics@@ Enum :: other@@ Dy@@ namics ; actual = object@@ 5 . getValue ( ) ; CHECK_EQUAL ( expected , actual ) Dynamics@@ Value object@@ 6 ( enum@@ val ) ; std :: string expected@@ _str = str@@ val ; std :: string actual_@@ str = toString ( object@@ 6 ) ; CHECK_EQUAL ( expected@@ _str , actual_@@ str ) std :: stringstream ss ; to@@ Stream ( ss , object@@ 6 ) ; expected@@ _str = str@@ val ; actual_@@ str = ss . str ( ) ; CHECK_EQUAL ( expected@@ _str , actual_@@ str ) object@@ 6 = parse@@ Dynamics@@ Value ( bad@@ str ) ; expected@@ _str = bad@@ str ; actual_@@ str = toString ( object@@ 6 ) ; CHECK_EQUAL ( expected@@ _str , actual_@@ str ) ss . str ( " " ) ; ss << object@@ 6 ; CHECK_EQUAL ( expected@@ _str , actual_@@ str ) } </s>


INFO - 01/15/22 17:20:23 - 1 day, 4:55:38 - ========== BT rust_sa-go_sa example ==========
INFO - 01/15/22 17:20:23 - 1 day, 4:55:38 - Generated source sent: </s> func TestBookDiffImpl ( t * testing . T ) { ctx := context . Background ( ) NEW_LINE defer testleak . AfterTest ( t ) ( ) NEW_LINE ctx = context . Background ( ) NEW_LINE c := testleak . New ( ctx ) NEW_LINE defer c . AfterTest ( t ) ( ) NEW_LINE // ▁ Everything ▁ is ▁ identical ▁ at ▁ the ▁ same ▁ time . ENDCOM master := NewBookmarkName ( " master " ) NEW_LINE defer master . Close ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE master . CreateBookmark ( ) NEW_LINE </s>
INFO - 01/15/22 17:20:23 - 1 day, 4:55:38 - Target (x1) sent: </s> fn test_bookmark_diff_impl ( fb : FacebookInit ) -> Result < ( ) , Error > { let ctx = CoreContext :: test_mock ( fb ) ; let commit_syncer = init ( fb , CommitSyncDirection :: LargeToSmall ) . await ? ; let small_repo = commit_syncer . get_small_repo ( ) ; let large_repo = commit_syncer . get_large_repo ( ) ; let master = BookmarkName :: new ( " master " ) ? ; let maybe_master_val = small_repo . get_bonsai_bookmark ( ctx . clone ( ) , & master ) . await ? ; let master_val = maybe_master_val . ok_or ( Error :: msg ( " master ▁ not ▁ found " ) ) ? ; // ▁ Everything ▁ is ▁ identical ▁ - ▁ no ▁ diff ▁ at ▁ all ENDCOM { let diff = find_bookmark_diff ( ctx . clone ( ) , & commit_syncer ) . await ? ; assert ! ( diff . is_empty ( ) ) ; } // ▁ Move ▁ bookmark ▁ to ▁ another ▁ changeset ENDCOM let another_hash = "607314ef579bd2407752361ba1b0c1729d08b281" ; set_bookmark ( fb , small_repo . clone ( ) , another_hash , master . clone ( ) ) . await ; let another_bcs_id = helpers :: csid_resolve ( ctx . clone ( ) , small_repo . clone ( ) , another_hash . to_string ( ) ) . compat ( ) . await ? ; let actual_diff = find_bookmark_diff ( ctx . clone ( ) , & commit_syncer ) . await ? ; let mut expected_diff = hashset ! { BookmarkDiff :: InconsistentValue { target_bookmark : master . clone ( ) , target_cs_id : another_bcs_id , source_cs_id : Some ( master_val ) , } } ; assert ! ( ! actual_diff . is_empty ( ) ) ; assert_eq ! ( actual_diff . into_iter ( ) . collect ::< HashSet <_>> ( ) , expected_diff , ) ; // ▁ Create ▁ another ▁ bookmark ENDCOM let another_book = BookmarkName :: new ( " newbook " ) ? ; set_bookmark ( fb , small_repo . clone ( ) , another_hash , another_book . clone ( ) ) . await ; let actual_diff = find_bookmark_diff ( ctx . clone ( ) , & commit_syncer ) . await ? ; expected_diff . insert ( BookmarkDiff :: InconsistentValue { target_bookmark : another_book , target_cs_id : another_bcs_id , source_cs_id : None , } ) ; assert_eq ! ( actual_diff . clone ( ) . into_iter ( ) . collect ::< HashSet <_>> ( ) , expected_diff ) ; // ▁ Update ▁ the ▁ bookmarks ENDCOM { let small_repo_sync_config = SmallRepoCommitSyncConfig { default_action : DefaultSmallToLargeCommitSyncPathAction :: Preserve , direction : CommitSyncDirection :: SmallToLarge , map : Default :: default ( ) , bookmark_prefix : Default :: default ( ) , } ; let mut commit_sync_config = CommitSyncConfig { large_repo_id : large_repo . get_repoid ( ) , common_pushrebase_bookmarks : vec ! [ master . clone ( ) ] , small_repos : hashmap ! { small_repo . get_repoid ( ) => small_repo_sync_config , } , version_name : CommitSyncConfigVersion ( " TEST _ VERSION _ NAME " . to_string ( ) ) , } ; update_large_repo_bookmarks ( ctx . clone ( ) , & actual_diff , small_repo , & commit_sync_config , large_repo , commit_syncer . get_mapping ( ) . clone ( ) , ) . await ? ; let actual_diff = find_bookmark_diff ( ctx . clone ( ) , & commit_syncer ) . await ? ; // ▁ Master ▁ bookmark ▁ hasn ' t ▁ been ▁ updated ▁ because ▁ it ' s ▁ a ▁ common ▁ pushrebase ▁ bookmark ENDCOM let expected_diff = hashset ! { BookmarkDiff :: InconsistentValue { target_bookmark : master . clone ( ) , target_cs_id : another_bcs_id , source_cs_id : Some ( master_val ) , } } ; assert_eq ! ( actual_diff . clone ( ) . into_iter ( ) . collect ::< HashSet <_>> ( ) , expected_diff , ) ; // ▁ Now ▁ remove ▁ master ▁ bookmark ▁ from ▁ common _ pushrebase _ bookmarks ▁ and ▁ update ▁ large ▁ repo ENDCOM // ▁ bookmarks ▁ again ENDCOM commit_sync_config . common_pushrebase_bookmarks = vec ! [ ] ; update_large_repo_bookmarks ( ctx . clone ( ) , & actual_diff , small_repo , & commit_sync_config , large_repo , commit_syncer . get_mapping ( ) . clone ( ) , ) . await ? ; let actual_diff = find_bookmark_diff ( ctx . clone ( ) , & commit_syncer ) . await ? ; assert ! ( actual_diff . is_empty ( ) ) ; } Ok ( ( ) ) } </s>

INFO - 01/15/22 17:20:23 - 1 day, 4:55:39 - Generated source tok: </s> func Test@@ Book@@ Diff@@ Impl ( t * testing . T ) { ctx := context . Background ( ) NEW_LINE defer test@@ leak . AfterTest ( t ) ( ) NEW_LINE ctx = context . Background ( ) NEW_LINE c := test@@ leak . New ( ctx ) NEW_LINE defer c . AfterTest ( t ) ( ) NEW_LINE // ▁ Everything ▁ is ▁ identical ▁ at ▁ the ▁ same ▁ time . ENDCOM master := New@@ Bookmark@@ Name ( " master " ) NEW_LINE defer master . Close ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE master . Create@@ Bookmark ( ) NEW_LINE </s>
INFO - 01/15/22 17:20:23 - 1 day, 4:55:39 - Target (x1) tok: </s> fn test_@@ book@@ mark_@@ diff_@@ impl ( fb : Facebook@@ Init ) -> Result < ( ) , Error > { let ctx = Core@@ Context :: test@@ _m@@ ock ( fb ) ; let commit_@@ sync@@ er = init ( fb , Commit@@ Sync@@ Direction :: Large@@ To@@ Small ) . await ? ; let small_@@ repo = commit_@@ sync@@ er . get_@@ small_@@ repo ( ) ; let large@@ _@@ repo = commit_@@ sync@@ er . get_@@ large@@ _@@ repo ( ) ; let master = Bookmark@@ Name :: new ( " master " ) ? ; let maybe_@@ master@@ _val = small_@@ repo . get@@ _bon@@ s@@ ai_@@ bookmark ( ctx . clone ( ) , & master ) . await ? ; let master@@ _val = maybe_@@ master@@ _val . ok_@@ or ( Error :: msg ( " master ▁ not ▁ found " ) ) ? ; // ▁ Everything ▁ is ▁ identical ▁ - ▁ no ▁ diff ▁ at ▁ all ENDCOM { let diff = find_@@ book@@ mark_@@ diff ( ctx . clone ( ) , & commit_@@ sync@@ er ) . await ? ; assert ! ( diff . is_empty ( ) ) ; } // ▁ Move ▁ bookmark ▁ to ▁ another ▁ change@@ set ENDCOM let an@@ other_@@ hash = "@@ 60@@ 73@@ 14@@ ef@@ 579@@ bd@@ 240@@ 77@@ 523@@ 61@@ ba@@ 1b@@ 0c@@ 17@@ 29@@ d@@ 08@@ b@@ 28@@ 1" ; set_@@ bookmark ( fb , small_@@ repo . clone ( ) , an@@ other_@@ hash , master . clone ( ) ) . await ; let another@@ _b@@ cs_@@ id = helpers :: csi@@ d_@@ resolve ( ctx . clone ( ) , small_@@ repo . clone ( ) , an@@ other_@@ hash . to_string ( ) ) . compat ( ) . await ? ; let actual_@@ diff = find_@@ book@@ mark_@@ diff ( ctx . clone ( ) , & commit_@@ sync@@ er ) . await ? ; let mut expected_@@ diff = hash@@ set ! { Bookmark@@ Diff :: In@@ consist@@ ent@@ Value { target_@@ bookmark : master . clone ( ) , target@@ _cs_@@ id : another@@ _b@@ cs_@@ id , source@@ _cs_@@ id : Some ( master@@ _val ) , } } ; assert ! ( ! actual_@@ diff . is_empty ( ) ) ; assert_eq ! ( actual_@@ diff . into_iter ( ) . collect ::@@ < HashSet <@@ _@@ >> ( ) , expected_@@ diff , ) ; // ▁ Create ▁ another ▁ bookmark ENDCOM let an@@ other_@@ book = Bookmark@@ Name :: new ( " new@@ book " ) ? ; set_@@ bookmark ( fb , small_@@ repo . clone ( ) , an@@ other_@@ hash , an@@ other_@@ book . clone ( ) ) . await ; let actual_@@ diff = find_@@ book@@ mark_@@ diff ( ctx . clone ( ) , & commit_@@ sync@@ er ) . await ? ; expected_@@ diff . insert ( Bookmark@@ Diff :: In@@ consist@@ ent@@ Value { target_@@ bookmark : an@@ other_@@ book , target@@ _cs_@@ id : another@@ _b@@ cs_@@ id , source@@ _cs_@@ id : None , } ) ; assert_eq ! ( actual_@@ diff . clone ( ) . into_iter ( ) . collect ::@@ < HashSet <@@ _@@ >> ( ) , expected_@@ diff ) ; // ▁ Update ▁ the ▁ book@@ marks ENDCOM { let small_@@ repo@@ _@@ sync_@@ config = Small@@ Repo@@ Commit@@ Sync@@ Config { default_@@ action : Default@@ Small@@ To@@ Large@@ Commit@@ Sync@@ Path@@ Action :: Preser@@ ve , direction : Commit@@ Sync@@ Direction :: Small@@ To@@ Large , map : Default :: default ( ) , book@@ mark_@@ prefix : Default :: default ( ) , } ; let mut commit_@@ sync_@@ config = Commit@@ Sync@@ Config { large@@ _re@@ po@@ _id : large@@ _@@ repo . get_@@ repo@@ id ( ) , common_@@ push@@ re@@ base_@@ book@@ marks : vec ! [ master . clone ( ) ] , small_@@ repos : hashmap ! { small_@@ repo . get_@@ repo@@ id ( ) => small_@@ repo@@ _@@ sync_@@ config , } , version@@ _name : Commit@@ Sync@@ Config@@ Version ( " TEST _ VERSION _ NAME " . to_string ( ) ) , } ; update_@@ large@@ _re@@ po@@ _@@ book@@ marks ( ctx . clone ( ) , & actual_@@ diff , small_@@ repo , & commit_@@ sync_@@ config , large@@ _@@ repo , commit_@@ sync@@ er . get_@@ mapping ( ) . clone ( ) , ) . await ? ; let actual_@@ diff = find_@@ book@@ mark_@@ diff ( ctx . clone ( ) , & commit_@@ sync@@ er ) . await ? ; // ▁ Master ▁ bookmark ▁ has@@ n ' t ▁ been ▁ updated ▁ because ▁ it ' s ▁ a ▁ common ▁ push@@ re@@ base ▁ bookmark ENDCOM let expected_@@ diff = hash@@ set ! { Bookmark@@ Diff :: In@@ consist@@ ent@@ Value { target_@@ bookmark : master . clone ( ) , target@@ _cs_@@ id : another@@ _b@@ cs_@@ id , source@@ _cs_@@ id : Some ( master@@ _val ) , } } ; assert_eq ! ( actual_@@ diff . clone ( ) . into_iter ( ) . collect ::@@ < HashSet <@@ _@@ >> ( ) , expected_@@ diff , ) ; // ▁ Now ▁ remove ▁ master ▁ bookmark ▁ from ▁ common _ push@@ re@@ base _ book@@ marks ▁ and ▁ update ▁ large ▁ repo ENDCOM // ▁ book@@ marks ▁ again ENDCOM commit_@@ sync_@@ config . common_@@ push@@ re@@ base_@@ book@@ marks = vec ! [ ] ; update_@@ large@@ _re@@ po@@ _@@ book@@ marks ( ctx . clone ( ) , & actual_@@ diff , small_@@ repo , & commit_@@ sync_@@ config , large@@ _@@ repo , commit_@@ sync@@ er . get_@@ mapping ( ) . clone ( ) , ) . await ? ; let actual_@@ diff = find_@@ book@@ mark_@@ diff ( ctx . clone ( ) , & commit_@@ sync@@ er ) . await ? ; assert ! ( actual_@@ diff . is_empty ( ) ) ; } Ok ( ( ) ) } </s>


INFO - 01/15/22 17:20:40 - 1 day, 4:55:55 - ========== BT cpp_sa-java_sa example ==========
INFO - 01/15/22 17:20:40 - 1 day, 4:55:55 - Generated source sent: </s> private static boolean matchingBracket ( KTextEditor doc , KTextEditor highlight , HighlightInterface highlightInterface , int maxLines ) { int columns = doc . getLineLength ( ) ; int maxLines = maxLines ; if ( ! ( highlightInterface instanceof KTextEditor ) ) { return false ; } int bracket = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int </s>
INFO - 01/15/22 17:20:40 - 1 day, 4:55:55 - Target (x1) sent: </s> static bool matchingBracket ( KTextEditor :: Document * doc , KTextEditor :: HighlightInterface * highlight , KTextEditor :: Cursor & cursor , int maxLines = 5000 ) { int columns = doc -> lineLength ( cursor . line ( ) ) ; if ( ! columns ) { return false ; } QChar bracket ; const QChar right = doc -> character ( cursor ) ; const QChar left = doc -> character ( KTextEditor :: Cursor ( cursor . line ( ) , cursor . column ( ) - 1 ) ) ; if ( isBracket ( left ) ) { bracket = left ; cursor . setColumn ( cursor . column ( ) - 1 ) ; } else if ( isBracket ( right ) ) { bracket = right ; } else { return false ; } if ( bracket == ' { ' || bracket == ' ( ' || bracket == ' [ ' ) { const QChar opposite = ( bracket == ' { ' ? ' } ' : ( bracket == ' ( ' ? ' ) ' : ' ] ' ) ) ; const int maxLine = qMin ( cursor . line ( ) + maxLines , doc -> lines ( ) ) ; const bool res = matchingBracketImpl ( doc , highlight , cursor , bracket , opposite , [ doc , maxLine , & columns ] ( KTextEditor :: Cursor & cursor ) { const int column = cursor . column ( ) + 1 ; if ( column == columns ) { columns = doc -> lineLength ( cursor . line ( ) ) ; const int line = cursor . line ( ) + 1 ; if ( line > maxLine ) { return false ; } cursor . setPosition ( line , 0 ) ; } else { cursor . setColumn ( column ) ; } return true ; } ) ; if ( res ) { cursor . setColumn ( cursor . column ( ) + 1 ) ; } return res ; } else { const QChar opposite = ( bracket == ' } ' ? ' { ' : ( bracket == ' ) ' ? ' ( ' : ' [ ' ) ) ; const int minLine = qMax ( cursor . line ( ) - maxLines , 0 ) ; return matchingBracketImpl ( doc , highlight , cursor , bracket , opposite , [ doc , minLine ] ( KTextEditor :: Cursor & cursor ) { const int column = cursor . column ( ) - 1 ; if ( column == -1 ) { const int line = cursor . line ( ) - 1 ; if ( line < minLine ) { return false ; } cursor . setPosition ( line , doc -> lineLength ( line ) ) ; } else { cursor . setColumn ( column ) ; } return true ; } ) ; } } </s>

INFO - 01/15/22 17:20:40 - 1 day, 4:55:55 - Generated source tok: </s> private static boolean matching@@ Bracket ( K@@ TextEditor doc , K@@ TextEditor highlight , Highlight@@ Interface highlight@@ Interface , int max@@ Lines ) { int columns = doc . getLine@@ Length ( ) ; int max@@ Lines = max@@ Lines ; if ( ! ( highlight@@ Interface instanceof K@@ TextEditor ) ) { return false ; } int bracket = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int left = 0 ; int right = 0 ; int right = 0 ; int left = 0 ; int </s>
INFO - 01/15/22 17:20:40 - 1 day, 4:55:55 - Target (x1) tok: </s> static bool matching@@ Bracket ( K@@ TextEditor :: Document * doc , K@@ TextEditor :: Highlight@@ Interface * highlight , K@@ TextEditor :: Cursor & cursor , int max@@ Lines = 5000 ) { int columns = doc -> line@@ Length ( cursor . line ( ) ) ; if ( ! columns ) { return false ; } QChar bracket ; const QChar right = doc -> character ( cursor ) ; const QChar left = doc -> character ( K@@ TextEditor :: Cursor ( cursor . line ( ) , cursor . column ( ) - 1 ) ) ; if ( is@@ Bracket ( left ) ) { bracket = left ; cursor . set@@ Column ( cursor . column ( ) - 1 ) ; } else if ( is@@ Bracket ( right ) ) { bracket = right ; } else { return false ; } if ( bracket == ' { ' || bracket == ' ( ' || bracket == ' [ ' ) { const QChar op@@ posit@@ e = ( bracket == ' { ' ? ' } ' : ( bracket == ' ( ' ? ' ) ' : ' ] ' ) ) ; const int max@@ Line = qMin ( cursor . line ( ) + max@@ Lines , doc -> lines ( ) ) ; const bool res = matching@@ Bracket@@ Impl ( doc , highlight , cursor , bracket , op@@ posit@@ e , [ doc , max@@ Line , & columns ] ( K@@ TextEditor :: Cursor & cursor ) { const int column = cursor . column ( ) + 1 ; if ( column == columns ) { columns = doc -> line@@ Length ( cursor . line ( ) ) ; const int line = cursor . line ( ) + 1 ; if ( line > max@@ Line ) { return false ; } cursor . setPosition ( line , 0 ) ; } else { cursor . set@@ Column ( column ) ; } return true ; } ) ; if ( res ) { cursor . set@@ Column ( cursor . column ( ) + 1 ) ; } return res ; } else { const QChar op@@ posit@@ e = ( bracket == ' } ' ? ' { ' : ( bracket == ' ) ' ? ' ( ' : ' [ ' ) ) ; const int min@@ Line = qMax ( cursor . line ( ) - max@@ Lines , 0 ) ; return matching@@ Bracket@@ Impl ( doc , highlight , cursor , bracket , op@@ posit@@ e , [ doc , min@@ Line ] ( K@@ TextEditor :: Cursor & cursor ) { const int column = cursor . column ( ) - 1 ; if ( column == -1 ) { const int line = cursor . line ( ) - 1 ; if ( line < min@@ Line ) { return false ; } cursor . setPosition ( line , doc -> line@@ Length ( line ) ) ; } else { cursor . set@@ Column ( column ) ; } return true ; } ) ; } } </s>


INFO - 01/15/22 17:20:54 - 1 day, 4:56:09 - ========== BT java_sa-rust_sa example ==========
INFO - 01/15/22 17:20:54 - 1 day, 4:56:09 - Generated source sent: </s> fn get_points_between ( x1 : usize , y1 : usize , x2 : usize , y2 : usize ) -> usize { // ▁ given ▁ two ▁ coordinates , ▁ returns ▁ a ▁ list ▁ of ▁ ( x , ▁ y ) ▁ for ▁ all ▁ points ▁ in ▁ between ▁ the ▁ points ENDCOM // ▁ in ▁ between ▁ the ▁ points , ▁ not ▁ including ▁ those ▁ points ▁ in ▁ a ▁ bishop ▁ can ▁ move ▁ from ▁ ( x1 , ▁ y1 ) ▁ to ▁ ( x2 , ▁ y2 ) . ENDCOM let mut points = Vec :: new ( ) ; let mut xDirection = x1 ; let mut yDirection = y1 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; let mut yDirection = y2 ; let mut yDirection = y2 ; let mut xDirection = x2 ; </s>
INFO - 01/15/22 17:20:54 - 1 day, 4:56:09 - Target (x1) sent: </s> public static int [ ] [ ] getPointsBetween ( int x1 , int y1 , int x2 , int y2 ) { // ▁ given ▁ two ▁ coordinates , ▁ returns ▁ a ▁ list ▁ of ▁ ( x , y ) ▁ for ▁ all ▁ points ▁ in ENDCOM // ▁ between , ▁ not ▁ including , ▁ those ▁ points ENDCOM // ▁ only ▁ works ▁ if ▁ a ▁ rook ▁ or ▁ a ▁ bishop ▁ can ▁ move ▁ from ▁ ( x1 , y1 ) ▁ to ▁ ( x2 , y2 ) . ENDCOM ArrayList < int [ ] > points = new ArrayList < int [ ] > ( ) ; int xDirection = 0 ; if ( x1 < x2 ) xDirection = 1 ; else if ( x1 > x2 ) xDirection = - 1 ; int yDirection = 0 ; if ( y1 < y2 ) yDirection = 1 ; else if ( y1 > y2 ) yDirection = - 1 ; for ( int i = 1 ; i < 8 ; i ++ ) { int scanX = x1 + xDirection * i ; int scanY = y1 + yDirection * i ; if ( scanX == x2 && scanY == y2 ) break ; points . add ( new int [ ] { scanX , scanY } ) ; } return points . toArray ( new int [ points . size ( ) ] [ ] ) ; } </s>

INFO - 01/15/22 17:20:54 - 1 day, 4:56:09 - Generated source tok: </s> fn get_@@ points_@@ between ( x1 : usize , y1 : usize , x2 : usize , y2 : usize ) -> usize { // ▁ given ▁ two ▁ coordinates , ▁ returns ▁ a ▁ list ▁ of ▁ ( x , ▁ y ) ▁ for ▁ all ▁ points ▁ in ▁ between ▁ the ▁ points ENDCOM // ▁ in ▁ between ▁ the ▁ points , ▁ not ▁ including ▁ those ▁ points ▁ in ▁ a ▁ bi@@ shop ▁ can ▁ move ▁ from ▁ ( x1 , ▁ y1 ) ▁ to ▁ ( x2 , ▁ y2 ) . ENDCOM let mut points = Vec :: new ( ) ; let mut x@@ Direction = x1 ; let mut y@@ Direction = y1 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; let mut y@@ Direction = y2 ; let mut y@@ Direction = y2 ; let mut x@@ Direction = x2 ; </s>
INFO - 01/15/22 17:20:54 - 1 day, 4:56:09 - Target (x1) tok: </s> public static int [ ] [ ] get@@ Points@@ Between ( int x1 , int y1 , int x2 , int y2 ) { // ▁ given ▁ two ▁ coordinates , ▁ returns ▁ a ▁ list ▁ of ▁ ( x , y ) ▁ for ▁ all ▁ points ▁ in ENDCOM // ▁ between , ▁ not ▁ including , ▁ those ▁ points ENDCOM // ▁ only ▁ works ▁ if ▁ a ▁ ro@@ ok ▁ or ▁ a ▁ bi@@ shop ▁ can ▁ move ▁ from ▁ ( x1 , y1 ) ▁ to ▁ ( x2 , y2 ) . ENDCOM ArrayList < int [ ] > points = new ArrayList < int [ ] > ( ) ; int x@@ Direction = 0 ; if ( x1 < x2 ) x@@ Direction = 1 ; else if ( x1 > x2 ) x@@ Direction = - 1 ; int y@@ Direction = 0 ; if ( y1 < y2 ) y@@ Direction = 1 ; else if ( y1 > y2 ) y@@ Direction = - 1 ; for ( int i = 1 ; i < 8 ; i ++ ) { int scan@@ X = x1 + x@@ Direction * i ; int scan@@ Y = y1 + y@@ Direction * i ; if ( scan@@ X == x2 && scan@@ Y == y2 ) break ; points . add ( new int [ ] { scan@@ X , scan@@ Y } ) ; } return points . toArray ( new int [ points . size ( ) ] [ ] ) ; } </s>


INFO - 01/15/22 17:20:59 - 1 day, 4:56:14 - ========== BT cpp_sa-go_sa example ==========
INFO - 01/15/22 17:20:59 - 1 day, 4:56:14 - Generated source sent: </s> func f5 ( x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , </s>
INFO - 01/15/22 17:20:59 - 1 day, 4:56:14 - Target (x1) sent: </s> uint32_t inline f5 ( uint32_t x , uint32_t y , uint32_t z ) { return x ^ ( y | ~ z ) ; } </s>

INFO - 01/15/22 17:20:59 - 1 day, 4:56:14 - Generated source tok: </s> func f5 ( x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , w , h , x , y , z , </s>
INFO - 01/15/22 17:20:59 - 1 day, 4:56:14 - Target (x1) tok: </s> uint32_t inline f5 ( uint32_t x , uint32_t y , uint32_t z ) { return x ^ ( y | ~ z ) ; } </s>


INFO - 01/15/22 17:21:27 - 1 day, 4:56:43 - ========== BT java_sa-cpp_sa example ==========
INFO - 01/15/22 17:21:28 - 1 day, 4:56:43 - Generated source sent: </s> // / ▁ Decodes ▁ a ▁ PNG ▁ previously ▁ encoded ▁ PNG ▁ previously ▁ encoded ▁ by ▁ this ▁ class ▁ from ▁ a ▁ < code > File < / code > ▁ to ▁ another ▁ < code > File < / code > . ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ </s>
INFO - 01/15/22 17:21:28 - 1 day, 4:56:43 - Target (x1) sent: </s> /* * STRNEWLINE TABSYMBOL ▁ * ▁ Decodes ▁ a ▁ PNG ▁ previously ▁ encoded ▁ by ▁ this ▁ class ▁ from ▁ STRNEWLINE TABSYMBOL ▁ * ▁ a ▁ < code > File < / code > ▁ to ▁ another ▁ < code > File < / code > . STRNEWLINE TABSYMBOL ▁ * ▁ STRNEWLINE TABSYMBOL ▁ * ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNGs ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ STRNEWLINE TABSYMBOL ▁ * ▁ < code > encodeToPng ( ) < / code > ▁ methods . ▁ It ▁ will ▁ throw ▁ an ▁ exception ▁ if STRNEWLINE TABSYMBOL ▁ * ▁ any ▁ other ▁ PNGs ▁ are ▁ read . STRNEWLINE TABSYMBOL ▁ * ▁ STRNEWLINE TABSYMBOL ▁ * ▁ @ param ▁ srcFile ▁ File ▁ to ▁ be ▁ read ▁ pointing ▁ to ▁ the ▁ input ▁ data ▁ ( 24 - bit ▁ PNG ) STRNEWLINE TABSYMBOL ▁ * ▁ @ param ▁ destFile ▁ File ▁ to ▁ be ▁ written ▁ the ▁ original ▁ data ▁ to ▁ ( payload ) ▁ STRNEWLINE TABSYMBOL ▁ * ▁ @ throws ▁ IOException ▁ Thrown ▁ if ▁ the ▁ input / output ▁ stream ▁ cannot ▁ be ▁ read / written STRNEWLINE TABSYMBOL ▁ */ public static void decodeFromPng ( File srcFile , File destFile ) throws IOException { decodeFromPng ( new FileInputStream ( srcFile ) , new FileOutputStream ( destFile ) ) ; } </s>

INFO - 01/15/22 17:21:28 - 1 day, 4:56:43 - Generated source tok: </s> // / ▁ Decode@@ s ▁ a ▁ PNG ▁ previously ▁ encoded ▁ PNG ▁ previously ▁ encoded ▁ by ▁ this ▁ class ▁ from ▁ a ▁ < code > File < / code > ▁ to ▁ another ▁ < code > File < / code > . ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ following ▁ methods : ENDCOM // / ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ </s>
INFO - 01/15/22 17:21:28 - 1 day, 4:56:43 - Target (x1) tok: </s> /* * STRNEWLINE TABSYMBOL ▁ * ▁ Decode@@ s ▁ a ▁ PNG ▁ previously ▁ encoded ▁ by ▁ this ▁ class ▁ from ▁ STRNEWLINE TABSYMBOL ▁ * ▁ a ▁ < code > File < / code > ▁ to ▁ another ▁ < code > File < / code > . STRNEWLINE TABSYMBOL ▁ * ▁ STRNEWLINE TABSYMBOL ▁ * ▁ < p > The ▁ method ▁ can ▁ only ▁ read ▁ PNG@@ s ▁ that ▁ were ▁ encoded ▁ using ▁ one ▁ of ▁ the ▁ STRNEWLINE TABSYMBOL ▁ * ▁ < code > encode@@ To@@ P@@ ng ( ) < / code > ▁ methods . ▁ It ▁ will ▁ throw ▁ an ▁ exception ▁ if STRNEWLINE TABSYMBOL ▁ * ▁ any ▁ other ▁ PNG@@ s ▁ are ▁ read . STRNEWLINE TABSYMBOL ▁ * ▁ STRNEWLINE TABSYMBOL ▁ * ▁ @ param ▁ src@@ File ▁ File ▁ to ▁ be ▁ read ▁ point@@ ing ▁ to ▁ the ▁ input ▁ data ▁ ( 24 - bit ▁ PNG ) STRNEWLINE TABSYMBOL ▁ * ▁ @ param ▁ dest@@ File ▁ File ▁ to ▁ be ▁ written ▁ the ▁ original ▁ data ▁ to ▁ ( payload ) ▁ STRNEWLINE TABSYMBOL ▁ * ▁ @ throws ▁ IOException ▁ Thrown ▁ if ▁ the ▁ input / output ▁ stream ▁ cannot ▁ be ▁ read / written STRNEWLINE TABSYMBOL ▁ */ public static void decode@@ From@@ P@@ ng ( File src@@ File , File dest@@ File ) throws IOException { decode@@ From@@ P@@ ng ( new FileInputStream ( src@@ File ) , new FileOutputStream ( dest@@ File ) ) ; } </s>


INFO - 01/15/22 17:21:46 - 1 day, 4:57:01 - ========== BT cpp_sa-rust_sa example ==========
INFO - 01/15/22 17:21:46 - 1 day, 4:57:01 - Generated source sent: </s> fn test_import_umount ( ) { let ( _tmpdir , manifest ) = clone_out_test ( " . . / . . / . . / python2.7 / python2.7 / python2.7 / src / numpy / numpy _ import _ umount . py " ) ; let mut archive = Archive :: new ( & manifest ) . unwrap ( ) ; let cdef = import ! ( " numpy . multiarray " , " numpy . multiarray " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umount " , " numpy . umount " ) ; let cdef = import ! ( " numpy . umo</s>
INFO - 01/15/22 17:21:46 - 1 day, 4:57:01 - Target (x1) sent: </s> /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python2.7 / dist - packages / Cython / Includes / numpy / _ _ init _ _ . pxd " :991 STRNEWLINE ▁ * ▁ raise ▁ ImportError ( " numpy . core . multiarray ▁ failed ▁ to ▁ import " ) STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ cdef ▁ inline ▁ int ▁ import _ umath ( ) ▁ except ▁ - 1 : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ try : STRNEWLINE ▁ * ▁ _ import _ umath ( ) STRNEWLINE ▁ */ ENDCOM static CYTHON_INLINE int __pyx_f_5numpy_import_umath ( void ) { int __pyx_r ; __Pyx_RefNannyDeclarations PyObject * __pyx_t_1 = NULL ; PyObject * __pyx_t_2 = NULL ; PyObject * __pyx_t_3 = NULL ; int __pyx_t_4 ; PyObject * __pyx_t_5 = NULL ; PyObject * __pyx_t_6 = NULL ; PyObject * __pyx_t_7 = NULL ; PyObject * __pyx_t_8 = NULL ; __Pyx_RefNannySetupContext ( " import _ umath " , 0 ) ; /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python2.7 / dist - packages / Cython / Includes / numpy / _ _ init _ _ . pxd " :992 STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ cdef ▁ inline ▁ int ▁ import _ umath ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ * ▁ try : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ _ import _ umath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ */ ENDCOM { __Pyx_PyThreadState_declare __Pyx_PyThreadState_assign __Pyx_ExceptionSave ( & __pyx_t_1 , & __pyx_t_2 , & __pyx_t_3 ) ; __Pyx_XGOTREF ( __pyx_t_1 ) ; __Pyx_XGOTREF ( __pyx_t_2 ) ; __Pyx_XGOTREF ( __pyx_t_3 ) ; /* try : */ ENDCOM { /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python2.7 / dist - packages / Cython / Includes / numpy / _ _ init _ _ . pxd " :993 STRNEWLINE ▁ * ▁ cdef ▁ inline ▁ int ▁ import _ umath ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ * ▁ try : STRNEWLINE ▁ * ▁ _ import _ umath ( ) ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ * ▁ raise ▁ ImportError ( " numpy . core . umath ▁ failed ▁ to ▁ import " ) STRNEWLINE ▁ */ ENDCOM __pyx_t_4 = _import_umath ( ) ; if ( unlikely ( __pyx_t_4 == -1 ) ) __PYX_ERR ( 1 , 993 , __pyx_L3_error ) /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python2.7 / dist - packages / Cython / Includes / numpy / _ _ init _ _ . pxd " :992 STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ cdef ▁ inline ▁ int ▁ import _ umath ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ * ▁ try : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ _ import _ umath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ */ ENDCOM } __Pyx_XDECREF ( __pyx_t_1 ) ; __pyx_t_1 = 0 ; __Pyx_XDECREF ( __pyx_t_2 ) ; __pyx_t_2 = 0 ; __Pyx_XDECREF ( __pyx_t_3 ) ; __pyx_t_3 = 0 ; goto __pyx_L8_try_end ; __pyx_L3_error : ; __Pyx_PyThreadState_assign /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python2.7 / dist - packages / Cython / Includes / numpy / _ _ init _ _ . pxd " :994 STRNEWLINE ▁ * ▁ try : STRNEWLINE ▁ * ▁ _ import _ umath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ raise ▁ ImportError ( " numpy . core . umath ▁ failed ▁ to ▁ import " ) STRNEWLINE ▁ * ▁ STRNEWLINE ▁ */ ENDCOM __pyx_t_4 = __Pyx_PyErr_ExceptionMatches ( ( ( PyObject * ) ( & ( ( PyTypeObject * ) PyExc_Exception ) [ 0 ] ) ) ) ; if ( __pyx_t_4 ) { __Pyx_AddTraceback ( " numpy . import _ umath " , __pyx_clineno , __pyx_lineno , __pyx_filename ) ; if ( __Pyx_GetException ( & __pyx_t_5 , & __pyx_t_6 , & __pyx_t_7 ) < 0 ) __PYX_ERR ( 1 , 994 , __pyx_L5_except_error ) __Pyx_GOTREF ( __pyx_t_5 ) ; __Pyx_GOTREF ( __pyx_t_6 ) ; __Pyx_GOTREF ( __pyx_t_7 ) ; /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python2.7 / dist - packages / Cython / Includes / numpy / _ _ init _ _ . pxd " :995 STRNEWLINE ▁ * ▁ _ import _ umath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ * ▁ raise ▁ ImportError ( " numpy . core . umath ▁ failed ▁ to ▁ import " ) ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ cdef ▁ inline ▁ int ▁ import _ ufunc ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ */ ENDCOM __pyx_t_8 = __Pyx_PyObject_Call ( __pyx_builtin_ImportError , __pyx_tuple__9 , NULL ) ; if ( unlikely ( ! __pyx_t_8 ) ) __PYX_ERR ( 1 , 995 , __pyx_L5_except_error ) __Pyx_GOTREF ( __pyx_t_8 ) ; __Pyx_Raise ( __pyx_t_8 , 0 , 0 , 0 ) ; __Pyx_DECREF ( __pyx_t_8 ) ; __pyx_t_8 = 0 ; __PYX_ERR ( 1 , 995 , __pyx_L5_except_error ) } goto __pyx_L5_except_error ; __pyx_L5_except_error : ; /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python2.7 / dist - packages / Cython / Includes / numpy / _ _ init _ _ . pxd " :992 STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ cdef ▁ inline ▁ int ▁ import _ umath ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ * ▁ try : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ _ import _ umath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ */ ENDCOM __Pyx_PyThreadState_assign __Pyx_XGIVEREF ( __pyx_t_1 ) ; __Pyx_XGIVEREF ( __pyx_t_2 ) ; __Pyx_XGIVEREF ( __pyx_t_3 ) ; __Pyx_ExceptionReset ( __pyx_t_1 , __pyx_t_2 , __pyx_t_3 ) ; goto __pyx_L1_error ; __pyx_L8_try_end : ; } /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python2.7 / dist - packages / Cython / Includes / numpy / _ _ init _ _ . pxd " :991 STRNEWLINE ▁ * ▁ raise ▁ ImportError ( " numpy . core . multiarray ▁ failed ▁ to ▁ import " ) STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ cdef ▁ inline ▁ int ▁ import _ umath ( ) ▁ except ▁ - 1 : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ try : STRNEWLINE ▁ * ▁ _ import _ umath ( ) STRNEWLINE ▁ */ ENDCOM /* ▁ function ▁ exit ▁ code ▁ */ ENDCOM __pyx_r = 0 ; goto __pyx_L0 ; __pyx_L1_error : ; __Pyx_XDECREF ( __pyx_t_5 ) ; __Pyx_XDECREF ( __pyx_t_6 ) ; __Pyx_XDECREF ( __pyx_t_7 ) ; __Pyx_XDECREF ( __pyx_t_8 ) ; __Pyx_AddTraceback ( " numpy . import _ umath " , __pyx_clineno , __pyx_lineno , __pyx_filename ) ; __pyx_r = -1 ; __pyx_L0 : ; __Pyx_RefNannyFinishContext ( ) ; return __pyx_r ; } </s>

INFO - 01/15/22 17:21:46 - 1 day, 4:57:01 - Generated source tok: </s> fn test_@@ import_@@ um@@ o@@ unt ( ) { let ( _@@ tmpdir , manifest ) = clone_@@ out_@@ test ( " . . / . . / . . / python@@ 2.@@ 7 / python@@ 2.@@ 7 / python@@ 2.@@ 7 / src / nump@@ y / nump@@ y _ import _ um@@ o@@ unt . py " ) ; let mut archive = Archive :: new ( & manifest ) . unwrap ( ) ; let c@@ def = import ! ( " nump@@ y . multi@@ array " , " nump@@ y . multi@@ array " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ unt " , " nump@@ y . um@@ o@@ unt " ) ; let c@@ def = import ! ( " nump@@ y . um@@ o@@ </s>
INFO - 01/15/22 17:21:46 - 1 day, 4:57:01 - Target (x1) tok: </s> /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python@@ 2.@@ 7 / dist - packages / Cy@@ thon / Includes / nump@@ y / _ _ init _ _ . px@@ d " :@@ 99@@ 1 STRNEWLINE ▁ * ▁ raise ▁ Import@@ Error ( " nump@@ y . core . multi@@ array ▁ failed ▁ to ▁ import " ) STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ c@@ def ▁ inline ▁ int ▁ import _ um@@ ath ( ) ▁ except ▁ - 1 : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ try : STRNEWLINE ▁ * ▁ _ import _ um@@ ath ( ) STRNEWLINE ▁ */ ENDCOM static CYTHON_@@ INLINE int __pyx_@@ f_@@ 5@@ nump@@ y_@@ import_@@ um@@ ath ( void ) { int __pyx_r ; __Pyx_RefNanny@@ Declarations PyObject * __pyx_t_1 = NULL ; PyObject * __pyx_t_2 = NULL ; PyObject * __pyx_t_3 = NULL ; int __pyx_t_4 ; PyObject * __pyx_t_5 = NULL ; PyObject * __pyx_t_6 = NULL ; PyObject * __pyx_t_@@ 7 = NULL ; PyObject * __pyx_t_@@ 8 = NULL ; __Pyx_RefNanny@@ Setup@@ Context ( " import _ um@@ ath " , 0 ) ; /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python@@ 2.@@ 7 / dist - packages / Cy@@ thon / Includes / nump@@ y / _ _ init _ _ . px@@ d " :@@ 992 STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ c@@ def ▁ inline ▁ int ▁ import _ um@@ ath ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ * ▁ try : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ _ import _ um@@ ath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ */ ENDCOM { __Pyx_Py@@ Thread@@ State_@@ declare __Pyx_Py@@ Thread@@ State_@@ assign __Pyx_@@ Exception@@ Save ( & __pyx_t_1 , & __pyx_t_2 , & __pyx_t_3 ) ; __Pyx_@@ X@@ GOTREF ( __pyx_t_1 ) ; __Pyx_@@ X@@ GOTREF ( __pyx_t_2 ) ; __Pyx_@@ X@@ GOTREF ( __pyx_t_3 ) ; /* try : */ ENDCOM { /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python@@ 2.@@ 7 / dist - packages / Cy@@ thon / Includes / nump@@ y / _ _ init _ _ . px@@ d " :@@ 99@@ 3 STRNEWLINE ▁ * ▁ c@@ def ▁ inline ▁ int ▁ import _ um@@ ath ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ * ▁ try : STRNEWLINE ▁ * ▁ _ import _ um@@ ath ( ) ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ * ▁ raise ▁ Import@@ Error ( " nump@@ y . core . um@@ ath ▁ failed ▁ to ▁ import " ) STRNEWLINE ▁ */ ENDCOM __pyx_t_4 = _@@ import_@@ um@@ ath ( ) ; if ( unlikely ( __pyx_t_4 == -1 ) ) __PYX_@@ ERR ( 1 , 99@@ 3 , __pyx_L@@ 3_@@ error ) /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python@@ 2.@@ 7 / dist - packages / Cy@@ thon / Includes / nump@@ y / _ _ init _ _ . px@@ d " :@@ 992 STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ c@@ def ▁ inline ▁ int ▁ import _ um@@ ath ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ * ▁ try : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ _ import _ um@@ ath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ */ ENDCOM } __Pyx_@@ XDECREF ( __pyx_t_1 ) ; __pyx_t_1 = 0 ; __Pyx_@@ XDECREF ( __pyx_t_2 ) ; __pyx_t_2 = 0 ; __Pyx_@@ XDECREF ( __pyx_t_3 ) ; __pyx_t_3 = 0 ; goto __pyx_L@@ 8_@@ try_@@ end ; __pyx_L@@ 3_@@ error : ; __Pyx_Py@@ Thread@@ State_@@ assign /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python@@ 2.@@ 7 / dist - packages / Cy@@ thon / Includes / nump@@ y / _ _ init _ _ . px@@ d " :@@ 99@@ 4 STRNEWLINE ▁ * ▁ try : STRNEWLINE ▁ * ▁ _ import _ um@@ ath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ raise ▁ Import@@ Error ( " nump@@ y . core . um@@ ath ▁ failed ▁ to ▁ import " ) STRNEWLINE ▁ * ▁ STRNEWLINE ▁ */ ENDCOM __pyx_t_4 = __Pyx_@@ PyErr_@@ Exception@@ Matches ( ( ( PyObject * ) ( & ( ( Py@@ TypeObject * ) PyExc_@@ Exception ) [ 0 ] ) ) ) ; if ( __pyx_t_4 ) { __Pyx_@@ Add@@ Trace@@ back ( " nump@@ y . import _ um@@ ath " , __pyx_clineno , __pyx_lineno , __pyx_filename ) ; if ( __Pyx_@@ Get@@ Exception ( & __pyx_t_5 , & __pyx_t_6 , & __pyx_t_@@ 7 ) < 0 ) __PYX_@@ ERR ( 1 , 99@@ 4 , __pyx_L@@ 5_@@ excep@@ t_@@ error ) __Pyx_GOTREF ( __pyx_t_5 ) ; __Pyx_GOTREF ( __pyx_t_6 ) ; __Pyx_GOTREF ( __pyx_t_@@ 7 ) ; /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python@@ 2.@@ 7 / dist - packages / Cy@@ thon / Includes / nump@@ y / _ _ init _ _ . px@@ d " :@@ 99@@ 5 STRNEWLINE ▁ * ▁ _ import _ um@@ ath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ * ▁ raise ▁ Import@@ Error ( " nump@@ y . core . um@@ ath ▁ failed ▁ to ▁ import " ) ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ c@@ def ▁ inline ▁ int ▁ import _ u@@ func ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ */ ENDCOM __pyx_t_@@ 8 = __Pyx_@@ PyObject_@@ Call ( __pyx_@@ builtin_@@ Import@@ Error , __pyx_@@ tuple@@ __@@ 9 , NULL ) ; if ( unlikely ( ! __pyx_t_@@ 8 ) ) __PYX_@@ ERR ( 1 , 99@@ 5 , __pyx_L@@ 5_@@ excep@@ t_@@ error ) __Pyx_GOTREF ( __pyx_t_@@ 8 ) ; __Pyx_@@ Rai@@ se ( __pyx_t_@@ 8 , 0 , 0 , 0 ) ; __Pyx_DECREF ( __pyx_t_@@ 8 ) ; __pyx_t_@@ 8 = 0 ; __PYX_@@ ERR ( 1 , 99@@ 5 , __pyx_L@@ 5_@@ excep@@ t_@@ error ) } goto __pyx_L@@ 5_@@ excep@@ t_@@ error ; __pyx_L@@ 5_@@ excep@@ t_@@ error : ; /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python@@ 2.@@ 7 / dist - packages / Cy@@ thon / Includes / nump@@ y / _ _ init _ _ . px@@ d " :@@ 992 STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ c@@ def ▁ inline ▁ int ▁ import _ um@@ ath ( ) ▁ except ▁ - 1 : STRNEWLINE ▁ * ▁ try : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ _ import _ um@@ ath ( ) STRNEWLINE ▁ * ▁ except ▁ Exception : STRNEWLINE ▁ */ ENDCOM __Pyx_Py@@ Thread@@ State_@@ assign __Pyx_@@ X@@ GI@@ VER@@ EF ( __pyx_t_1 ) ; __Pyx_@@ X@@ GI@@ VER@@ EF ( __pyx_t_2 ) ; __Pyx_@@ X@@ GI@@ VER@@ EF ( __pyx_t_3 ) ; __Pyx_@@ Exception@@ Reset ( __pyx_t_1 , __pyx_t_2 , __pyx_t_3 ) ; goto __pyx_L1_error ; __pyx_L@@ 8_@@ try_@@ end : ; } /* ▁ " . . / . . / . . / . . / . . / . . / . . / usr / lib / python@@ 2.@@ 7 / dist - packages / Cy@@ thon / Includes / nump@@ y / _ _ init _ _ . px@@ d " :@@ 99@@ 1 STRNEWLINE ▁ * ▁ raise ▁ Import@@ Error ( " nump@@ y . core . multi@@ array ▁ failed ▁ to ▁ import " ) STRNEWLINE ▁ * ▁ STRNEWLINE ▁ * ▁ c@@ def ▁ inline ▁ int ▁ import _ um@@ ath ( ) ▁ except ▁ - 1 : ▁ # ▁ < < < < < STRNEWLINE ▁ * ▁ try : STRNEWLINE ▁ * ▁ _ import _ um@@ ath ( ) STRNEWLINE ▁ */ ENDCOM /* ▁ function ▁ exit ▁ code ▁ */ ENDCOM __pyx_r = 0 ; goto __pyx_L@@ 0 ; __pyx_L1_error : ; __Pyx_@@ XDECREF ( __pyx_t_5 ) ; __Pyx_@@ XDECREF ( __pyx_t_6 ) ; __Pyx_@@ XDECREF ( __pyx_t_@@ 7 ) ; __Pyx_@@ XDECREF ( __pyx_t_@@ 8 ) ; __Pyx_@@ Add@@ Trace@@ back ( " nump@@ y . import _ um@@ ath " , __pyx_clineno , __pyx_lineno , __pyx_filename ) ; __pyx_r = -1 ; __pyx_L@@ 0 : ; __Pyx_RefNanny@@ Finish@@ Context ( ) ; return __pyx_r ; } </s>


INFO - 01/15/22 17:21:54 - 1 day, 4:57:09 - ========== BT rust_sa-cpp_sa example ==========
INFO - 01/15/22 17:21:54 - 1 day, 4:57:09 - Generated source sent: </s> void unsaved_attachment_serialize ( ) { char * content = " This ▁ is ▁ the ▁ attachment ▁ content . " ; UnsavedAttachment attachment ; UnsavedAttachment :: serialize ( content , & attachment ) ; } </s>
INFO - 01/15/22 17:21:54 - 1 day, 4:57:09 - Target (x1) sent: </s> fn unsaved_attachment_serialize ( ) { let content = " This ▁ is ▁ the ▁ attachment . " ; let attachment = UnsavedAttachment { content_type : mime ! ( Text / Plain ) , content : content . to_string ( ) . into_bytes ( ) , } ; let encoded = serde_json :: to_string ( & attachment ) . unwrap ( ) ; let expected = serde_json :: builder :: ObjectBuilder :: new ( ) . insert ( " content _ type " , " text / plain " ) . insert ( " data " , base64 :: encode ( content . as_bytes ( ) ) ) . build ( ) ; let got = serde_json :: from_str ( & encoded ) . unwrap ( ) ; assert_eq ! ( expected , got ) ; } </s>

INFO - 01/15/22 17:21:54 - 1 day, 4:57:09 - Generated source tok: </s> void un@@ saved_@@ attach@@ ment_@@ serialize ( ) { char * content = " This ▁ is ▁ the ▁ attachment ▁ content . " ; Un@@ saved@@ Attachment attachment ; Un@@ saved@@ Attachment :: serialize ( content , & attachment ) ; } </s>
INFO - 01/15/22 17:21:54 - 1 day, 4:57:09 - Target (x1) tok: </s> fn un@@ saved_@@ attach@@ ment_@@ serialize ( ) { let content = " This ▁ is ▁ the ▁ attachment . " ; let attachment = Un@@ saved@@ Attachment { content_type : mime ! ( Text / Plain ) , content : content . to_string ( ) . into_bytes ( ) , } ; let encoded = serde_json :: to_string ( & attachment ) . unwrap ( ) ; let expected = serde_json :: builder :: Object@@ Builder :: new ( ) . insert ( " content _ type " , " text / plain " ) . insert ( " data " , base64 :: encode ( content . as_bytes ( ) ) ) . build ( ) ; let got = serde_json :: from_str ( & encoded ) . unwrap ( ) ; assert_eq ! ( expected , got ) ; } </s>


INFO - 01/15/22 17:22:19 - 1 day, 4:57:34 - ========== BT go_sa-rust_sa example ==========
INFO - 01/15/22 17:22:19 - 1 day, 4:57:34 - Generated source sent: </s> fn spoc < ' a > ( rule : & ' a groupedRule , inIntf : & ' a mut InterfaceIntf , ) -> Result < ( ) , String > { // ▁ Source ▁ is ▁ interface ▁ of ▁ current ▁ router . ENDCOM if rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Ignore ▁ semi _ managed _ router ▁ and ▁ superinterfaces . ENDCOM let mut r = rule . clone ( ) ; if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ This ▁ is ▁ only ▁ called ▁ if ▁ dst ▁ is ▁ some ▁ superinterface . ENDCOM let dst = & rule . dst ; // ▁ Non - matching ▁ rule ▁ will ▁ be ▁ ignored ▁ at ▁ ' managed ' ▁ and ▁ ' superinterfaces ' . ENDCOM if ! dst . is_managed ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if </s>
INFO - 01/15/22 17:22:19 - 1 day, 4:57:34 - Target (x1) sent: </s> func ( c * spoc ) checkSupernetDstRule ( rule * groupedRule , inIntf , outIntf * routerIntf , info checkInfo ) { // ▁ Source ▁ is ▁ interface ▁ of ▁ current ▁ router . ENDCOM if inIntf == nil { return NEW_LINE } NEW_LINE // ▁ Ignore ▁ semi _ managed ▁ router . ENDCOM r := inIntf . router NEW_LINE if r . managed == " " { return NEW_LINE } NEW_LINE // ▁ This ▁ is ▁ only ▁ called ▁ if ▁ dst ▁ is ▁ some ▁ supernet . ENDCOM dst := rule . dst [ 0 ] . ( * network ) NEW_LINE // ▁ Non ▁ matching ▁ rule ▁ will ▁ be ▁ ignored ▁ at ▁ ' managed = local ' ▁ router ▁ and ENDCOM // ▁ hence ▁ must ▁ not ▁ be ▁ checked . ENDCOM if ! isFilteredAt ( r , dst , rule . src ) { return NEW_LINE } NEW_LINE srcZone := rule . srcPath . getZone ( ) NEW_LINE dstZone := dst . zone NEW_LINE // ▁ Check ▁ case ▁ II , ▁ outgoing ▁ ACL , ▁ ( B ) , ▁ interface ▁ Y ▁ without ▁ ACL . ENDCOM if noAclIntf := r . noInAcl ; noAclIntf != nil { noAclZone := noAclIntf . zone NEW_LINE if zoneEq ( noAclZone , srcZone ) { // ▁ a ) ▁ src ▁ behind ▁ Y ENDCOM } else if zoneEq ( noAclZone , dstZone ) { // ▁ b ) ▁ src ▁ not ▁ behind ▁ Y ENDCOM // ▁ zone ▁ X ▁ = = ▁ zone ▁ Y ENDCOM } else { // ▁ zone ▁ X ▁ ! = ▁ zone ▁ Y ENDCOM c . checkSupernetInZone ( rule , " dst " , inIntf , noAclZone , info , false ) NEW_LINE } NEW_LINE return NEW_LINE } NEW_LINE // ▁ Check ▁ security ▁ zones ▁ at ▁ all ▁ interfaces ▁ except ▁ those ▁ connected ENDCOM // ▁ to ▁ dst ▁ or ▁ src . ENDCOM // ▁ For ▁ devices ▁ which ▁ have ▁ rules ▁ for ▁ each ▁ pair ▁ of ▁ incoming ▁ and ▁ outgoing ENDCOM // ▁ interfaces ▁ we ▁ only ▁ need ▁ to ▁ check ▁ the ▁ direct ▁ path ▁ to ▁ dst . ENDCOM inZone := inIntf . zone NEW_LINE check := func ( intf * routerIntf ) { // ▁ Check ▁ each ▁ intermediate ▁ zone ▁ only ▁ once ▁ at ▁ outgoing ▁ interface . ENDCOM if intf == inIntf { return NEW_LINE } NEW_LINE if intf . loopback { return NEW_LINE } NEW_LINE // ▁ Don ' t ▁ check ▁ interface ▁ where ▁ src ▁ or ▁ dst ▁ is ▁ attached . ENDCOM zone := intf . zone NEW_LINE if zoneEq ( zone , srcZone ) { return NEW_LINE } NEW_LINE if zoneEq ( zone , dstZone ) { return NEW_LINE } NEW_LINE if zoneEq ( zone , inZone ) { return NEW_LINE } NEW_LINE if intf . mainIntf != nil { return NEW_LINE } NEW_LINE c . checkSupernetInZone ( rule , " dst " , inIntf , zone , info , false ) NEW_LINE } NEW_LINE if r . model . hasIoACL { check ( outIntf ) NEW_LINE } else { for _ , intf := range r . interfaces { check ( intf ) NEW_LINE } NEW_LINE } NEW_LINE } </s>

INFO - 01/15/22 17:22:19 - 1 day, 4:57:34 - Generated source tok: </s> fn sp@@ oc < ' a > ( rule : & ' a group@@ ed@@ Rule , in@@ Intf : & ' a mut Interface@@ Intf , ) -> Result < ( ) , String > { // ▁ Source ▁ is ▁ interface ▁ of ▁ current ▁ router . ENDCOM if rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Ignore ▁ semi _ managed _ router ▁ and ▁ super@@ interfaces . ENDCOM let mut r = rule . clone ( ) ; if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ This ▁ is ▁ only ▁ called ▁ if ▁ dst ▁ is ▁ some ▁ super@@ interface . ENDCOM let dst = & rule . dst ; // ▁ Non - matching ▁ rule ▁ will ▁ be ▁ ignored ▁ at ▁ ' managed ' ▁ and ▁ ' super@@ interfaces ' . ENDCOM if ! dst . is_@@ managed ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if ! rule . is_@@ interface ( ) { return Ok ( ( ) ) ; } // ▁ Don ' t ▁ allow ▁ all ▁ interfaces ▁ to ▁ be ▁ ignored . ENDCOM if </s>
INFO - 01/15/22 17:22:19 - 1 day, 4:57:34 - Target (x1) tok: </s> func ( c * sp@@ oc ) check@@ Sup@@ ernet@@ Dst@@ Rule ( rule * group@@ ed@@ Rule , in@@ Intf , out@@ Intf * router@@ Intf , info check@@ Info ) { // ▁ Source ▁ is ▁ interface ▁ of ▁ current ▁ router . ENDCOM if in@@ Intf == nil { return NEW_LINE } NEW_LINE // ▁ Ignore ▁ semi _ managed ▁ router . ENDCOM r := in@@ Intf . router NEW_LINE if r . managed == " " { return NEW_LINE } NEW_LINE // ▁ This ▁ is ▁ only ▁ called ▁ if ▁ dst ▁ is ▁ some ▁ super@@ net . ENDCOM dst := rule . dst [ 0 ] . ( * network ) NEW_LINE // ▁ Non ▁ matching ▁ rule ▁ will ▁ be ▁ ignored ▁ at ▁ ' managed = local ' ▁ router ▁ and ENDCOM // ▁ h@@ ence ▁ must ▁ not ▁ be ▁ checked . ENDCOM if ! is@@ Filtered@@ At ( r , dst , rule . src ) { return NEW_LINE } NEW_LINE src@@ Zone := rule . srcPath . get@@ Zone ( ) NEW_LINE dst@@ Zone := dst . zone NEW_LINE // ▁ Check ▁ case ▁ II , ▁ outgoing ▁ ACL , ▁ ( B ) , ▁ interface ▁ Y ▁ without ▁ ACL . ENDCOM if no@@ Acl@@ Intf := r . no@@ In@@ Acl ; no@@ Acl@@ Intf != nil { no@@ Acl@@ Zone := no@@ Acl@@ Intf . zone NEW_LINE if zone@@ Eq ( no@@ Acl@@ Zone , src@@ Zone ) { // ▁ a ) ▁ src ▁ beh@@ ind ▁ Y ENDCOM } else if zone@@ Eq ( no@@ Acl@@ Zone , dst@@ Zone ) { // ▁ b ) ▁ src ▁ not ▁ beh@@ ind ▁ Y ENDCOM // ▁ zone ▁ X ▁ = = ▁ zone ▁ Y ENDCOM } else { // ▁ zone ▁ X ▁ ! = ▁ zone ▁ Y ENDCOM c . check@@ Sup@@ ernet@@ In@@ Zone ( rule , " dst " , in@@ Intf , no@@ Acl@@ Zone , info , false ) NEW_LINE } NEW_LINE return NEW_LINE } NEW_LINE // ▁ Check ▁ security ▁ zones ▁ at ▁ all ▁ interfaces ▁ except ▁ those ▁ connected ENDCOM // ▁ to ▁ dst ▁ or ▁ src . ENDCOM // ▁ For ▁ devices ▁ which ▁ have ▁ rules ▁ for ▁ each ▁ pair ▁ of ▁ incoming ▁ and ▁ outgoing ENDCOM // ▁ interfaces ▁ we ▁ only ▁ need ▁ to ▁ check ▁ the ▁ direct ▁ path ▁ to ▁ dst . ENDCOM in@@ Zone := in@@ Intf . zone NEW_LINE check := func ( intf * router@@ Intf ) { // ▁ Check ▁ each ▁ intermediate ▁ zone ▁ only ▁ once ▁ at ▁ outgoing ▁ interface . ENDCOM if intf == in@@ Intf { return NEW_LINE } NEW_LINE if intf . loopback { return NEW_LINE } NEW_LINE // ▁ Don ' t ▁ check ▁ interface ▁ where ▁ src ▁ or ▁ dst ▁ is ▁ attached . ENDCOM zone := intf . zone NEW_LINE if zone@@ Eq ( zone , src@@ Zone ) { return NEW_LINE } NEW_LINE if zone@@ Eq ( zone , dst@@ Zone ) { return NEW_LINE } NEW_LINE if zone@@ Eq ( zone , in@@ Zone ) { return NEW_LINE } NEW_LINE if intf . main@@ Intf != nil { return NEW_LINE } NEW_LINE c . check@@ Sup@@ ernet@@ In@@ Zone ( rule , " dst " , in@@ Intf , zone , info , false ) NEW_LINE } NEW_LINE if r . model . has@@ Io@@ ACL { check ( out@@ Intf ) NEW_LINE } else { for _ , intf := range r . interfaces { check ( intf ) NEW_LINE } NEW_LINE } NEW_LINE } </s>


INFO - 01/15/22 17:22:29 - 1 day, 4:57:45 - ========== BT go_sa-cpp_sa example ==========
INFO - 01/15/22 17:22:29 - 1 day, 4:57:45 - Generated source sent: </s> // ▁ System . Boolean ▁ UnityEngine . SocialPlatforms . Gamepad . Gamepad : : get _ Active ( ) ENDCOM extern " C " IL2CPP_METHOD_ATTR bool Gamepad_get_Active_m122067438 ( Gamepad_t151567438 * __this , const RuntimeMethod * method ) { { Gamepad_t1567438 * L_0 = __this -> get_game_pad_7 ( ) ; return L_0 ; } } </s>
INFO - 01/15/22 17:22:30 - 1 day, 4:57:45 - Target (x1) sent: </s> func ( client AppServicePlansClient ) DeletePreparer ( ctx context . Context , resourceGroupName string , name string ) ( * http . Request , error ) { pathParameters := map [ string ] interface { } { " name " : autorest . Encode ( " path " , name ) , " resourceGroupName " : autorest . Encode ( " path " , resourceGroupName ) , " subscriptionId " : autorest . Encode ( " path " , client . SubscriptionID ) , } NEW_LINE const APIVersion = "2021-02-01" NEW_LINE queryParameters := map [ string ] interface { } { " api - version " : APIVersion , } NEW_LINE preparer := autorest . CreatePreparer ( autorest . AsDelete ( ) , autorest . WithBaseURL ( client . BaseURI ) , autorest . WithPathParameters ( " / subscriptions / { subscriptionId } / resourceGroups / { resourceGroupName } / providers / Microsoft . Web / serverfarms / { name } " , pathParameters ) , autorest . WithQueryParameters ( queryParameters ) ) NEW_LINE return preparer . Prepare ( ( & http . Request { } ) . WithContext ( ctx ) ) NEW_LINE } </s>

INFO - 01/15/22 17:22:30 - 1 day, 4:57:45 - Generated source tok: </s> // ▁ System . Boolean ▁ Unity@@ Engine . Social@@ Platforms . Game@@ pad . Game@@ pad : : get _ Active ( ) ENDCOM extern " C " IL2CPP_@@ METHOD_@@ ATTR bool Game@@ pad@@ _@@ get_@@ Active@@ _m@@ 12@@ 20@@ 67@@ 4@@ 38 ( Game@@ pad@@ _t@@ 15@@ 15@@ 67@@ 4@@ 38 * __this , const Runtime@@ Method * method ) { { Game@@ pad@@ _t@@ 15@@ 67@@ 4@@ 38 * L_0 = __this -> get_@@ game_@@ pad@@ _@@ 7 ( ) ; return L_0 ; } } </s>
INFO - 01/15/22 17:22:30 - 1 day, 4:57:45 - Target (x1) tok: </s> func ( client AppService@@ Plan@@ sClient ) DeletePreparer ( ctx context . Context , resourceGroupName string , name string ) ( * http . Request , error ) { pathParameters := map [ string ] interface { } { " name " : autorest . Encode ( " path " , name ) , " resourceGroupName " : autorest . Encode ( " path " , resourceGroupName ) , " subscriptionId " : autorest . Encode ( " path " , client . SubscriptionID ) , } NEW_LINE const APIVersion = "20@@ 21@@ -02@@ -01" NEW_LINE queryParameters := map [ string ] interface { } { " api - version " : APIVersion , } NEW_LINE preparer := autorest . CreatePreparer ( autorest . As@@ Delete ( ) , autorest . WithBaseURL ( client . BaseURI ) , autorest . WithPathParameters ( " / subscriptions / { subscriptionId } / resourceGroups / { resourceGroupName } / providers / Microsoft . Web / server@@ far@@ ms / { name } " , pathParameters ) , autorest . WithQueryParameters ( queryParameters ) ) NEW_LINE return preparer . Prepare ( ( & http . Request { } ) . WithContext ( ctx ) ) NEW_LINE } </s>


INFO - 01/15/22 17:22:41 - 1 day, 4:57:56 - ========== BT go_sa-java_sa example ==========
INFO - 01/15/22 17:22:41 - 1 day, 4:57:56 - Generated source sent: </s> /* * STRNEWLINE ▁ * ▁ @ param ▁ args ▁ the ▁ command ▁ line ▁ arguments STRNEWLINE ▁ */ public static void main ( String args [ ] ) { /* ▁ Set ▁ the ▁ Nimbus ▁ look ▁ and ▁ feel ▁ */ // < editor - fold ▁ defaultstate = " collapsed " ▁ desc = " ▁ Look ▁ and ▁ feel ▁ setting ▁ code ▁ ( optional ) ▁ " > ENDCOM /* ▁ If ▁ Nimbus ▁ ( introduced ▁ in ▁ Java ▁ SE ▁ 6 ) ▁ is ▁ not ▁ available , ▁ stay ▁ with ▁ the ▁ default ▁ look ▁ and ▁ feel . STRNEWLINE ▁ * ▁ For ▁ details ▁ see ▁ http : // download . oracle . com / javase / tutorial / uiswing / lookandfeel / plaf . html ▁ STRNEWLINE ▁ */ try { for ( javax . swing . UIManager . LookAndFeelInfo info : javax . swing . UIManager . getInstalledLookAndFeels ( ) ) { if ( " Nimbus " . equals ( info . getName ( ) ) ) { javax . swing . UIManager . setLookAndFeel ( info . getClassName ( ) ) ; break ; } } } catch ( ClassNotFoundException ex ) { java . util . logging . Logger . getLogger ( OauthAuthLoginDialog </s>
INFO - 01/15/22 17:22:41 - 1 day, 4:57:56 - Target (x1) sent: </s> func ( o * OauthAuthInternalServerError ) readResponse ( response runtime . ClientResponse , consumer runtime . Consumer , formats strfmt . Registry ) error { o . Payload = new ( models . GenericError ) NEW_LINE // ▁ response ▁ payload ENDCOM if err := consumer . Consume ( response . Body ( ) , o . Payload ) ; err != nil && err != io . EOF { return err NEW_LINE } NEW_LINE return nil NEW_LINE } </s>

INFO - 01/15/22 17:22:41 - 1 day, 4:57:56 - Generated source tok: </s> /* * STRNEWLINE ▁ * ▁ @ param ▁ args ▁ the ▁ command ▁ line ▁ arguments STRNEWLINE ▁ */ public static void main ( String args [ ] ) { /* ▁ Set ▁ the ▁ N@@ im@@ bus ▁ look ▁ and ▁ fe@@ el ▁ */ // < editor - fold ▁ default@@ state = " collap@@ sed " ▁ desc = " ▁ Look ▁ and ▁ fe@@ el ▁ setting ▁ code ▁ ( optional ) ▁ " > ENDCOM /* ▁ If ▁ N@@ im@@ bus ▁ ( introdu@@ ced ▁ in ▁ Java ▁ SE ▁ 6 ) ▁ is ▁ not ▁ available , ▁ st@@ ay ▁ with ▁ the ▁ default ▁ look ▁ and ▁ fe@@ el . STRNEWLINE ▁ * ▁ For ▁ details ▁ see ▁ http : // download . oracle . com / java@@ se / tut@@ orial / u@@ is@@ w@@ ing / look@@ and@@ fe@@ el / pla@@ f . html ▁ STRNEWLINE ▁ */ try { for ( javax . swing . UIManager . LookAndFeel@@ Info info : javax . swing . UIManager . get@@ Installed@@ LookAndFe@@ els ( ) ) { if ( " N@@ im@@ bus " . equals ( info . getName ( ) ) ) { javax . swing . UIManager . set@@ LookAndFeel ( info . getClassName ( ) ) ; break ; } } } catch ( ClassNotFoundException ex ) { java . util . logging . Logger . getLogger ( Oauth@@ Auth@@ Login@@ Dialog </s>
INFO - 01/15/22 17:22:41 - 1 day, 4:57:56 - Target (x1) tok: </s> func ( o * Oauth@@ Auth@@ InternalServerError ) readResponse ( response runtime . ClientResponse , consumer runtime . Consumer , formats strfmt . Registry ) error { o . Payload = new ( models . Generic@@ Error ) NEW_LINE // ▁ response ▁ payload ENDCOM if err := consumer . Consume ( response . Body ( ) , o . Payload ) ; err != nil && err != io . EOF { return err NEW_LINE } NEW_LINE return nil NEW_LINE } </s>


INFO - 01/15/22 17:22:55 - 1 day, 4:58:10 - ========== BT java_sa-go_sa example ==========
INFO - 01/15/22 17:22:55 - 1 day, 4:58:10 - Generated source sent: </s> func ( m * method2440 ) method2440 ( ) { m . print ( " hello : ▁ method2440" ) NEW_LINE } </s>
INFO - 01/15/22 17:22:55 - 1 day, 4:58:10 - Target (x1) sent: </s> public static void method2440 ( ) { System . out . print ( " hello : ▁ method2440" ) ; } </s>

INFO - 01/15/22 17:22:55 - 1 day, 4:58:10 - Generated source tok: </s> func ( m * method@@ 24@@ 40 ) method@@ 24@@ 40 ( ) { m . print ( " hello : ▁ method@@ 24@@ 40" ) NEW_LINE } </s>
INFO - 01/15/22 17:22:55 - 1 day, 4:58:10 - Target (x1) tok: </s> public static void method@@ 24@@ 40 ( ) { System . out . print ( " hello : ▁ method@@ 24@@ 40" ) ; } </s>


INFO - 01/15/22 17:23:26 - 1 day, 4:58:41 - ========== BT rust_sa-java_sa example ==========
INFO - 01/15/22 17:23:26 - 1 day, 4:58:41 - Generated source sent: </s> /* * STRNEWLINE ▁ * ▁ @ param ▁ args ▁ the ▁ command ▁ line ▁ arguments STRNEWLINE ▁ */ public static void main ( String [ ] args ) { assert ( args . length == 0 ) ; // ▁ int ▁ [ ] ▁ str1 ▁ = ▁ new ▁ int [ ] ▁ { ▁ 1 , ▁ 2 , ▁ 3 , ▁ 4 , ▁ 5 , ▁ 6 , ▁ 7 , ▁ 8 , ▁ 9 , ▁ 10 , ▁ 11 , ▁ 12 , ▁ 13 , ▁ 14 , ▁ 15 , ▁ 16 , ▁ 17 , ▁ 18 , ▁ 19 , ▁ 20 , ▁ 21 , ▁ 22 , ▁ 23 , ▁ 24 , ▁ 25 , ▁ 26 , ▁ 27 , ▁ 28 , ▁ 29 , ▁ 30 , ▁ 31 , ▁ 32 , ▁ 33 , ▁ 34 , ▁ 35 , ▁ 36 , ▁ 37 , ▁ 38 , ▁ 39 , ▁ 40 , ▁ 41 , ▁ 42 , ▁ 43 , ▁ 44 , ▁ 45 , ▁ 46 , ▁ 47 , ▁ 48 , ▁ 49 , ▁ 50 , ▁ 51 , ▁ 52 , ▁ 53 , ▁ 54 , ▁ 55 , ▁ 56 , ▁ 57 , ▁ 58 , ▁ 59 , ▁ 60 , ▁ 61 , ▁ 62 , ▁ 63 , ▁ 64 , ▁ 65 , ▁ 66 , ▁ 67 , ▁ 68 , ▁ 69 , ▁ 70 , ▁ 71 , ▁ 72 , ▁ 73 , ▁ 74 , ▁ 75 , ▁ 76 , ▁ 77 , ▁ 78 , ▁ 79 , ▁ 80 , ▁ 81 , ▁ 82 , ▁ 83 , ▁ 84 , ▁ 85 , ▁ 86 , ▁ 87 , ▁ 88 , ▁ 89 , ▁ 90 , ▁ 91 , ▁ 92 , ▁ 93 , ▁ 94 , ▁ 95 , ▁ 96 , ▁ 97 , ▁ 98 , ▁ 99 , ▁ 100 , ▁ 101 , ▁ 102 , ▁ 103 , ▁ 104 , ▁ 105 , ▁ 106 , ▁ 107 , ▁ 108 , ▁ 109 , ▁ 110 , ▁ 111 , ▁ 112 , ▁ 113 , ▁ 114 , ▁ 115 , ▁ 116 , ▁ 117 , ▁ 118 , ▁ 119 , ▁ 120 , ▁ 121 , ▁ 122 , ▁ 123 , ▁ 124 , ▁ 125 , ▁ 126 , ▁ 127 , ▁ 128 , ▁ 129 , ▁ 130 , ▁ 131 , ▁ 132 , ▁ 133 , ▁ 134 , ▁ 135 , ▁ 136 , ▁ 137 , ▁ 138 , ▁ 139 , ▁ 140 , ▁ 141 , ▁ 142 , ▁ 143 , ▁ 144 , ▁ 145 , ▁ 146 , ▁ 147 , ▁ 148 , ▁ 149 , ▁ 150 , ▁ 151 , ▁ 152 , ▁ 153 , ▁ 154 , ▁ 155 , ▁ 156 , ▁ 157 , ▁ 158 , ▁ 158 , ▁ 159 , ▁ 160 , ▁ 161 , ▁ 162 , ▁ 163 , ▁ 164 , ▁ 165 , ▁ 166 , ▁ 167 , ▁ 168 , ▁ 169 , ▁ 170 , ▁ 171 , ▁ 172 , ▁ 172 , ▁ 173 , ▁ 174 , ▁ 175 , ▁ 176 , ▁ 177 , ▁ 178 , ▁ 179 , ▁ 180 , ▁ 181 , ▁ 182 , ▁ 183 , ▁ 184 , ▁ 185 , ▁ 186 , ▁ 187 , ▁ 188 , ▁ 189 , ▁ 190 , ▁ 191 , ▁ 192 , ▁ 193 , ▁ 194 , ▁ 195 , ▁ 196 , ▁ 196 , ▁ 197 , ▁ 198 , ▁ 199 , ▁ 200 , ▁ 201 , ▁ 202 , ▁ 203 , ▁ 204 , ▁ 205 , ▁ 206 , ▁ 206 , ▁ 207 , ▁ 208 , ▁ 209 , ▁ 210 , ▁ 211 , ▁ 212 , ▁ 213 , ▁ 214 , ▁ 215 , ▁ 216 , ▁ 217 , ▁ 218 , ▁ 219 , ▁ 220 , ▁ 221 , ▁ 222 , ▁ 223 , ▁ 224 , ▁ 225 , ▁ 226 , ▁ 227 , ▁ 228 , ▁ 229 , ▁ 230 , ▁ 231 , ▁ 232 , ▁ 233 , ▁ 234 , ▁ 235 , ▁ 236 , ▁ 237 , ▁ 238 , ▁ 239 , ▁ 240 , ▁ 241 , ▁ 242 , ▁ 243 , ▁ 244 , ▁ 245 , ▁ 246 , ▁ 247 , ▁ 248 , ▁ 249 , ▁ 250 , ▁ 251 , ▁ 252 , ▁ 253 , ▁ 254 , ▁ 255 , ▁ 256 , ▁ 257 , ▁ 258 , ▁ 259 , ▁ 260 , ▁ 261 , ▁ 262 , ▁ 263 , ▁ 264 , ▁ 265 , ▁ 266 , ▁ 267 , ▁ 268 , ▁ 269 , ▁ 270 , ▁ 272 , ▁ 273 , ▁ 274 , ▁ 275 , ▁ 276 , ▁ 277 , ▁ 278 , ▁ 278 , ▁ 279 , ▁ 280 , ▁ 281 , ▁ 282 , ▁ 283 , ▁ 284 , ▁ 285 , ▁ 286 , ▁ 287 , ▁ 288 , ▁ 289 , ▁ 290 , ▁ 291 , ▁ 292 , ▁ 293 , ▁ 294 , ▁ 295 , ▁ 296 , ▁ 297 , ▁ 278 , ▁ 278 , ▁ 279 , ▁ 280 , ▁ 281 , ▁ 282 , ▁ 283 , ▁ 284 , ▁ 285 , ▁ 286 , ▁ 287 , ▁ 288 , </s>
INFO - 01/15/22 17:23:26 - 1 day, 4:58:41 - Target (x1) sent: </s> fn qt_doc_parser_test ( ) { assert ! ( are_argument_types_equal ( & " Q _ CORE _ EXPORT ▁ int ▁ qstricmp ( const ▁ char ▁ * , ▁ const ▁ char ▁ * ) " . to_string ( ) ,ENDCOM & " int ▁ qstricmp ( const ▁ char ▁ * ▁ str1 , ▁ const ▁ char ▁ * ▁ str2 ) " . to_string ( ) , ) ) ; assert ! ( are_argument_types_equal ( & " static ▁ void ▁ exit ▁ ( ▁ int ▁ retcode ▁ = ▁ 0 ▁ ) " . to_string ( ) ,ENDCOM & " static ▁ void ▁ exit ( int ▁ returnCode ▁ = ▁ 0 ) " . to_string ( ) , ) ) ; assert ! ( are_argument_types_equal ( & " static ▁ QMetaObject ▁ : : ▁ Connection ▁ connect ▁ ( ▁ const ▁ QObject ▁ * ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ sender ▁ , ▁ const ▁ char ▁ * ▁ signal ▁ , ▁ const ▁ QObject ▁ * ▁ receiver ▁ , ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ const ▁ char ▁ * ▁ member ▁ , ▁ Qt ▁ : : ▁ ConnectionType ▁ = ▁ Qt ▁ : : ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ AutoConnection ▁ ) " . to_string ( ) ,ENDCOM & " static ▁ QMetaObject : : Connection ▁ connect ( const ▁ QObject ▁ * ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ sender , ▁ const ▁ char ▁ * ▁ signal , ▁ const ▁ QObject ▁ * ▁ receiver , ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ const ▁ char ▁ * ▁ method , ▁ Qt : : ConnectionType ▁ type ▁ = ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ Qt : : AutoConnection ) " . to_string ( ) , ) ) ; } </s>

INFO - 01/15/22 17:23:26 - 1 day, 4:58:41 - Generated source tok: </s> /* * STRNEWLINE ▁ * ▁ @ param ▁ args ▁ the ▁ command ▁ line ▁ arguments STRNEWLINE ▁ */ public static void main ( String [ ] args ) { assert ( args . length == 0 ) ; // ▁ int ▁ [ ] ▁ str1 ▁ = ▁ new ▁ int [ ] ▁ { ▁ 1 , ▁ 2 , ▁ 3 , ▁ 4 , ▁ 5 , ▁ 6 , ▁ 7 , ▁ 8 , ▁ 9 , ▁ 10 , ▁ 11 , ▁ 12 , ▁ 13 , ▁ 14 , ▁ 15 , ▁ 16 , ▁ 17 , ▁ 18 , ▁ 19 , ▁ 20 , ▁ 21 , ▁ 22 , ▁ 23 , ▁ 24 , ▁ 25 , ▁ 26 , ▁ 27 , ▁ 28 , ▁ 29 , ▁ 30 , ▁ 31 , ▁ 32 , ▁ 33 , ▁ 34 , ▁ 35 , ▁ 36 , ▁ 37 , ▁ 38 , ▁ 39 , ▁ 40 , ▁ 41 , ▁ 42 , ▁ 43 , ▁ 44 , ▁ 45 , ▁ 46 , ▁ 47 , ▁ 48 , ▁ 49 , ▁ 50 , ▁ 51 , ▁ 52 , ▁ 53 , ▁ 54 , ▁ 55 , ▁ 56 , ▁ 57 , ▁ 58 , ▁ 59 , ▁ 60 , ▁ 61 , ▁ 62 , ▁ 63 , ▁ 64 , ▁ 65 , ▁ 66 , ▁ 67 , ▁ 68 , ▁ 69 , ▁ 70 , ▁ 71 , ▁ 72 , ▁ 73 , ▁ 74 , ▁ 75 , ▁ 76 , ▁ 77 , ▁ 78 , ▁ 79 , ▁ 80 , ▁ 81 , ▁ 82 , ▁ 83 , ▁ 84 , ▁ 85 , ▁ 86 , ▁ 87 , ▁ 88 , ▁ 89 , ▁ 90 , ▁ 91 , ▁ 92 , ▁ 93 , ▁ 94 , ▁ 95 , ▁ 96 , ▁ 97 , ▁ 98 , ▁ 99 , ▁ 100 , ▁ 101 , ▁ 102 , ▁ 103 , ▁ 104 , ▁ 105 , ▁ 106 , ▁ 107 , ▁ 108 , ▁ 109 , ▁ 110 , ▁ 111 , ▁ 112 , ▁ 113 , ▁ 114 , ▁ 115 , ▁ 116 , ▁ 117 , ▁ 118 , ▁ 119 , ▁ 120 , ▁ 121 , ▁ 122 , ▁ 123 , ▁ 124 , ▁ 125 , ▁ 126 , ▁ 127 , ▁ 128 , ▁ 129 , ▁ 130 , ▁ 131 , ▁ 132 , ▁ 133 , ▁ 134 , ▁ 135 , ▁ 136 , ▁ 137 , ▁ 138 , ▁ 139 , ▁ 140 , ▁ 141 , ▁ 142 , ▁ 143 , ▁ 144 , ▁ 145 , ▁ 146 , ▁ 147 , ▁ 148 , ▁ 149 , ▁ 150 , ▁ 151 , ▁ 152 , ▁ 153 , ▁ 154 , ▁ 155 , ▁ 156 , ▁ 157 , ▁ 158 , ▁ 158 , ▁ 159 , ▁ 160 , ▁ 161 , ▁ 162 , ▁ 163 , ▁ 164 , ▁ 165 , ▁ 166 , ▁ 167 , ▁ 168 , ▁ 169 , ▁ 170 , ▁ 171 , ▁ 172 , ▁ 172 , ▁ 173 , ▁ 174 , ▁ 175 , ▁ 176 , ▁ 177 , ▁ 178 , ▁ 179 , ▁ 180 , ▁ 181 , ▁ 182 , ▁ 183 , ▁ 184 , ▁ 185 , ▁ 186 , ▁ 187 , ▁ 188 , ▁ 189 , ▁ 190 , ▁ 191 , ▁ 192 , ▁ 193 , ▁ 194 , ▁ 195 , ▁ 196 , ▁ 196 , ▁ 197 , ▁ 198 , ▁ 199 , ▁ 200 , ▁ 201 , ▁ 202 , ▁ 203 , ▁ 204 , ▁ 205 , ▁ 206 , ▁ 206 , ▁ 207 , ▁ 208 , ▁ 209 , ▁ 210 , ▁ 211 , ▁ 212 , ▁ 213 , ▁ 214 , ▁ 215 , ▁ 216 , ▁ 217 , ▁ 218 , ▁ 219 , ▁ 220 , ▁ 221 , ▁ 222 , ▁ 223 , ▁ 224 , ▁ 225 , ▁ 226 , ▁ 227 , ▁ 228 , ▁ 229 , ▁ 230 , ▁ 231 , ▁ 232 , ▁ 233 , ▁ 234 , ▁ 235 , ▁ 236 , ▁ 237 , ▁ 238 , ▁ 239 , ▁ 240 , ▁ 241 , ▁ 242 , ▁ 243 , ▁ 244 , ▁ 245 , ▁ 246 , ▁ 247 , ▁ 248 , ▁ 249 , ▁ 250 , ▁ 251 , ▁ 252 , ▁ 253 , ▁ 254 , ▁ 255 , ▁ 256 , ▁ 257 , ▁ 258 , ▁ 259 , ▁ 260 , ▁ 261 , ▁ 262 , ▁ 263 , ▁ 264 , ▁ 265 , ▁ 266 , ▁ 267 , ▁ 268 , ▁ 269 , ▁ 270 , ▁ 272 , ▁ 273 , ▁ 274 , ▁ 275 , ▁ 276 , ▁ 277 , ▁ 278 , ▁ 278 , ▁ 279 , ▁ 280 , ▁ 281 , ▁ 282 , ▁ 283 , ▁ 284 , ▁ 285 , ▁ 286 , ▁ 287 , ▁ 288 , ▁ 289 , ▁ 290 , ▁ 291 , ▁ 292 , ▁ 293 , ▁ 294 , ▁ 295 , ▁ 296 , ▁ 297 , ▁ 278 , ▁ 278 , ▁ 279 , ▁ 280 , ▁ 281 , ▁ 282 , ▁ 283 , ▁ 284 , ▁ 285 , ▁ 286 , ▁ 287 , ▁ 288 , </s>
INFO - 01/15/22 17:23:26 - 1 day, 4:58:41 - Target (x1) tok: </s> fn qt_@@ doc_@@ parser@@ _test ( ) { assert ! ( are_@@ argument_@@ types_@@ equal ( & " Q _ CORE _ EXPORT ▁ int ▁ q@@ stricmp ( const ▁ char ▁ * , ▁ const ▁ char ▁ * ) " . to_string ( ) ,@@ ENDCOM & " int ▁ q@@ stricmp ( const ▁ char ▁ * ▁ str1 , ▁ const ▁ char ▁ * ▁ str2 ) " . to_string ( ) , ) ) ; assert ! ( are_@@ argument_@@ types_@@ equal ( & " static ▁ void ▁ exit ▁ ( ▁ int ▁ retcode ▁ = ▁ 0 ▁ ) " . to_string ( ) ,@@ ENDCOM & " static ▁ void ▁ exit ( int ▁ returnCode ▁ = ▁ 0 ) " . to_string ( ) , ) ) ; assert ! ( are_@@ argument_@@ types_@@ equal ( & " static ▁ QMetaObject ▁ : : ▁ Connection ▁ connect ▁ ( ▁ const ▁ QObject ▁ * ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ sender ▁ , ▁ const ▁ char ▁ * ▁ signal ▁ , ▁ const ▁ QObject ▁ * ▁ receiver ▁ , ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ const ▁ char ▁ * ▁ member ▁ , ▁ Qt ▁ : : ▁ Connection@@ Type ▁ = ▁ Qt ▁ : : ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ Auto@@ Connection ▁ ) " . to_string ( ) ,@@ ENDCOM & " static ▁ QMetaObject : : Connection ▁ connect ( const ▁ QObject ▁ * ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ sender , ▁ const ▁ char ▁ * ▁ signal , ▁ const ▁ QObject ▁ * ▁ receiver , ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ const ▁ char ▁ * ▁ method , ▁ Qt : : Connection@@ Type ▁ type ▁ = ▁ \ STRNEWLINE ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ Qt : : Auto@@ Connection ) " . to_string ( ) , ) ) ; } </s>

INFO - 01/15/22 17:30:02 - 1 day, 5:05:17 -     395 -    0.15 sent/s -    23.36 words/s - AE-cpp_sa:  0.8091 || AE-java_sa:  0.8340 || AE-go_sa:  0.7261 || AE-rust_sa:  0.6930 || BT-cpp_sa-go_sa-cpp_sa:  1.1608 || BT-cpp_sa-java_sa-cpp_sa:  1.2690 || BT-cpp_sa-rust_sa-cpp_sa:  1.1656 || BT-go_sa-cpp_sa-go_sa:  0.8671 || BT-go_sa-java_sa-go_sa:  0.9146 || BT-go_sa-rust_sa-go_sa:  0.9861 || BT-java_sa-cpp_sa-java_sa:  1.0137 || BT-java_sa-go_sa-java_sa:  0.9139 || BT-java_sa-rust_sa-java_sa:  1.2730 || BT-rust_sa-cpp_sa-rust_sa:  0.9516 || BT-rust_sa-go_sa-rust_sa:  1.1045 || BT-rust_sa-java_sa-rust_sa:  1.1463 -  - model LR: 1.8949e-04
INFO - 01/15/22 17:46:35 - 1 day, 5:21:50 -     400 -    1.28 sent/s -   235.96 words/s - AE-cpp_sa:  0.9060 || AE-java_sa:  0.7322 || AE-go_sa:  0.6631 || AE-rust_sa:  0.8407 || BT-cpp_sa-go_sa-cpp_sa:  1.1727 || BT-cpp_sa-java_sa-cpp_sa:  1.3162 || BT-cpp_sa-rust_sa-cpp_sa:  1.3283 || BT-go_sa-cpp_sa-go_sa:  0.9380 || BT-go_sa-java_sa-go_sa:  0.9433 || BT-go_sa-rust_sa-go_sa:  0.9695 || BT-java_sa-cpp_sa-java_sa:  0.9628 || BT-java_sa-go_sa-java_sa:  1.0373 || BT-java_sa-rust_sa-java_sa:  1.1391 || BT-rust_sa-cpp_sa-rust_sa:  0.9571 || BT-rust_sa-go_sa-rust_sa:  0.9768 || BT-rust_sa-java_sa-rust_sa:  1.0040 -  - model LR: 1.9189e-04
INFO - 01/15/22 18:03:08 - 1 day, 5:38:23 -     405 -    1.53 sent/s -   244.00 words/s - AE-cpp_sa:  0.8251 || AE-java_sa:  0.7651 || AE-go_sa:  0.6312 || AE-rust_sa:  0.5449 || BT-cpp_sa-go_sa-cpp_sa:  1.2344 || BT-cpp_sa-java_sa-cpp_sa:  1.1956 || BT-cpp_sa-rust_sa-cpp_sa:  1.2352 || BT-go_sa-cpp_sa-go_sa:  0.8339 || BT-go_sa-java_sa-go_sa:  1.0055 || BT-go_sa-rust_sa-go_sa:  0.9187 || BT-java_sa-cpp_sa-java_sa:  0.8771 || BT-java_sa-go_sa-java_sa:  1.0485 || BT-java_sa-rust_sa-java_sa:  1.1294 || BT-rust_sa-cpp_sa-rust_sa:  1.0806 || BT-rust_sa-go_sa-rust_sa:  1.1751 || BT-rust_sa-java_sa-rust_sa:  0.9505 -  - model LR: 1.9429e-04
INFO - 01/15/22 18:19:41 - 1 day, 5:54:56 -     410 -    1.02 sent/s -   242.16 words/s - AE-cpp_sa:  1.0204 || AE-java_sa:  0.7724 || AE-go_sa:  0.6602 || AE-rust_sa:  0.8223 || BT-cpp_sa-go_sa-cpp_sa:  1.2312 || BT-cpp_sa-java_sa-cpp_sa:  1.1694 || BT-cpp_sa-rust_sa-cpp_sa:  1.1605 || BT-go_sa-cpp_sa-go_sa:  0.8603 || BT-go_sa-java_sa-go_sa:  1.0276 || BT-go_sa-rust_sa-go_sa:  1.1867 || BT-java_sa-cpp_sa-java_sa:  0.9014 || BT-java_sa-go_sa-java_sa:  1.0197 || BT-java_sa-rust_sa-java_sa:  0.9531 || BT-rust_sa-cpp_sa-rust_sa:  0.9688 || BT-rust_sa-go_sa-rust_sa:  0.8952 || BT-rust_sa-java_sa-rust_sa:  0.8604 -  - model LR: 1.9668e-04
INFO - 01/15/22 18:36:14 - 1 day, 6:11:29 -     415 -    1.00 sent/s -   246.25 words/s - AE-cpp_sa:  0.7340 || AE-java_sa:  0.6293 || AE-go_sa:  0.7956 || AE-rust_sa:  0.6835 || BT-cpp_sa-go_sa-cpp_sa:  1.2129 || BT-cpp_sa-java_sa-cpp_sa:  1.1854 || BT-cpp_sa-rust_sa-cpp_sa:  1.0969 || BT-go_sa-cpp_sa-go_sa:  0.8598 || BT-go_sa-java_sa-go_sa:  0.8757 || BT-go_sa-rust_sa-go_sa:  1.0081 || BT-java_sa-cpp_sa-java_sa:  0.9989 || BT-java_sa-go_sa-java_sa:  0.9925 || BT-java_sa-rust_sa-java_sa:  1.0257 || BT-rust_sa-cpp_sa-rust_sa:  1.2137 || BT-rust_sa-go_sa-rust_sa:  0.8975 || BT-rust_sa-java_sa-rust_sa:  0.9371 -  - model LR: 1.9908e-04
INFO - 01/15/22 18:52:47 - 1 day, 6:28:02 -     420 -    1.68 sent/s -   239.82 words/s - AE-cpp_sa:  0.7604 || AE-java_sa:  0.5171 || AE-go_sa:  0.8230 || AE-rust_sa:  0.5494 || BT-cpp_sa-go_sa-cpp_sa:  1.0645 || BT-cpp_sa-java_sa-cpp_sa:  1.0863 || BT-cpp_sa-rust_sa-cpp_sa:  1.1821 || BT-go_sa-cpp_sa-go_sa:  0.8920 || BT-go_sa-java_sa-go_sa:  0.9396 || BT-go_sa-rust_sa-go_sa:  0.8228 || BT-java_sa-cpp_sa-java_sa:  0.7745 || BT-java_sa-go_sa-java_sa:  0.9479 || BT-java_sa-rust_sa-java_sa:  0.8078 || BT-rust_sa-cpp_sa-rust_sa:  0.8733 || BT-rust_sa-go_sa-rust_sa:  0.7788 || BT-rust_sa-java_sa-rust_sa:  0.9613 -  - model LR: 2.0148e-04
INFO - 01/15/22 22:28:05 - 1 day, 10:03:20 -     485 -    1.42 sent/s -   240.28 words/s - AE-cpp_sa:  0.7663 || AE-java_sa:  0.5492 || AE-go_sa:  0.5731 || AE-rust_sa:  0.5263 || BT-cpp_sa-go_sa-cpp_sa:  0.9198 || BT-cpp_sa-java_sa-cpp_sa:  0.8687 || BT-cpp_sa-rust_sa-cpp_sa:  0.9788 || BT-go_sa-cpp_sa-go_sa:  0.7791 || BT-go_sa-java_sa-go_sa:  0.7232 || BT-go_sa-rust_sa-go_sa:  0.8396 || BT-java_sa-cpp_sa-java_sa:  0.7629 || BT-java_sa-go_sa-java_sa:  0.8749 || BT-java_sa-rust_sa-java_sa:  0.7921 || BT-rust_sa-cpp_sa-rust_sa:  0.7429 || BT-rust_sa-go_sa-rust_sa:  0.8638 || BT-rust_sa-java_sa-rust_sa:  0.9317 -  - model LR: 2.3267e-04
INFO - 01/15/22 22:44:39 - 1 day, 10:19:54 -     490 -    1.47 sent/s -   237.98 words/s - AE-cpp_sa:  0.7648 || AE-java_sa:  0.5201 || AE-go_sa:  0.4189 || AE-rust_sa:  0.5714 || BT-cpp_sa-go_sa-cpp_sa:  0.9638 || BT-cpp_sa-java_sa-cpp_sa:  0.8886 || BT-cpp_sa-rust_sa-cpp_sa:  0.9156 || BT-go_sa-cpp_sa-go_sa:  0.6414 || BT-go_sa-java_sa-go_sa:  0.7617 || BT-go_sa-rust_sa-go_sa:  0.6745 || BT-java_sa-cpp_sa-java_sa:  0.5527 || BT-java_sa-go_sa-java_sa:  0.8777 || BT-java_sa-rust_sa-java_sa:  0.9342 || BT-rust_sa-cpp_sa-rust_sa:  0.7850 || BT-rust_sa-go_sa-rust_sa:  0.8339 || BT-rust_sa-java_sa-rust_sa:  0.6658 -  - model LR: 2.3504e-04
INFO - 01/15/22 22:44:39 - 1 day, 10:19:54 - ============ End of epoch 4 ============
