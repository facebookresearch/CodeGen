# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

jobs:
  build:
    docker:
      - image: cimg/python:3.10.6
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "ci_requirements.txt" }}
      - run:
          name: install firejail cmake java go
          command: |
            sudo apt-get --allow-releaseinfo-change update
            sudo apt-get install firejail cmake default-jdk clang-format
            pushd /tmp
            wget -c https://dl.google.com/go/go1.20.3.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.20.3.linux-amd64.tar.gz
            # wget -c https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz -O - | sudo tar -xz -C /usr/local
            popd
            sudo cp /usr/local/go/bin/go /usr/bin/
            # go get golang.org/x/tools/cmd/goimports
            go install golang.org/x/tools/cmd/goimports@latest

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate

            pip install -U pip setuptools
            pip install -r ci_requirements.txt

            # install rust
            curl https://sh.rustup.rs -sSf > rustup.sh
            bash rustup.sh -y

            mkdir -p tree-sitter
            cd tree-sitter
            for lang in cpp rust java python javascript go
            do
                echo $lang
                [ ! -d 'tree-sitter-'$lang ] && git clone https://github.com/tree-sitter/tree-sitter-$lang.git
                (cd tree-sitter-$lang && git pull)
            done
            cd ..

            git clone https://github.com/glample/fastBPE.git
            cd fastBPE
            g++ -std=c++11 -pthread -O3 fastBPE/main.cc -IfastBPE -o fast
            python setup.py install
            cd ..
            pip install fastBPE

            git clone https://github.com/openai/human-eval.git
            cat human-eval/human_eval/execution.py | sed "s/#                         exec(check_program, exec_globals)/                         exec(check_program, exec_globals)/" > human-eval/human_eval/execution2.py
            mv human-eval/human_eval/execution2.py human-eval/human_eval/execution.py
            pip install -e human-eval

      - save_cache:
          paths:
            - ./venv
            - ./tree-sitter
          key: v2-dependencies-{{ checksum "ci_requirements.txt" }}

      - run:
          name: install gtest
          command: |
            wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz
            tar xf release-1.8.0.tar.gz
            cd googletest-release-1.8.0
            cmake -DBUILD_SHARED_LIBS=ON .
            make
            sudo cp -a googletest/include/gtest /usr/include
            sudo cp -a googlemock/gtest/libgtest_main.so googlemock/gtest/libgtest.so /usr/lib/

      - run:
          name: Print install
          command: |
            . venv/bin/activate
            pip freeze

      - run:
          name: Run mypy
          command: |
            . venv/bin/activate
            mypy --version
            mypy codegen_sources

      - run:
          name: Run black
          when: always
          command: |
            . venv/bin/activate
            black --version
            black codegen_sources/. --diff
            black codegen_sources/. --check

      - run:
          name: Run pytest
          when: always
          command: |
            . venv/bin/activate
            pytest -vs codegen_sources --durations=20
